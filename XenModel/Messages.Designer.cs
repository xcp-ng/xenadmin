//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace XenAdmin {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Messages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Messages() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("XenAdmin.Messages", typeof(Messages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Activating virtual disks... ähnelt.
        /// </summary>
        public static string ACTION_ACTIVATING_MULTIPLE_VDIS_STATUS {
            get {
                return ResourceManager.GetString("ACTION_ACTIVATING_MULTIPLE_VDIS_STATUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Activating Multiple Virtual Disks ähnelt.
        /// </summary>
        public static string ACTION_ACTIVATING_MULTIPLE_VDIS_TITLE {
            get {
                return ResourceManager.GetString("ACTION_ACTIVATING_MULTIPLE_VDIS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changing control domain memory settings on &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ACTION_CHANGE_CONTROL_DOMAIN_MEMORY {
            get {
                return ResourceManager.GetString("ACTION_CHANGE_CONTROL_DOMAIN_MEMORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change disk size ähnelt.
        /// </summary>
        public static string ACTION_CHANGE_DISK_SIZE {
            get {
                return ResourceManager.GetString("ACTION_CHANGE_DISK_SIZE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change email options ähnelt.
        /// </summary>
        public static string ACTION_CHANGE_EMAIL_OPTIONS {
            get {
                return ResourceManager.GetString("ACTION_CHANGE_EMAIL_OPTIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change home server ähnelt.
        /// </summary>
        public static string ACTION_CHANGE_HOME_SERVER {
            get {
                return ResourceManager.GetString("ACTION_CHANGE_HOME_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Administrator password changed ähnelt.
        /// </summary>
        public static string ACTION_CHANGE_HOST_PASSWORD_DONE {
            get {
                return ResourceManager.GetString("ACTION_CHANGE_HOST_PASSWORD_DONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changing administrator password... ähnelt.
        /// </summary>
        public static string ACTION_CHANGE_HOST_PASSWORD_IN_PROGRESS {
            get {
                return ResourceManager.GetString("ACTION_CHANGE_HOST_PASSWORD_IN_PROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changing administrator password on {0} ähnelt.
        /// </summary>
        public static string ACTION_CHANGE_HOST_PASSWORD_TITLE {
            get {
                return ResourceManager.GetString("ACTION_CHANGE_HOST_PASSWORD_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change log destination ähnelt.
        /// </summary>
        public static string ACTION_CHANGE_LOG_DESTINATION {
            get {
                return ResourceManager.GetString("ACTION_CHANGE_LOG_DESTINATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changing memory settings for {0}... ähnelt.
        /// </summary>
        public static string ACTION_CHANGE_MEMORY_SETTINGS {
            get {
                return ResourceManager.GetString("ACTION_CHANGE_MEMORY_SETTINGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changed memory settings for {0} ähnelt.
        /// </summary>
        public static string ACTION_CHANGE_MEMORY_SETTINGS_DONE {
            get {
                return ResourceManager.GetString("ACTION_CHANGE_MEMORY_SETTINGS_DONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change multipath setting ähnelt.
        /// </summary>
        public static string ACTION_CHANGE_MULTIPATH {
            get {
                return ResourceManager.GetString("ACTION_CHANGE_MULTIPATH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Removing IP address from {0}... ähnelt.
        /// </summary>
        public static string ACTION_CHANGE_NETWORKING_BRINGING_DOWN {
            get {
                return ResourceManager.GetString("ACTION_CHANGE_NETWORKING_BRINGING_DOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IP address on {0} deconfigured ähnelt.
        /// </summary>
        public static string ACTION_CHANGE_NETWORKING_BRINGING_DOWN_DONE {
            get {
                return ResourceManager.GetString("ACTION_CHANGE_NETWORKING_BRINGING_DOWN_DONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configuring IP address on {0}... ähnelt.
        /// </summary>
        public static string ACTION_CHANGE_NETWORKING_BRINGING_UP {
            get {
                return ResourceManager.GetString("ACTION_CHANGE_NETWORKING_BRINGING_UP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IP address on {0} configured ähnelt.
        /// </summary>
        public static string ACTION_CHANGE_NETWORKING_BRINGING_UP_DONE {
            get {
                return ResourceManager.GetString("ACTION_CHANGE_NETWORKING_BRINGING_UP_DONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Management facility on {0} deconfigured ähnelt.
        /// </summary>
        public static string ACTION_CHANGE_NETWORKING_DEPURPOSED {
            get {
                return ResourceManager.GetString("ACTION_CHANGE_NETWORKING_DEPURPOSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deconfiguring management facility on {0}... ähnelt.
        /// </summary>
        public static string ACTION_CHANGE_NETWORKING_DEPURPOSING {
            get {
                return ResourceManager.GetString("ACTION_CHANGE_NETWORKING_DEPURPOSING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Networking reconfiguration done ähnelt.
        /// </summary>
        public static string ACTION_CHANGE_NETWORKING_DONE {
            get {
                return ResourceManager.GetString("ACTION_CHANGE_NETWORKING_DONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Management interface on {0} configured ähnelt.
        /// </summary>
        public static string ACTION_CHANGE_NETWORKING_MANAGEMENT_RECONFIGURED {
            get {
                return ResourceManager.GetString("ACTION_CHANGE_NETWORKING_MANAGEMENT_RECONFIGURED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configuring management interface on {0}... ähnelt.
        /// </summary>
        public static string ACTION_CHANGE_NETWORKING_MANAGEMENT_RECONFIGURING {
            get {
                return ResourceManager.GetString("ACTION_CHANGE_NETWORKING_MANAGEMENT_RECONFIGURING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reconfiguring server networking ähnelt.
        /// </summary>
        public static string ACTION_CHANGE_NETWORKING_TITLE {
            get {
                return ResourceManager.GetString("ACTION_CHANGE_NETWORKING_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change power on settings ähnelt.
        /// </summary>
        public static string ACTION_CHANGE_POWER_ON {
            get {
                return ResourceManager.GetString("ACTION_CHANGE_POWER_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change shadow multiplier ähnelt.
        /// </summary>
        public static string ACTION_CHANGE_SHADOW_MULTIPLIER {
            get {
                return ResourceManager.GetString("ACTION_CHANGE_SHADOW_MULTIPLIER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disk size changed for &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string ACTION_CHANGED_DISK_SIZE_FOR {
            get {
                return ResourceManager.GetString("ACTION_CHANGED_DISK_SIZE_FOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changing disk size for &apos;{0}&apos;... ähnelt.
        /// </summary>
        public static string ACTION_CHANGING_DISK_SIZE_FOR {
            get {
                return ResourceManager.GetString("ACTION_CHANGING_DISK_SIZE_FOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changing email options for &apos;{0}&apos;... ähnelt.
        /// </summary>
        public static string ACTION_CHANGING_EMAIL_OPTIONS_FOR {
            get {
                return ResourceManager.GetString("ACTION_CHANGING_EMAIL_OPTIONS_FOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changing home server for &apos;{0}&apos;... ähnelt.
        /// </summary>
        public static string ACTION_CHANGING_HOME_SERVER_FOR {
            get {
                return ResourceManager.GetString("ACTION_CHANGING_HOME_SERVER_FOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changing log destination for &apos;{0}&apos;... ähnelt.
        /// </summary>
        public static string ACTION_CHANGING_LOG_DESTINATION_FOR {
            get {
                return ResourceManager.GetString("ACTION_CHANGING_LOG_DESTINATION_FOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changing multipath setting for &apos;{0}&apos;... ähnelt.
        /// </summary>
        public static string ACTION_CHANGING_MULTIPATH_FOR {
            get {
                return ResourceManager.GetString("ACTION_CHANGING_MULTIPATH_FOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changing power on settings... ähnelt.
        /// </summary>
        public static string ACTION_CHANGING_POWER_ON {
            get {
                return ResourceManager.GetString("ACTION_CHANGING_POWER_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changing shadow multiplier for &apos;{0}&apos;... ähnelt.
        /// </summary>
        public static string ACTION_CHANGING_SHADOW_MULTIPLIER_FOR {
            get {
                return ResourceManager.GetString("ACTION_CHANGING_SHADOW_MULTIPLIER_FOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking disk space on {0} ähnelt.
        /// </summary>
        public static string ACTION_CHECK_DISK_SPACE_DESCRIPTION {
            get {
                return ResourceManager.GetString("ACTION_CHECK_DISK_SPACE_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check disk space ähnelt.
        /// </summary>
        public static string ACTION_CHECK_DISK_SPACE_TITLE {
            get {
                return ResourceManager.GetString("ACTION_CHECK_DISK_SPACE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cleaning up disk space on {0} ähnelt.
        /// </summary>
        public static string ACTION_CLEANUP_DISK_SPACE_DESCRIPTION {
            get {
                return ResourceManager.GetString("ACTION_CLEANUP_DISK_SPACE_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Successfully cleaned up disk space on {0} ähnelt.
        /// </summary>
        public static string ACTION_CLEANUP_DISK_SPACE_SUCCESS {
            get {
                return ResourceManager.GetString("ACTION_CLEANUP_DISK_SPACE_SUCCESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Clean up disk space ähnelt.
        /// </summary>
        public static string ACTION_CLEANUP_DISK_SPACE_TITLE {
            get {
                return ResourceManager.GetString("ACTION_CLEANUP_DISK_SPACE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configuring PVS-Accelerator ähnelt.
        /// </summary>
        public static string ACTION_CONFUGURE_PVS_SITE_DESCRIPTION {
            get {
                return ResourceManager.GetString("ACTION_CONFUGURE_PVS_SITE_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configured ähnelt.
        /// </summary>
        public static string ACTION_CONFUGURE_PVS_SITE_DONE {
            get {
                return ResourceManager.GetString("ACTION_CONFUGURE_PVS_SITE_DONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure PVS-Accelerator on &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ACTION_CONFUGURE_PVS_SITE_TITLE {
            get {
                return ResourceManager.GetString("ACTION_CONFUGURE_PVS_SITE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating {0} ... ähnelt.
        /// </summary>
        public static string ACTION_CREATE_BOND_DESCRIPTION {
            get {
                return ResourceManager.GetString("ACTION_CREATE_BOND_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} created ähnelt.
        /// </summary>
        public static string ACTION_CREATE_BOND_DONE {
            get {
                return ResourceManager.GetString("ACTION_CREATE_BOND_DONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating {0} ähnelt.
        /// </summary>
        public static string ACTION_CREATE_BOND_TITLE {
            get {
                return ResourceManager.GetString("ACTION_CREATE_BOND_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deactivating virtual disks... ähnelt.
        /// </summary>
        public static string ACTION_DEACTIVATING_MULTIPLE_VDIS_STATUS {
            get {
                return ResourceManager.GetString("ACTION_DEACTIVATING_MULTIPLE_VDIS_STATUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deactivating Multiple Virtual Disks ähnelt.
        /// </summary>
        public static string ACTION_DEACTIVATING_MULTIPLE_VDIS_TITLE {
            get {
                return ResourceManager.GetString("ACTION_DEACTIVATING_MULTIPLE_VDIS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleting cache configuration ähnelt.
        /// </summary>
        public static string ACTION_DELETE_PVS_SITE_DESCRIPTION {
            get {
                return ResourceManager.GetString("ACTION_DELETE_PVS_SITE_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Done ähnelt.
        /// </summary>
        public static string ACTION_DELETE_PVS_SITE_DONE {
            get {
                return ResourceManager.GetString("ACTION_DELETE_PVS_SITE_DONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleting cache configuration on &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ACTION_DELETE_PVS_SITE_TITLE {
            get {
                return ResourceManager.GetString("ACTION_DELETE_PVS_SITE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleting storage items... ähnelt.
        /// </summary>
        public static string ACTION_DELETING_MULTIPLE_STORAGE_ITEMS_STATUS {
            get {
                return ResourceManager.GetString("ACTION_DELETING_MULTIPLE_STORAGE_ITEMS_STATUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleting Multiple Storage Items ähnelt.
        /// </summary>
        public static string ACTION_DELETING_MULTIPLE_STORAGE_ITEMS_TITLE {
            get {
                return ResourceManager.GetString("ACTION_DELETING_MULTIPLE_STORAGE_ITEMS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Destroying {0} ... ähnelt.
        /// </summary>
        public static string ACTION_DESTROY_BOND_DESCRIPTION {
            get {
                return ResourceManager.GetString("ACTION_DESTROY_BOND_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} destroyed ähnelt.
        /// </summary>
        public static string ACTION_DESTROY_BOND_DONE {
            get {
                return ResourceManager.GetString("ACTION_DESTROY_BOND_DONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Destroying {0} ähnelt.
        /// </summary>
        public static string ACTION_DESTROY_BOND_TITLE {
            get {
                return ResourceManager.GetString("ACTION_DESTROY_BOND_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Detaching storage items... ähnelt.
        /// </summary>
        public static string ACTION_DETACHING_MULTIPLE_VDIS_STATUS {
            get {
                return ResourceManager.GetString("ACTION_DETACHING_MULTIPLE_VDIS_STATUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Detaching Multiple Storage Items ähnelt.
        /// </summary>
        public static string ACTION_DETACHING_MULTIPLE_VDIS_TITLE {
            get {
                return ResourceManager.GetString("ACTION_DETACHING_MULTIPLE_VDIS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disable Changed Block Tracking ähnelt.
        /// </summary>
        public static string ACTION_DISABLE_CHANGED_BLOCK_TRACKING {
            get {
                return ResourceManager.GetString("ACTION_DISABLE_CHANGED_BLOCK_TRACKING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disabling Changed Block Tracking for VM &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ACTION_DISABLE_CHANGED_BLOCK_TRACKING_FOR {
            get {
                return ResourceManager.GetString("ACTION_DISABLE_CHANGED_BLOCK_TRACKING_FOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disable IGMP snooping ähnelt.
        /// </summary>
        public static string ACTION_DISABLE_IGMP_SNOOPING {
            get {
                return ResourceManager.GetString("ACTION_DISABLE_IGMP_SNOOPING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disable live patching ähnelt.
        /// </summary>
        public static string ACTION_DISABLE_LIVE_PATCHING {
            get {
                return ResourceManager.GetString("ACTION_DISABLE_LIVE_PATCHING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disable PVS-Accelerator ähnelt.
        /// </summary>
        public static string ACTION_DISABLE_PVS_READ_CACHING {
            get {
                return ResourceManager.GetString("ACTION_DISABLE_PVS_READ_CACHING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disabling PVS-Accelerator for VM &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ACTION_DISABLE_PVS_READ_CACHING_FOR {
            get {
                return ResourceManager.GetString("ACTION_DISABLE_PVS_READ_CACHING_FOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disabling  ähnelt.
        /// </summary>
        public static string ACTION_DISABLE_VM_ENLIGHTENMENT_DESCRIPTION {
            get {
                return ResourceManager.GetString("ACTION_DISABLE_VM_ENLIGHTENMENT_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disable container management on VM &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ACTION_DISABLE_VM_ENLIGHTENMENT_TITLE {
            get {
                return ResourceManager.GetString("ACTION_DISABLE_VM_ENLIGHTENMENT_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disabled Changed Block Tracking for selected VMs ähnelt.
        /// </summary>
        public static string ACTION_DISABLED_CHANGED_BLOCK_TRACKING {
            get {
                return ResourceManager.GetString("ACTION_DISABLED_CHANGED_BLOCK_TRACKING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disabled PVS-Accelerator for selected VMs ähnelt.
        /// </summary>
        public static string ACTION_DISABLED_PVS_READ_CACHING {
            get {
                return ResourceManager.GetString("ACTION_DISABLED_PVS_READ_CACHING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disabling Changed Block Tracking for selected VMs ähnelt.
        /// </summary>
        public static string ACTION_DISABLING_CHANGED_BLOCK_TRACKING {
            get {
                return ResourceManager.GetString("ACTION_DISABLING_CHANGED_BLOCK_TRACKING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disabling live patching for &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ACTION_DISABLING_LIVE_PATCHING {
            get {
                return ResourceManager.GetString("ACTION_DISABLING_LIVE_PATCHING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disabling PVS-Accelerator for selected VMs ähnelt.
        /// </summary>
        public static string ACTION_DISABLING_PVS_READ_CACHING {
            get {
                return ResourceManager.GetString("ACTION_DISABLING_PVS_READ_CACHING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Activated disk... ähnelt.
        /// </summary>
        public static string ACTION_DISK_ACTIVATED {
            get {
                return ResourceManager.GetString("ACTION_DISK_ACTIVATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Activating disk... ähnelt.
        /// </summary>
        public static string ACTION_DISK_ACTIVATING {
            get {
                return ResourceManager.GetString("ACTION_DISK_ACTIVATING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Activating disk &apos;{0}&apos; on VM &apos;{1}&apos;... ähnelt.
        /// </summary>
        public static string ACTION_DISK_ACTIVATING_TITLE {
            get {
                return ResourceManager.GetString("ACTION_DISK_ACTIVATING_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Added disk ähnelt.
        /// </summary>
        public static string ACTION_DISK_ADDED {
            get {
                return ResourceManager.GetString("ACTION_DISK_ADDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adding disk ähnelt.
        /// </summary>
        public static string ACTION_DISK_ADDING {
            get {
                return ResourceManager.GetString("ACTION_DISK_ADDING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating disk &apos;{0}&apos; on SR &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string ACTION_DISK_ADDING_TITLE {
            get {
                return ResourceManager.GetString("ACTION_DISK_ADDING_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attaching disk to VM &apos;{0}&apos;... ähnelt.
        /// </summary>
        public static string ACTION_DISK_ATTACHING {
            get {
                return ResourceManager.GetString("ACTION_DISK_ATTACHING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deactivated disk ähnelt.
        /// </summary>
        public static string ACTION_DISK_DEACTIVATED {
            get {
                return ResourceManager.GetString("ACTION_DISK_DEACTIVATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deactivating disk... ähnelt.
        /// </summary>
        public static string ACTION_DISK_DEACTIVATING {
            get {
                return ResourceManager.GetString("ACTION_DISK_DEACTIVATING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deactivating disk &apos;{0}&apos; on VM &apos;{1}&apos;... ähnelt.
        /// </summary>
        public static string ACTION_DISK_DEACTIVATING_TITLE {
            get {
                return ResourceManager.GetString("ACTION_DISK_DEACTIVATING_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleting disk &apos;{0}&apos; from SR &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string ACTION_DISK_DELETING_TITLE {
            get {
                return ResourceManager.GetString("ACTION_DISK_DELETING_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Detached disk ähnelt.
        /// </summary>
        public static string ACTION_DISK_DETACHED {
            get {
                return ResourceManager.GetString("ACTION_DISK_DETACHED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Detaching disk ähnelt.
        /// </summary>
        public static string ACTION_DISK_DETACHING {
            get {
                return ResourceManager.GetString("ACTION_DISK_DETACHING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Detaching disk &apos;{0}&apos; from VM &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string ACTION_DISK_DETACHING_TITLE {
            get {
                return ResourceManager.GetString("ACTION_DISK_DETACHING_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Waiting for the volume to become available... ähnelt.
        /// </summary>
        public static string ACTION_DISK_WAITING_FOR_AVAILABLE {
            get {
                return ResourceManager.GetString("ACTION_DISK_WAITING_FOR_AVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configuring DR ähnelt.
        /// </summary>
        public static string ACTION_DR_CONFIGURING {
            get {
                return ResourceManager.GetString("ACTION_DR_CONFIGURING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool metadata replication disabled ähnelt.
        /// </summary>
        public static string ACTION_DR_DISABLED {
            get {
                return ResourceManager.GetString("ACTION_DR_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disabling pool metadata replication ähnelt.
        /// </summary>
        public static string ACTION_DR_DISABLING {
            get {
                return ResourceManager.GetString("ACTION_DR_DISABLING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disabling pool metadata replication on storage {0} ähnelt.
        /// </summary>
        public static string ACTION_DR_DISABLING_ON {
            get {
                return ResourceManager.GetString("ACTION_DR_DISABLING_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool metadata replication enabled ähnelt.
        /// </summary>
        public static string ACTION_DR_ENABLED {
            get {
                return ResourceManager.GetString("ACTION_DR_ENABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enabling pool metadata replication ähnelt.
        /// </summary>
        public static string ACTION_DR_ENABLING {
            get {
                return ResourceManager.GetString("ACTION_DR_ENABLING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enabling pool metadata replication on storage &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ACTION_DR_ENABLING_ON {
            get {
                return ResourceManager.GetString("ACTION_DR_ENABLING_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Recover vApp &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ACTION_DR_RECOVER_APPLIANCE_TITLE {
            get {
                return ResourceManager.GetString("ACTION_DR_RECOVER_APPLIANCE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; recovered ähnelt.
        /// </summary>
        public static string ACTION_DR_RECOVER_DONE {
            get {
                return ResourceManager.GetString("ACTION_DR_RECOVER_DONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Recovering ähnelt.
        /// </summary>
        public static string ACTION_DR_RECOVER_STATUS {
            get {
                return ResourceManager.GetString("ACTION_DR_RECOVER_STATUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Recover VM &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ACTION_DR_RECOVER_VM_TITLE {
            get {
                return ResourceManager.GetString("ACTION_DR_RECOVER_VM_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Storage Repositories prepared ähnelt.
        /// </summary>
        public static string ACTION_DR_TASK_CREATE_DONE {
            get {
                return ResourceManager.GetString("ACTION_DR_TASK_CREATE_DONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Preparing Storage Repositories ähnelt.
        /// </summary>
        public static string ACTION_DR_TASK_CREATE_STATUS {
            get {
                return ResourceManager.GetString("ACTION_DR_TASK_CREATE_STATUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Prepare Storage Repositories ähnelt.
        /// </summary>
        public static string ACTION_DR_TASK_CREATE_TITLE {
            get {
                return ResourceManager.GetString("ACTION_DR_TASK_CREATE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DR cleanup completed ähnelt.
        /// </summary>
        public static string ACTION_DR_TASK_DESTROY_DONE {
            get {
                return ResourceManager.GetString("ACTION_DR_TASK_DESTROY_DONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Performing DR cleanup... ähnelt.
        /// </summary>
        public static string ACTION_DR_TASK_DESTROY_STATUS {
            get {
                return ResourceManager.GetString("ACTION_DR_TASK_DESTROY_STATUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DR cleanup ({0}) ähnelt.
        /// </summary>
        public static string ACTION_DR_TASK_DESTROY_TITLE {
            get {
                return ResourceManager.GetString("ACTION_DR_TASK_DESTROY_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enable IGMP snooping ähnelt.
        /// </summary>
        public static string ACTION_ENABLE_IGMP_SNOOPING {
            get {
                return ResourceManager.GetString("ACTION_ENABLE_IGMP_SNOOPING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enable live patching ähnelt.
        /// </summary>
        public static string ACTION_ENABLE_LIVE_PATCHING {
            get {
                return ResourceManager.GetString("ACTION_ENABLE_LIVE_PATCHING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enable PVS-Accelerator ähnelt.
        /// </summary>
        public static string ACTION_ENABLE_PVS_READ_CACHING {
            get {
                return ResourceManager.GetString("ACTION_ENABLE_PVS_READ_CACHING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enabling PVS-Accelerator for VM &apos;{0}&apos; on &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string ACTION_ENABLE_PVS_READ_CACHING_FOR {
            get {
                return ResourceManager.GetString("ACTION_ENABLE_PVS_READ_CACHING_FOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enabling ähnelt.
        /// </summary>
        public static string ACTION_ENABLE_VM_ENLIGHTENMENT_DESCRIPTION {
            get {
                return ResourceManager.GetString("ACTION_ENABLE_VM_ENLIGHTENMENT_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enable container management on VM &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ACTION_ENABLE_VM_ENLIGHTENMENT_TITLE {
            get {
                return ResourceManager.GetString("ACTION_ENABLE_VM_ENLIGHTENMENT_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enabled PVS-Accelerator for selected VMs ähnelt.
        /// </summary>
        public static string ACTION_ENABLED_PVS_READ_CACHING {
            get {
                return ResourceManager.GetString("ACTION_ENABLED_PVS_READ_CACHING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enabling live patching for &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ACTION_ENABLING_LIVE_PATCHING {
            get {
                return ResourceManager.GetString("ACTION_ENABLING_LIVE_PATCHING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enabling PVS-Accelerator for selected VMs ähnelt.
        /// </summary>
        public static string ACTION_ENABLING_PVS_READ_CACHING {
            get {
                return ResourceManager.GetString("ACTION_ENABLING_PVS_READ_CACHING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export failed due to a block checksum mismatch.  Please retry the export. ähnelt.
        /// </summary>
        public static string ACTION_EXPORT_DESCRIPTION_BLOCK_CHECKSUM_FAILED {
            get {
                return ResourceManager.GetString("ACTION_EXPORT_DESCRIPTION_BLOCK_CHECKSUM_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export canceled ähnelt.
        /// </summary>
        public static string ACTION_EXPORT_DESCRIPTION_CANCELLED {
            get {
                return ResourceManager.GetString("ACTION_EXPORT_DESCRIPTION_CANCELLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export failed: disk full. ähnelt.
        /// </summary>
        public static string ACTION_EXPORT_DESCRIPTION_DISK_FULL {
            get {
                return ResourceManager.GetString("ACTION_EXPORT_DESCRIPTION_DISK_FULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export failed ähnelt.
        /// </summary>
        public static string ACTION_EXPORT_DESCRIPTION_FAILED {
            get {
                return ResourceManager.GetString("ACTION_EXPORT_DESCRIPTION_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export failed due to open destination file {0} failed ähnelt.
        /// </summary>
        public static string ACTION_EXPORT_DESCRIPTION_FAILED_OF_OPEN_FILE {
            get {
                return ResourceManager.GetString("ACTION_EXPORT_DESCRIPTION_FAILED_OF_OPEN_FILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export failed due to a header checksum mismatch.  Please retry the export. ähnelt.
        /// </summary>
        public static string ACTION_EXPORT_DESCRIPTION_HEADER_CHECKSUM_FAILED {
            get {
                return ResourceManager.GetString("ACTION_EXPORT_DESCRIPTION_HEADER_CHECKSUM_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exporting... ähnelt.
        /// </summary>
        public static string ACTION_EXPORT_DESCRIPTION_IN_PROGRESS {
            get {
                return ResourceManager.GetString("ACTION_EXPORT_DESCRIPTION_IN_PROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Preparing to export ähnelt.
        /// </summary>
        public static string ACTION_EXPORT_DESCRIPTION_PREPARING {
            get {
                return ResourceManager.GetString("ACTION_EXPORT_DESCRIPTION_PREPARING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exported ähnelt.
        /// </summary>
        public static string ACTION_EXPORT_DESCRIPTION_SUCCESSFUL {
            get {
                return ResourceManager.GetString("ACTION_EXPORT_DESCRIPTION_SUCCESSFUL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export failed: disk in use elsewhere. ähnelt.
        /// </summary>
        public static string ACTION_EXPORT_DESCRIPTION_VDI_IN_USE {
            get {
                return ResourceManager.GetString("ACTION_EXPORT_DESCRIPTION_VDI_IN_USE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export canceled and deleting destination file &apos;{0}&apos; failed ähnelt.
        /// </summary>
        public static string ACTION_EXPORT_POOL_RESOURCE_CANCEL_AND_FILE_UNDELETE {
            get {
                return ResourceManager.GetString("ACTION_EXPORT_POOL_RESOURCE_CANCEL_AND_FILE_UNDELETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exporting pool resource list from &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ACTION_EXPORT_POOL_RESOURCE_LIST_FROM_X {
            get {
                return ResourceManager.GetString("ACTION_EXPORT_POOL_RESOURCE_LIST_FROM_X", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exporting {0} to backup file ähnelt.
        /// </summary>
        public static string ACTION_EXPORT_TASK_DESCRIPTION {
            get {
                return ResourceManager.GetString("ACTION_EXPORT_TASK_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exporting {0} ähnelt.
        /// </summary>
        public static string ACTION_EXPORT_TASK_NAME {
            get {
                return ResourceManager.GetString("ACTION_EXPORT_TASK_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Verifying Export... ähnelt.
        /// </summary>
        public static string ACTION_EXPORT_VERIFY {
            get {
                return ResourceManager.GetString("ACTION_EXPORT_VERIFY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fetch data sources ähnelt.
        /// </summary>
        public static string ACTION_GET_DATASOURCES {
            get {
                return ResourceManager.GetString("ACTION_GET_DATASOURCES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Getting space requirements on {0} ähnelt.
        /// </summary>
        public static string ACTION_GET_DISK_SPACE_REQUIREMENTS_DESCRIPTION {
            get {
                return ResourceManager.GetString("ACTION_GET_DISK_SPACE_REQUIREMENTS_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Get space requirements ähnelt.
        /// </summary>
        public static string ACTION_GET_DISK_SPACE_REQUIREMENTS_TITLE {
            get {
                return ResourceManager.GetString("ACTION_GET_DISK_SPACE_REQUIREMENTS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Get Health Check analysis result from [Citrix] Insight Services ähnelt.
        /// </summary>
        public static string ACTION_GET_HEALTH_CHECK_RESULT {
            get {
                return ResourceManager.GetString("ACTION_GET_HEALTH_CHECK_RESULT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed to get the analysis result ähnelt.
        /// </summary>
        public static string ACTION_GET_HEALTH_CHECK_RESULT_FAILED {
            get {
                return ResourceManager.GetString("ACTION_GET_HEALTH_CHECK_RESULT_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Getting the analysis result ähnelt.
        /// </summary>
        public static string ACTION_GET_HEALTH_CHECK_RESULT_PROGRESS {
            get {
                return ResourceManager.GetString("ACTION_GET_HEALTH_CHECK_RESULT_PROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Action completed. {0} VDIs found. ähnelt.
        /// </summary>
        public static string ACTION_GET_METADATA_VDIS_DONE {
            get {
                return ResourceManager.GetString("ACTION_GET_METADATA_VDIS_DONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Looking for metadata VDIs on &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ACTION_GET_METADATA_VDIS_STATUS {
            get {
                return ResourceManager.GetString("ACTION_GET_METADATA_VDIS_STATUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Get metadata VDIs ähnelt.
        /// </summary>
        public static string ACTION_GET_METADATA_VDIS_TITLE {
            get {
                return ResourceManager.GetString("ACTION_GET_METADATA_VDIS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Retrieving system status capabilities ähnelt.
        /// </summary>
        public static string ACTION_GET_SYSTEM_STATUS_CAPABILITIES {
            get {
                return ResourceManager.GetString("ACTION_GET_SYSTEM_STATUS_CAPABILITIES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Retrieved system status capabilities ähnelt.
        /// </summary>
        public static string ACTION_GET_SYSTEM_STATUS_CAPABILITIES_DONE {
            get {
                return ResourceManager.GetString("ACTION_GET_SYSTEM_STATUS_CAPABILITIES_DONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Retrieving system status capabilities from server {0} ähnelt.
        /// </summary>
        public static string ACTION_GET_SYSTEM_STATUS_CAPABILITIES_ON {
            get {
                return ResourceManager.GetString("ACTION_GET_SYSTEM_STATUS_CAPABILITIES_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fetching data sources ähnelt.
        /// </summary>
        public static string ACTION_GETTING_DATASOURCES {
            get {
                return ResourceManager.GetString("ACTION_GETTING_DATASOURCES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Setting HA restart priority ähnelt.
        /// </summary>
        public static string ACTION_HA_UNPROTECT_VM_DESCRIPTION {
            get {
                return ResourceManager.GetString("ACTION_HA_UNPROTECT_VM_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Setting HA restart priority on &apos;{0}&apos; to &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string ACTION_HA_UNPROTECT_VM_TITLE {
            get {
                return ResourceManager.GetString("ACTION_HA_UNPROTECT_VM_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Authentication with [Citrix] Insight Services ähnelt.
        /// </summary>
        public static string ACTION_HEALTHCHECK_AUTHENTICATION {
            get {
                return ResourceManager.GetString("ACTION_HEALTHCHECK_AUTHENTICATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Authenticating with [Citrix] Insight Services ähnelt.
        /// </summary>
        public static string ACTION_HEALTHCHECK_AUTHENTICATION_PROGRESS {
            get {
                return ResourceManager.GetString("ACTION_HEALTHCHECK_AUTHENTICATION_PROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server &apos;{0}&apos; rebooted ähnelt.
        /// </summary>
        public static string ACTION_HOST_REBOOTED {
            get {
                return ResourceManager.GetString("ACTION_HOST_REBOOTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server &apos;{0}&apos; rebooting ähnelt.
        /// </summary>
        public static string ACTION_HOST_REBOOTING {
            get {
                return ResourceManager.GetString("ACTION_HOST_REBOOTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server &apos;{0}&apos; shut down ähnelt.
        /// </summary>
        public static string ACTION_HOST_SHUTDOWN {
            get {
                return ResourceManager.GetString("ACTION_HOST_SHUTDOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server &apos;{0}&apos;  shutting down ähnelt.
        /// </summary>
        public static string ACTION_HOST_SHUTTING_DOWN {
            get {
                return ResourceManager.GetString("ACTION_HOST_SHUTTING_DOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server &apos;{0}&apos; failed to respond to the remote power-on request. ähnelt.
        /// </summary>
        public static string ACTION_HOST_START_FAILED {
            get {
                return ResourceManager.GetString("ACTION_HOST_START_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Powering on server &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ACTION_HOST_START_TITLE {
            get {
                return ResourceManager.GetString("ACTION_HOST_START_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Powered on ähnelt.
        /// </summary>
        public static string ACTION_HOST_STARTED {
            get {
                return ResourceManager.GetString("ACTION_HOST_STARTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sending remote power-on request... ähnelt.
        /// </summary>
        public static string ACTION_HOST_STARTING {
            get {
                return ResourceManager.GetString("ACTION_HOST_STARTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Servers rebooted ähnelt.
        /// </summary>
        public static string ACTION_HOSTS_REBOOTED {
            get {
                return ResourceManager.GetString("ACTION_HOSTS_REBOOTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rebooting servers ähnelt.
        /// </summary>
        public static string ACTION_HOSTS_REBOOTING {
            get {
                return ResourceManager.GetString("ACTION_HOSTS_REBOOTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Servers shut down ähnelt.
        /// </summary>
        public static string ACTION_HOSTS_SHUTDOWN {
            get {
                return ResourceManager.GetString("ACTION_HOSTS_SHUTDOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shutting down servers ähnelt.
        /// </summary>
        public static string ACTION_HOSTS_SHUTTING_DOWN {
            get {
                return ResourceManager.GetString("ACTION_HOSTS_SHUTTING_DOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scanning for IQNs on iSCSI filer {0} ähnelt.
        /// </summary>
        public static string ACTION_ISCSI_IQN_SCANNING {
            get {
                return ResourceManager.GetString("ACTION_ISCSI_IQN_SCANNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scanning for LUNs on iSCSI filer {0} ähnelt.
        /// </summary>
        public static string ACTION_ISCSI_LUN_SCANNING {
            get {
                return ResourceManager.GetString("ACTION_ISCSI_LUN_SCANNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Migrating {0} virtual disks to {1} ähnelt.
        /// </summary>
        public static string ACTION_MIGRATING_X_VDIS {
            get {
                return ResourceManager.GetString("ACTION_MIGRATING_X_VDIS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Completed migrating virtual disks ähnelt.
        /// </summary>
        public static string ACTION_MIGRATING_X_VDIS_COMPLETED {
            get {
                return ResourceManager.GetString("ACTION_MIGRATING_X_VDIS_COMPLETED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Started migrating virtual disks ähnelt.
        /// </summary>
        public static string ACTION_MIGRATING_X_VDIS_STARTED {
            get {
                return ResourceManager.GetString("ACTION_MIGRATING_X_VDIS_STARTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Moving virtual disk &apos;{0}&apos;... ähnelt.
        /// </summary>
        public static string ACTION_MOVING_VDI_STATUS {
            get {
                return ResourceManager.GetString("ACTION_MOVING_VDI_STATUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Moving Virtual Disk &apos;{0}&apos; to SR &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string ACTION_MOVING_VDI_TITLE {
            get {
                return ResourceManager.GetString("ACTION_MOVING_VDI_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Moving {0} virtual disks to {1} ähnelt.
        /// </summary>
        public static string ACTION_MOVING_X_VDIS {
            get {
                return ResourceManager.GetString("ACTION_MOVING_X_VDIS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Completed moving virtual disks ähnelt.
        /// </summary>
        public static string ACTION_MOVING_X_VDIS_COMPLETED {
            get {
                return ResourceManager.GetString("ACTION_MOVING_X_VDIS_COMPLETED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Started moving virtual disks ähnelt.
        /// </summary>
        public static string ACTION_MOVING_X_VDIS_STARTED {
            get {
                return ResourceManager.GetString("ACTION_MOVING_X_VDIS_STARTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Storage Repositories prepared ähnelt.
        /// </summary>
        public static string ACTION_MULTIPLE_DR_TASK_CREATE_END {
            get {
                return ResourceManager.GetString("ACTION_MULTIPLE_DR_TASK_CREATE_END", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Preparing Storage Repositories ähnelt.
        /// </summary>
        public static string ACTION_MULTIPLE_DR_TASK_CREATE_START {
            get {
                return ResourceManager.GetString("ACTION_MULTIPLE_DR_TASK_CREATE_START", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Prepare Storage Repositories ähnelt.
        /// </summary>
        public static string ACTION_MULTIPLE_DR_TASK_CREATE_TITLE {
            get {
                return ResourceManager.GetString("ACTION_MULTIPLE_DR_TASK_CREATE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pausing ähnelt.
        /// </summary>
        public static string ACTION_PAUSE_CONTAINER_DESCRIPTION {
            get {
                return ResourceManager.GetString("ACTION_PAUSE_CONTAINER_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Paused ähnelt.
        /// </summary>
        public static string ACTION_PAUSE_CONTAINER_END_DESCRIPTION {
            get {
                return ResourceManager.GetString("ACTION_PAUSE_CONTAINER_END_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pausing Docker Container &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ACTION_PAUSE_CONTAINER_TITLE {
            get {
                return ResourceManager.GetString("ACTION_PAUSE_CONTAINER_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scanning... ähnelt.
        /// </summary>
        public static string ACTION_PIF_SCAN_START_DESC {
            get {
                return ResourceManager.GetString("ACTION_PIF_SCAN_START_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scanning NICs on server &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ACTION_PIF_SCAN_TITLE {
            get {
                return ResourceManager.GetString("ACTION_PIF_SCAN_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Refreshing networks... ähnelt.
        /// </summary>
        public static string ACTION_PIF_UNPLUG_PLUG_DESC {
            get {
                return ResourceManager.GetString("ACTION_PIF_UNPLUG_PLUG_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Refreshing Networks ähnelt.
        /// </summary>
        public static string ACTION_PIF_UNPLUG_PLUG_TITLE {
            get {
                return ResourceManager.GetString("ACTION_PIF_UNPLUG_PLUG_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adding members... ähnelt.
        /// </summary>
        public static string ACTION_POOL_WIZARD_CREATE_DESCRIPTION_ADDING_MEMBERS {
            get {
                return ResourceManager.GetString("ACTION_POOL_WIZARD_CREATE_DESCRIPTION_ADDING_MEMBERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dropping connections to members... ähnelt.
        /// </summary>
        public static string ACTION_POOL_WIZARD_CREATE_DESCRIPTION_DISCONNECTING {
            get {
                return ResourceManager.GetString("ACTION_POOL_WIZARD_CREATE_DESCRIPTION_DISCONNECTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating pool completed ähnelt.
        /// </summary>
        public static string ACTION_POOL_WIZARD_CREATE_DESCRIPTION_DONE {
            get {
                return ResourceManager.GetString("ACTION_POOL_WIZARD_CREATE_DESCRIPTION_DONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Preparing... ähnelt.
        /// </summary>
        public static string ACTION_PREPARING {
            get {
                return ResourceManager.GetString("ACTION_PREPARING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Removing alerts... ähnelt.
        /// </summary>
        public static string ACTION_REMOVE_ALERTS_DESCRIPTION {
            get {
                return ResourceManager.GetString("ACTION_REMOVE_ALERTS_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Removed {0} alerts ähnelt.
        /// </summary>
        public static string ACTION_REMOVE_ALERTS_DONE {
            get {
                return ResourceManager.GetString("ACTION_REMOVE_ALERTS_DONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Removed 1 alert ähnelt.
        /// </summary>
        public static string ACTION_REMOVE_ALERTS_DONE_ONE {
            get {
                return ResourceManager.GetString("ACTION_REMOVE_ALERTS_DONE_ONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Removing {0} client alerts ähnelt.
        /// </summary>
        public static string ACTION_REMOVE_ALERTS_ON_CLIENT_TITLE {
            get {
                return ResourceManager.GetString("ACTION_REMOVE_ALERTS_ON_CLIENT_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Removing client alert ähnelt.
        /// </summary>
        public static string ACTION_REMOVE_ALERTS_ON_CLIENT_TITLE_ONE {
            get {
                return ResourceManager.GetString("ACTION_REMOVE_ALERTS_ON_CLIENT_TITLE_ONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Removing {0} alerts on &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string ACTION_REMOVE_ALERTS_ON_CONNECTION_TITLE {
            get {
                return ResourceManager.GetString("ACTION_REMOVE_ALERTS_ON_CONNECTION_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Removing alert on &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ACTION_REMOVE_ALERTS_ON_CONNECTION_TITLE_ONE {
            get {
                return ResourceManager.GetString("ACTION_REMOVE_ALERTS_ON_CONNECTION_TITLE_ONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Removing alert {0} of {1}... ähnelt.
        /// </summary>
        public static string ACTION_REMOVE_ALERTS_PROGRESS_DESCRIPTION {
            get {
                return ResourceManager.GetString("ACTION_REMOVE_ALERTS_PROGRESS_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restarting ähnelt.
        /// </summary>
        public static string ACTION_RESTART_CONTAINER_DESCRIPTION {
            get {
                return ResourceManager.GetString("ACTION_RESTART_CONTAINER_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restarted ähnelt.
        /// </summary>
        public static string ACTION_RESTART_CONTAINER_END_DESCRIPTION {
            get {
                return ResourceManager.GetString("ACTION_RESTART_CONTAINER_END_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restarting Docker Container &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ACTION_RESTART_CONTAINER_TITLE {
            get {
                return ResourceManager.GetString("ACTION_RESTART_CONTAINER_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resuming ähnelt.
        /// </summary>
        public static string ACTION_RESUME_CONTAINER_DESCRIPTION {
            get {
                return ResourceManager.GetString("ACTION_RESUME_CONTAINER_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resumed ähnelt.
        /// </summary>
        public static string ACTION_RESUME_CONTAINER_END_DESCRIPTION {
            get {
                return ResourceManager.GetString("ACTION_RESUME_CONTAINER_END_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resuming Docker Container &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ACTION_RESUME_CONTAINER_TITLE {
            get {
                return ResourceManager.GetString("ACTION_RESUME_CONTAINER_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Preparing to resume and start VMs... ähnelt.
        /// </summary>
        public static string ACTION_RESUMEANDSTARTVMS_PREPARING {
            get {
                return ResourceManager.GetString("ACTION_RESUMEANDSTARTVMS_PREPARING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resuming VM {0} of {1} ähnelt.
        /// </summary>
        public static string ACTION_RESUMEANDSTARTVMS_RESUMINGN {
            get {
                return ResourceManager.GetString("ACTION_RESUMEANDSTARTVMS_RESUMINGN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Starting VM {0} of {1} ähnelt.
        /// </summary>
        public static string ACTION_RESUMEANDSTARTVMS_STARTINGN {
            get {
                return ResourceManager.GetString("ACTION_RESUMEANDSTARTVMS_STARTINGN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save alerts ähnelt.
        /// </summary>
        public static string ACTION_SAVE_ALERTS {
            get {
                return ResourceManager.GetString("ACTION_SAVE_ALERTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Saving settings... ähnelt.
        /// </summary>
        public static string ACTION_SAVE_CHANGES_IN_PROGRESS {
            get {
                return ResourceManager.GetString("ACTION_SAVE_CHANGES_IN_PROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Settings saved ähnelt.
        /// </summary>
        public static string ACTION_SAVE_CHANGES_SUCCESSFUL {
            get {
                return ResourceManager.GetString("ACTION_SAVE_CHANGES_SUCCESSFUL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save settings ähnelt.
        /// </summary>
        public static string ACTION_SAVE_CHANGES_TITLE {
            get {
                return ResourceManager.GetString("ACTION_SAVE_CHANGES_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save Custom Fields ähnelt.
        /// </summary>
        public static string ACTION_SAVE_CUSTOM_FIELDS {
            get {
                return ResourceManager.GetString("ACTION_SAVE_CUSTOM_FIELDS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save data sources ähnelt.
        /// </summary>
        public static string ACTION_SAVE_DATASOURCES {
            get {
                return ResourceManager.GetString("ACTION_SAVE_DATASOURCES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save folder and tags ähnelt.
        /// </summary>
        public static string ACTION_SAVE_FOLDER_TAGS {
            get {
                return ResourceManager.GetString("ACTION_SAVE_FOLDER_TAGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save Health Check settings ähnelt.
        /// </summary>
        public static string ACTION_SAVE_HEALTHCHECK_SETTINGS {
            get {
                return ResourceManager.GetString("ACTION_SAVE_HEALTHCHECK_SETTINGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save settings for &apos;{0}&apos;... ähnelt.
        /// </summary>
        public static string ACTION_SAVE_SETTINGS {
            get {
                return ResourceManager.GetString("ACTION_SAVE_SETTINGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Saving alerts for &apos;{0}&apos;... ähnelt.
        /// </summary>
        public static string ACTION_SAVING_ALERTS_FOR {
            get {
                return ResourceManager.GetString("ACTION_SAVING_ALERTS_FOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Saving Custom Fields for &apos;{0}&apos;... ähnelt.
        /// </summary>
        public static string ACTION_SAVING_CUSTOM_FIELDS_FOR {
            get {
                return ResourceManager.GetString("ACTION_SAVING_CUSTOM_FIELDS_FOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Saving data sources ähnelt.
        /// </summary>
        public static string ACTION_SAVING_DATASOURCES {
            get {
                return ResourceManager.GetString("ACTION_SAVING_DATASOURCES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Saving folder and tags for &apos;{0}&apos;... ähnelt.
        /// </summary>
        public static string ACTION_SAVING_FOLDER_TAGS_FOR {
            get {
                return ResourceManager.GetString("ACTION_SAVING_FOLDER_TAGS_FOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Saving Health Check settings for &apos;{0}&apos;... ähnelt.
        /// </summary>
        public static string ACTION_SAVING_HEALTHCHECK_SETTINGS {
            get {
                return ResourceManager.GetString("ACTION_SAVING_HEALTHCHECK_SETTINGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Saving settings for &apos;{0}&apos;... ähnelt.
        /// </summary>
        public static string ACTION_SAVING_SETTINGS_FOR {
            get {
                return ResourceManager.GetString("ACTION_SAVING_SETTINGS_FOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Saving tags for the selected items. ähnelt.
        /// </summary>
        public static string ACTION_SAVING_TAGS_DESCRIPTION {
            get {
                return ResourceManager.GetString("ACTION_SAVING_TAGS_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Saving tags. ähnelt.
        /// </summary>
        public static string ACTION_SAVING_TAGS_TITLE {
            get {
                return ResourceManager.GetString("ACTION_SAVING_TAGS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Performing SR scan from &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ACTION_SCANNING_SR_FROM {
            get {
                return ResourceManager.GetString("ACTION_SCANNING_SR_FROM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Saving VM Configuration ähnelt.
        /// </summary>
        public static string ACTION_SET_VM_OTHER_CONFIG_TITLE {
            get {
                return ResourceManager.GetString("ACTION_SET_VM_OTHER_CONFIG_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shut down ähnelt.
        /// </summary>
        public static string ACTION_SHUT_DOWN {
            get {
                return ResourceManager.GetString("ACTION_SHUT_DOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete VM ähnelt.
        /// </summary>
        public static string ACTION_SHUTDOWN_AND_DESTROY_VM_TITLE {
            get {
                return ResourceManager.GetString("ACTION_SHUTDOWN_AND_DESTROY_VM_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete VMs ähnelt.
        /// </summary>
        public static string ACTION_SHUTDOWN_AND_DESTROY_VMS_TITLE {
            get {
                return ResourceManager.GetString("ACTION_SHUTDOWN_AND_DESTROY_VMS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shutting down ähnelt.
        /// </summary>
        public static string ACTION_SHUTTING_DOWN {
            get {
                return ResourceManager.GetString("ACTION_SHUTTING_DOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attached SR ähnelt.
        /// </summary>
        public static string ACTION_SR_ATTACH_SUCCESSFUL {
            get {
                return ResourceManager.GetString("ACTION_SR_ATTACH_SUCCESSFUL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attaching SR ähnelt.
        /// </summary>
        public static string ACTION_SR_ATTACHING {
            get {
                return ResourceManager.GetString("ACTION_SR_ATTACHING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attaching SR &apos;{0}&apos; to &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string ACTION_SR_ATTACHING_TITLE {
            get {
                return ResourceManager.GetString("ACTION_SR_ATTACHING_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Created SR ähnelt.
        /// </summary>
        public static string ACTION_SR_CREATE_SUCCESSFUL {
            get {
                return ResourceManager.GetString("ACTION_SR_CREATE_SUCCESSFUL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating SR ähnelt.
        /// </summary>
        public static string ACTION_SR_CREATING {
            get {
                return ResourceManager.GetString("ACTION_SR_CREATING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating {0} SR &apos;{1}&apos; on &apos;{2}&apos; ähnelt.
        /// </summary>
        public static string ACTION_SR_CREATING_TITLE {
            get {
                return ResourceManager.GetString("ACTION_SR_CREATING_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SR destroyed ähnelt.
        /// </summary>
        public static string ACTION_SR_DESTROY_SUCCESSFUL {
            get {
                return ResourceManager.GetString("ACTION_SR_DESTROY_SUCCESSFUL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Destroying SR &apos;{0}&apos; on &apos;{1}&apos;... ähnelt.
        /// </summary>
        public static string ACTION_SR_DESTROYING {
            get {
                return ResourceManager.GetString("ACTION_SR_DESTROYING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Detached SR {0} ähnelt.
        /// </summary>
        public static string ACTION_SR_DETACH_SUCCESSFUL {
            get {
                return ResourceManager.GetString("ACTION_SR_DETACH_SUCCESSFUL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Detaching SR &apos;{0}&apos; from &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string ACTION_SR_DETACHING {
            get {
                return ResourceManager.GetString("ACTION_SR_DETACHING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Forgetting SR &apos;{0}&apos; on &apos;{1}&apos;... ähnelt.
        /// </summary>
        public static string ACTION_SR_FORGETTING {
            get {
                return ResourceManager.GetString("ACTION_SR_FORGETTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SR repair canceled ähnelt.
        /// </summary>
        public static string ACTION_SR_REPAIR_CANCELLED {
            get {
                return ResourceManager.GetString("ACTION_SR_REPAIR_CANCELLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating PBD for {0} ähnelt.
        /// </summary>
        public static string ACTION_SR_REPAIR_CREATE_PBD {
            get {
                return ResourceManager.GetString("ACTION_SR_REPAIR_CREATE_PBD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Repair failed: the number of PBDs was not equal to the number of servers. Try running the action again. ähnelt.
        /// </summary>
        public static string ACTION_SR_REPAIR_FAILED {
            get {
                return ResourceManager.GetString("ACTION_SR_REPAIR_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Plugging PBD for {0} ähnelt.
        /// </summary>
        public static string ACTION_SR_REPAIR_PLUGGING_PBD {
            get {
                return ResourceManager.GetString("ACTION_SR_REPAIR_PLUGGING_PBD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Repaired SR {0} ähnelt.
        /// </summary>
        public static string ACTION_SR_REPAIR_SUCCESSFUL {
            get {
                return ResourceManager.GetString("ACTION_SR_REPAIR_SUCCESSFUL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Repairing SR {0} ähnelt.
        /// </summary>
        public static string ACTION_SR_REPAIRING {
            get {
                return ResourceManager.GetString("ACTION_SR_REPAIRING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scanning {0} filer {1} for existing SRs... ähnelt.
        /// </summary>
        public static string ACTION_SR_SCAN_DESCRIPTION {
            get {
                return ResourceManager.GetString("ACTION_SR_SCAN_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scanning filer {0} ähnelt.
        /// </summary>
        public static string ACTION_SR_SCAN_NAME {
            get {
                return ResourceManager.GetString("ACTION_SR_SCAN_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scanning {0} ähnelt.
        /// </summary>
        public static string ACTION_SR_SCAN_NAME_CSLG {
            get {
                return ResourceManager.GetString("ACTION_SR_SCAN_NAME_CSLG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scanned for SRs ähnelt.
        /// </summary>
        public static string ACTION_SR_SCAN_SUCCESSFUL {
            get {
                return ResourceManager.GetString("ACTION_SR_SCAN_SUCCESSFUL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scanning for {0} SRs on {1} ähnelt.
        /// </summary>
        public static string ACTION_SR_SCANNING {
            get {
                return ResourceManager.GetString("ACTION_SR_SCANNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set default SR ähnelt.
        /// </summary>
        public static string ACTION_SR_SET_DEFAULT_SUCCESSFUL {
            get {
                return ResourceManager.GetString("ACTION_SR_SET_DEFAULT_SUCCESSFUL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Setting &apos;{0}&apos; as default SR on &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string ACTION_SR_SETTING_DEFAULT {
            get {
                return ResourceManager.GetString("ACTION_SR_SETTING_DEFAULT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shared SR {0} ähnelt.
        /// </summary>
        public static string ACTION_SR_SHARE_SUCCESSFUL {
            get {
                return ResourceManager.GetString("ACTION_SR_SHARE_SUCCESSFUL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sharing SR {0} ähnelt.
        /// </summary>
        public static string ACTION_SR_SHARING {
            get {
                return ResourceManager.GetString("ACTION_SR_SHARING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reclaiming freed space ähnelt.
        /// </summary>
        public static string ACTION_SR_TRIM_DESCRIPTION {
            get {
                return ResourceManager.GetString("ACTION_SR_TRIM_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Completed ähnelt.
        /// </summary>
        public static string ACTION_SR_TRIM_DONE {
            get {
                return ResourceManager.GetString("ACTION_SR_TRIM_DONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reclaiming freed space on SR &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ACTION_SR_TRIM_TITLE {
            get {
                return ResourceManager.GetString("ACTION_SR_TRIM_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Destroying SRs ähnelt.
        /// </summary>
        public static string ACTION_SRS_DESTROYING {
            get {
                return ResourceManager.GetString("ACTION_SRS_DESTROYING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Detached SRs ähnelt.
        /// </summary>
        public static string ACTION_SRS_DETACH_SUCCESSFUL {
            get {
                return ResourceManager.GetString("ACTION_SRS_DETACH_SUCCESSFUL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Detaching SRs ähnelt.
        /// </summary>
        public static string ACTION_SRS_DETACHING {
            get {
                return ResourceManager.GetString("ACTION_SRS_DETACHING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Forgetting SRs ähnelt.
        /// </summary>
        public static string ACTION_SRS_FORGETTING {
            get {
                return ResourceManager.GetString("ACTION_SRS_FORGETTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upgrade SRs ähnelt.
        /// </summary>
        public static string ACTION_SRS_UPGRADE {
            get {
                return ResourceManager.GetString("ACTION_SRS_UPGRADE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upgraded SRS ähnelt.
        /// </summary>
        public static string ACTION_SRS_UPGRADED {
            get {
                return ResourceManager.GetString("ACTION_SRS_UPGRADED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upgrading SRs ähnelt.
        /// </summary>
        public static string ACTION_SRS_UPGRADING {
            get {
                return ResourceManager.GetString("ACTION_SRS_UPGRADING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Starting ähnelt.
        /// </summary>
        public static string ACTION_START_CONTAINER_DESCRIPTION {
            get {
                return ResourceManager.GetString("ACTION_START_CONTAINER_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Started ähnelt.
        /// </summary>
        public static string ACTION_START_CONTAINER_END_DESCRIPTION {
            get {
                return ResourceManager.GetString("ACTION_START_CONTAINER_END_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Starting Docker Container &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ACTION_START_CONTAINER_TITLE {
            get {
                return ResourceManager.GetString("ACTION_START_CONTAINER_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There are no VMs or vApps to start ähnelt.
        /// </summary>
        public static string ACTION_START_VMS_AND_APPLIANCES_NONE_SELECTED {
            get {
                return ResourceManager.GetString("ACTION_START_VMS_AND_APPLIANCES_NONE_SELECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start VMs and vApps ähnelt.
        /// </summary>
        public static string ACTION_START_VMS_AND_APPLIANCES_TITLE {
            get {
                return ResourceManager.GetString("ACTION_START_VMS_AND_APPLIANCES_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Canceled ähnelt.
        /// </summary>
        public static string ACTION_STATUS_CANCELLED {
            get {
                return ResourceManager.GetString("ACTION_STATUS_CANCELLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed ähnelt.
        /// </summary>
        public static string ACTION_STATUS_FAILED {
            get {
                return ResourceManager.GetString("ACTION_STATUS_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die In Progress ähnelt.
        /// </summary>
        public static string ACTION_STATUS_IN_PROGRESS {
            get {
                return ResourceManager.GetString("ACTION_STATUS_IN_PROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Succeeded ähnelt.
        /// </summary>
        public static string ACTION_STATUS_SUCCEEDED {
            get {
                return ResourceManager.GetString("ACTION_STATUS_SUCCEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Stopping ähnelt.
        /// </summary>
        public static string ACTION_STOP_CONTAINER_DESCRIPTION {
            get {
                return ResourceManager.GetString("ACTION_STOP_CONTAINER_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Stopped ähnelt.
        /// </summary>
        public static string ACTION_STOP_CONTAINER_END_DESCRIPTION {
            get {
                return ResourceManager.GetString("ACTION_STOP_CONTAINER_END_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Stopping Docker Container &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ACTION_STOP_CONTAINER_TITLE {
            get {
                return ResourceManager.GetString("ACTION_STOP_CONTAINER_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Getting system status canceled ähnelt.
        /// </summary>
        public static string ACTION_SYSTEM_STATUS_CANCELLED {
            get {
                return ResourceManager.GetString("ACTION_SYSTEM_STATUS_CANCELLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Compiling status report for {0} ähnelt.
        /// </summary>
        public static string ACTION_SYSTEM_STATUS_COMPILING {
            get {
                return ResourceManager.GetString("ACTION_SYSTEM_STATUS_COMPILING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Getting system status from {0} ähnelt.
        /// </summary>
        public static string ACTION_SYSTEM_STATUS_DESCRIPTION {
            get {
                return ResourceManager.GetString("ACTION_SYSTEM_STATUS_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Getting system status failed: disk full ähnelt.
        /// </summary>
        public static string ACTION_SYSTEM_STATUS_DISK_FULL {
            get {
                return ResourceManager.GetString("ACTION_SYSTEM_STATUS_DISK_FULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed to compile status report  ähnelt.
        /// </summary>
        public static string ACTION_SYSTEM_STATUS_FAILED {
            get {
                return ResourceManager.GetString("ACTION_SYSTEM_STATUS_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No data was compiled ähnelt.
        /// </summary>
        public static string ACTION_SYSTEM_STATUS_NONE_SUCCEEDED {
            get {
                return ResourceManager.GetString("ACTION_SYSTEM_STATUS_NONE_SUCCEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No data was compiled. Press previous to select new items or servers and try again. ähnelt.
        /// </summary>
        public static string ACTION_SYSTEM_STATUS_NONE_SUCCEEDED_GUI {
            get {
                return ResourceManager.GetString("ACTION_SYSTEM_STATUS_NONE_SUCCEEDED_GUI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Finished compiling status report ähnelt.
        /// </summary>
        public static string ACTION_SYSTEM_STATUS_SUCCESSFUL {
            get {
                return ResourceManager.GetString("ACTION_SYSTEM_STATUS_SUCCESSFUL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Finished compiling status report (with errors). A partial status report was compiled. ähnelt.
        /// </summary>
        public static string ACTION_SYSTEM_STATUS_SUCCESSFUL_WITH_ERROR {
            get {
                return ResourceManager.GetString("ACTION_SYSTEM_STATUS_SUCCESSFUL_WITH_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Finished compiling status report (with errors). Only [XenCenter] logs were compiled. ähnelt.
        /// </summary>
        public static string ACTION_SYSTEM_STATUS_SUCCESSFUL_WITH_ERRORS_XCLOGS {
            get {
                return ResourceManager.GetString("ACTION_SYSTEM_STATUS_SUCCESSFUL_WITH_ERRORS_XCLOGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Getting system status information ähnelt.
        /// </summary>
        public static string ACTION_SYSTEM_STATUS_TITLE {
            get {
                return ResourceManager.GetString("ACTION_SYSTEM_STATUS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy of {0} ähnelt.
        /// </summary>
        public static string ACTION_TEMPLATE_CLONE_NEW_NAME {
            get {
                return ResourceManager.GetString("ACTION_TEMPLATE_CLONE_NEW_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Duplicated ähnelt.
        /// </summary>
        public static string ACTION_TEMPLATE_CLONED {
            get {
                return ResourceManager.GetString("ACTION_TEMPLATE_CLONED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Duplicating ähnelt.
        /// </summary>
        public static string ACTION_TEMPLATE_CLONING {
            get {
                return ResourceManager.GetString("ACTION_TEMPLATE_CLONING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restart toolstack on &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ACTION_TOOLSTACK_RESTART_ON {
            get {
                return ResourceManager.GetString("ACTION_TOOLSTACK_RESTART_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Toolstack restarted. ähnelt.
        /// </summary>
        public static string ACTION_TOOLSTACK_RESTARTED {
            get {
                return ResourceManager.GetString("ACTION_TOOLSTACK_RESTARTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Toolstack restarted on &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string ACTION_TOOLSTACK_RESTARTED_ON {
            get {
                return ResourceManager.GetString("ACTION_TOOLSTACK_RESTARTED_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restarting toolstack... ähnelt.
        /// </summary>
        public static string ACTION_TOOLSTACK_RESTARTING {
            get {
                return ResourceManager.GetString("ACTION_TOOLSTACK_RESTARTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restarting toolstack on &apos;{0}&apos;... ähnelt.
        /// </summary>
        public static string ACTION_TOOLSTACK_RESTARTING_ON {
            get {
                return ResourceManager.GetString("ACTION_TOOLSTACK_RESTARTING_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Transfer Health Check settings ähnelt.
        /// </summary>
        public static string ACTION_TRANSFER_HEALTHCHECK_SETTINGS {
            get {
                return ResourceManager.GetString("ACTION_TRANSFER_HEALTHCHECK_SETTINGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Updating integrated GPU passthrough on &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ACTION_UPDATE_INTEGRATED_GPU_PASSTHROUGH_TITLE {
            get {
                return ResourceManager.GetString("ACTION_UPDATE_INTEGRATED_GPU_PASSTHROUGH_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upload server status report to [Citrix] Insight Services ähnelt.
        /// </summary>
        public static string ACTION_UPLOAD_SERVER_STATUS_REPORT {
            get {
                return ResourceManager.GetString("ACTION_UPLOAD_SERVER_STATUS_REPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed to upload the status report. ähnelt.
        /// </summary>
        public static string ACTION_UPLOAD_SERVER_STATUS_REPORT_FAILED {
            get {
                return ResourceManager.GetString("ACTION_UPLOAD_SERVER_STATUS_REPORT_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Uploading report to [Citrix] Insight Services ähnelt.
        /// </summary>
        public static string ACTION_UPLOAD_SERVER_STATUS_REPORT_PROGRESS {
            get {
                return ResourceManager.GetString("ACTION_UPLOAD_SERVER_STATUS_REPORT_PROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upload error. The patch was uploaded, but it cannot be found on the host. ähnelt.
        /// </summary>
        public static string ACTION_UPLOADPATCHTOMASTERPLANACTION_FAILED {
            get {
                return ResourceManager.GetString("ACTION_UPLOADPATCHTOMASTERPLANACTION_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die USB passthrough disabled ähnelt.
        /// </summary>
        public static string ACTION_USB_PASSTHROUGH_DISABLED {
            get {
                return ResourceManager.GetString("ACTION_USB_PASSTHROUGH_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disabling USB passthrough for {0} ähnelt.
        /// </summary>
        public static string ACTION_USB_PASSTHROUGH_DISABLING {
            get {
                return ResourceManager.GetString("ACTION_USB_PASSTHROUGH_DISABLING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die USB passthrough enabled ähnelt.
        /// </summary>
        public static string ACTION_USB_PASSTHROUGH_ENABLED {
            get {
                return ResourceManager.GetString("ACTION_USB_PASSTHROUGH_ENABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enabling USB passthrough for {0} ähnelt.
        /// </summary>
        public static string ACTION_USB_PASSTHROUGH_ENABLING {
            get {
                return ResourceManager.GetString("ACTION_USB_PASSTHROUGH_ENABLING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Virtual disk created ähnelt.
        /// </summary>
        public static string ACTION_VDI_CREATED {
            get {
                return ResourceManager.GetString("ACTION_VDI_CREATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating virtual disk... ähnelt.
        /// </summary>
        public static string ACTION_VDI_CREATING {
            get {
                return ResourceManager.GetString("ACTION_VDI_CREATING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating disk &apos;{0}&apos; on SR &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string ACTION_VDI_CREATING_TITLE {
            get {
                return ResourceManager.GetString("ACTION_VDI_CREATING_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Virtual disk deleted ähnelt.
        /// </summary>
        public static string ACTION_VDI_DELETED {
            get {
                return ResourceManager.GetString("ACTION_VDI_DELETED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleting virtual disk... ähnelt.
        /// </summary>
        public static string ACTION_VDI_DELETING {
            get {
                return ResourceManager.GetString("ACTION_VDI_DELETING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Metadata loaded ähnelt.
        /// </summary>
        public static string ACTION_VDI_LOAD_METADATA_DONE {
            get {
                return ResourceManager.GetString("ACTION_VDI_LOAD_METADATA_DONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Loading metadata from SR &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ACTION_VDI_LOAD_METADATA_STATUS {
            get {
                return ResourceManager.GetString("ACTION_VDI_LOAD_METADATA_STATUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Load metadata from SR &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ACTION_VDI_LOAD_METADATA_TITLE {
            get {
                return ResourceManager.GetString("ACTION_VDI_LOAD_METADATA_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Metadata database opened ähnelt.
        /// </summary>
        public static string ACTION_VDI_OPEN_DATABASE_DONE {
            get {
                return ResourceManager.GetString("ACTION_VDI_OPEN_DATABASE_DONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Opening metadata database from SR &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ACTION_VDI_OPEN_DATABASE_STATUS {
            get {
                return ResourceManager.GetString("ACTION_VDI_OPEN_DATABASE_STATUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open metadata database from SR &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ACTION_VDI_OPEN_DATABASE_TITLE {
            get {
                return ResourceManager.GetString("ACTION_VDI_OPEN_DATABASE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Virtual GPU configuration saved ähnelt.
        /// </summary>
        public static string ACTION_VGPU_CONFIGURATION_SAVED {
            get {
                return ResourceManager.GetString("ACTION_VGPU_CONFIGURATION_SAVED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Saving virtual GPU configuration ähnelt.
        /// </summary>
        public static string ACTION_VGPU_CONFIGURATION_SAVING {
            get {
                return ResourceManager.GetString("ACTION_VGPU_CONFIGURATION_SAVING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Virtual network interface created ähnelt.
        /// </summary>
        public static string ACTION_VIF_CREATED {
            get {
                return ResourceManager.GetString("ACTION_VIF_CREATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating virtual network interface ähnelt.
        /// </summary>
        public static string ACTION_VIF_CREATING {
            get {
                return ResourceManager.GetString("ACTION_VIF_CREATING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating new virtual network interface on VM {0} ähnelt.
        /// </summary>
        public static string ACTION_VIF_CREATING_TITLE {
            get {
                return ResourceManager.GetString("ACTION_VIF_CREATING_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Virtual network interface deleted ähnelt.
        /// </summary>
        public static string ACTION_VIF_DELETED {
            get {
                return ResourceManager.GetString("ACTION_VIF_DELETED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleting virtual network interface ähnelt.
        /// </summary>
        public static string ACTION_VIF_DELETING {
            get {
                return ResourceManager.GetString("ACTION_VIF_DELETING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleting virtual network interface &apos;{0}&apos; from VM &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string ACTION_VIF_DELETING_TITLE {
            get {
                return ResourceManager.GetString("ACTION_VIF_DELETING_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Activating virtual network interface on VM &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ACTION_VIF_PLUG_TITLE {
            get {
                return ResourceManager.GetString("ACTION_VIF_PLUG_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Activated virtual network interface ähnelt.
        /// </summary>
        public static string ACTION_VIF_PLUGGED {
            get {
                return ResourceManager.GetString("ACTION_VIF_PLUGGED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Activating virtual network interface... ähnelt.
        /// </summary>
        public static string ACTION_VIF_PLUGGING {
            get {
                return ResourceManager.GetString("ACTION_VIF_PLUGGING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deactivating virtual network interface on VM &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ACTION_VIF_UNPLUG_TITLE {
            get {
                return ResourceManager.GetString("ACTION_VIF_UNPLUG_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deactivated virtual network interface ähnelt.
        /// </summary>
        public static string ACTION_VIF_UNPLUGGED {
            get {
                return ResourceManager.GetString("ACTION_VIF_UNPLUGGED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deactivating virtual network interface... ähnelt.
        /// </summary>
        public static string ACTION_VIF_UNPLUGGING {
            get {
                return ResourceManager.GetString("ACTION_VIF_UNPLUGGING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Virtual network interface updated ähnelt.
        /// </summary>
        public static string ACTION_VIF_UPDATED {
            get {
                return ResourceManager.GetString("ACTION_VIF_UPDATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Updating virtual network interface ähnelt.
        /// </summary>
        public static string ACTION_VIF_UPDATING {
            get {
                return ResourceManager.GetString("ACTION_VIF_UPDATING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Updating virtual network interface &apos;{0}&apos; on VM &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string ACTION_VIF_UPDATING_TITLE {
            get {
                return ResourceManager.GetString("ACTION_VIF_UPDATING_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copied ähnelt.
        /// </summary>
        public static string ACTION_VM_COPIED {
            get {
                return ResourceManager.GetString("ACTION_VM_COPIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copying ähnelt.
        /// </summary>
        public static string ACTION_VM_COPYING {
            get {
                return ResourceManager.GetString("ACTION_VM_COPYING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copying VM &apos;{0}&apos; to &apos;{1}&apos; on SR &apos;{2}&apos; ähnelt.
        /// </summary>
        public static string ACTION_VM_COPYING_TITLE {
            get {
                return ResourceManager.GetString("ACTION_VM_COPYING_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copying VM &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ACTION_VM_COPYING_TITLE_MEDDLING {
            get {
                return ResourceManager.GetString("ACTION_VM_COPYING_TITLE_MEDDLING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copying {0} canceled ähnelt.
        /// </summary>
        public static string ACTION_VM_CROSS_POOL_COPY_CANCELLED {
            get {
                return ResourceManager.GetString("ACTION_VM_CROSS_POOL_COPY_CANCELLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copying VM &apos;{0}&apos; to &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string ACTION_VM_CROSS_POOL_COPY_TITLE {
            get {
                return ResourceManager.GetString("ACTION_VM_CROSS_POOL_COPY_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleting snapshot &apos;{0}&apos;... ähnelt.
        /// </summary>
        public static string ACTION_VM_DELETE_SNAPSHOT_TITLE {
            get {
                return ResourceManager.GetString("ACTION_VM_DELETE_SNAPSHOT_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleting snapshots ähnelt.
        /// </summary>
        public static string ACTION_VM_DELETE_SNAPSHOTS_TITLE {
            get {
                return ResourceManager.GetString("ACTION_VM_DELETE_SNAPSHOTS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleted ähnelt.
        /// </summary>
        public static string ACTION_VM_DESTROYED {
            get {
                return ResourceManager.GetString("ACTION_VM_DESTROYED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleting ähnelt.
        /// </summary>
        public static string ACTION_VM_DESTROYING {
            get {
                return ResourceManager.GetString("ACTION_VM_DESTROYING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleting VM &apos;{0}&apos; from &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string ACTION_VM_DESTROYING_TITLE {
            get {
                return ResourceManager.GetString("ACTION_VM_DESTROYING_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Migrating {0} canceled ähnelt.
        /// </summary>
        public static string ACTION_VM_MIGRATE_CANCELLED {
            get {
                return ResourceManager.GetString("ACTION_VM_MIGRATE_CANCELLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Migrated ähnelt.
        /// </summary>
        public static string ACTION_VM_MIGRATED {
            get {
                return ResourceManager.GetString("ACTION_VM_MIGRATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Migrating ähnelt.
        /// </summary>
        public static string ACTION_VM_MIGRATING {
            get {
                return ResourceManager.GetString("ACTION_VM_MIGRATING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Migrating VM &apos;{0}&apos; to &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string ACTION_VM_MIGRATING_NON_RESIDENT {
            get {
                return ResourceManager.GetString("ACTION_VM_MIGRATING_NON_RESIDENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Migrating VM &apos;{0}&apos; from &apos;{1}&apos; to &apos;{2}&apos; ähnelt.
        /// </summary>
        public static string ACTION_VM_MIGRATING_RESIDENT {
            get {
                return ResourceManager.GetString("ACTION_VM_MIGRATING_RESIDENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Moving VM to new storage... ähnelt.
        /// </summary>
        public static string ACTION_VM_MOVING {
            get {
                return ResourceManager.GetString("ACTION_VM_MOVING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Moving VM &apos;{0}&apos; to &apos;{1}&apos; on SR &apos;{2}&apos; ähnelt.
        /// </summary>
        public static string ACTION_VM_MOVING_TITLE {
            get {
                return ResourceManager.GetString("ACTION_VM_MOVING_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rebooted ähnelt.
        /// </summary>
        public static string ACTION_VM_REBOOTED {
            get {
                return ResourceManager.GetString("ACTION_VM_REBOOTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rebooting VM ähnelt.
        /// </summary>
        public static string ACTION_VM_REBOOTING {
            get {
                return ResourceManager.GetString("ACTION_VM_REBOOTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rebooting VM &apos;{0}&apos; on &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string ACTION_VM_REBOOTING_TITLE {
            get {
                return ResourceManager.GetString("ACTION_VM_REBOOTING_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resumed ähnelt.
        /// </summary>
        public static string ACTION_VM_RESUMED {
            get {
                return ResourceManager.GetString("ACTION_VM_RESUMED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resuming VM ähnelt.
        /// </summary>
        public static string ACTION_VM_RESUMING {
            get {
                return ResourceManager.GetString("ACTION_VM_RESUMING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resuming VM &apos;{0}&apos; on &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string ACTION_VM_RESUMING_ON_TITLE {
            get {
                return ResourceManager.GetString("ACTION_VM_RESUMING_ON_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resuming VM &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ACTION_VM_RESUMING_TITLE {
            get {
                return ResourceManager.GetString("ACTION_VM_RESUMING_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Snapshot reverted ähnelt.
        /// </summary>
        public static string ACTION_VM_REVERT_SNAPSHOT_DONE {
            get {
                return ResourceManager.GetString("ACTION_VM_REVERT_SNAPSHOT_DONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reverting snapshot &apos;{0}&apos;... ähnelt.
        /// </summary>
        public static string ACTION_VM_REVERT_SNAPSHOT_STATUS {
            get {
                return ResourceManager.GetString("ACTION_VM_REVERT_SNAPSHOT_STATUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Revert snapshot &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ACTION_VM_REVERT_SNAPSHOT_TITLE {
            get {
                return ResourceManager.GetString("ACTION_VM_REVERT_SNAPSHOT_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shut down ähnelt.
        /// </summary>
        public static string ACTION_VM_SHUT_DOWN {
            get {
                return ResourceManager.GetString("ACTION_VM_SHUT_DOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shutting down VM ähnelt.
        /// </summary>
        public static string ACTION_VM_SHUTTING_DOWN {
            get {
                return ResourceManager.GetString("ACTION_VM_SHUTTING_DOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shutting down VM &apos;{0}&apos; on &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string ACTION_VM_SHUTTING_DOWN_TITLE {
            get {
                return ResourceManager.GetString("ACTION_VM_SHUTTING_DOWN_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Snapshotting VM &apos;{0}&apos;... ähnelt.
        /// </summary>
        public static string ACTION_VM_SNAPSHOT_TITLE {
            get {
                return ResourceManager.GetString("ACTION_VM_SNAPSHOT_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Started ähnelt.
        /// </summary>
        public static string ACTION_VM_STARTED {
            get {
                return ResourceManager.GetString("ACTION_VM_STARTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Started paused ähnelt.
        /// </summary>
        public static string ACTION_VM_STARTED_PAUSED {
            get {
                return ResourceManager.GetString("ACTION_VM_STARTED_PAUSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Starting VM ähnelt.
        /// </summary>
        public static string ACTION_VM_STARTING {
            get {
                return ResourceManager.GetString("ACTION_VM_STARTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Starting VM &apos;{0}&apos; on &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string ACTION_VM_STARTING_ON_TITLE {
            get {
                return ResourceManager.GetString("ACTION_VM_STARTING_ON_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Starting paused ähnelt.
        /// </summary>
        public static string ACTION_VM_STARTING_PAUSED {
            get {
                return ResourceManager.GetString("ACTION_VM_STARTING_PAUSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Starting VM &apos;{0}&apos; paused on &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string ACTION_VM_STARTING_PAUSED_ON_TITLE {
            get {
                return ResourceManager.GetString("ACTION_VM_STARTING_PAUSED_ON_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Starting VM &apos;{0}&apos; paused ähnelt.
        /// </summary>
        public static string ACTION_VM_STARTING_PAUSED_TITLE {
            get {
                return ResourceManager.GetString("ACTION_VM_STARTING_PAUSED_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Starting VM &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ACTION_VM_STARTING_TITLE {
            get {
                return ResourceManager.GetString("ACTION_VM_STARTING_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Suspended ähnelt.
        /// </summary>
        public static string ACTION_VM_SUSPENDED {
            get {
                return ResourceManager.GetString("ACTION_VM_SUSPENDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Suspending VM ähnelt.
        /// </summary>
        public static string ACTION_VM_SUSPENDING {
            get {
                return ResourceManager.GetString("ACTION_VM_SUSPENDING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Suspending VM &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ACTION_VM_SUSPENDING_TITLE {
            get {
                return ResourceManager.GetString("ACTION_VM_SUSPENDING_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Conversion to template complete ähnelt.
        /// </summary>
        public static string ACTION_VM_TEMPLATIZED {
            get {
                return ResourceManager.GetString("ACTION_VM_TEMPLATIZED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Converting to template ähnelt.
        /// </summary>
        public static string ACTION_VM_TEMPLATIZING {
            get {
                return ResourceManager.GetString("ACTION_VM_TEMPLATIZING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Converting VM &apos;{0}&apos; to template ähnelt.
        /// </summary>
        public static string ACTION_VM_TEMPLATIZING_TITLE {
            get {
                return ResourceManager.GetString("ACTION_VM_TEMPLATIZING_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleting selected VMs ähnelt.
        /// </summary>
        public static string ACTION_VMS_DESTROYING_TITLE {
            get {
                return ResourceManager.GetString("ACTION_VMS_DESTROYING_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Migrating VMs ähnelt.
        /// </summary>
        public static string ACTION_VMS_MIGRATING_TITLE {
            get {
                return ResourceManager.GetString("ACTION_VMS_MIGRATING_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resuming VMs ähnelt.
        /// </summary>
        public static string ACTION_VMS_RESUMING_ON_TITLE {
            get {
                return ResourceManager.GetString("ACTION_VMS_RESUMING_ON_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shutting Down VMs ähnelt.
        /// </summary>
        public static string ACTION_VMS_SHUTTING_DOWN_TITLE {
            get {
                return ResourceManager.GetString("ACTION_VMS_SHUTTING_DOWN_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Starting VMs ähnelt.
        /// </summary>
        public static string ACTION_VMS_STARTING_ON_TITLE {
            get {
                return ResourceManager.GetString("ACTION_VMS_STARTING_ON_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die USB device attached ähnelt.
        /// </summary>
        public static string ACTION_VUSB_CREATED {
            get {
                return ResourceManager.GetString("ACTION_VUSB_CREATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attaching USB device &apos;{0}&apos; to VM &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string ACTION_VUSB_CREATING {
            get {
                return ResourceManager.GetString("ACTION_VUSB_CREATING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die USB device detached ähnelt.
        /// </summary>
        public static string ACTION_VUSB_DELETED {
            get {
                return ResourceManager.GetString("ACTION_VUSB_DELETED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Detaching USB device &apos;{0}&apos; from VM &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string ACTION_VUSB_DELETING {
            get {
                return ResourceManager.GetString("ACTION_VUSB_DELETING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Detach USB device ähnelt.
        /// </summary>
        public static string ACTION_VUSB_DETACH {
            get {
                return ResourceManager.GetString("ACTION_VUSB_DETACH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to detach the selected USB device? ähnelt.
        /// </summary>
        public static string ACTION_VUSB_DETACH_CONFIRM {
            get {
                return ResourceManager.GetString("ACTION_VUSB_DETACH_CONFIRM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Waiting for slaves to recover... ähnelt.
        /// </summary>
        public static string ACTION_WAIT_FOR_SLAVES_TO_RECOVER {
            get {
                return ResourceManager.GetString("ACTION_WAIT_FOR_SLAVES_TO_RECOVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disconnecting  Workload Balancing failed on pool {0}: {1}  Workload Balancing has been paused. ähnelt.
        /// </summary>
        public static string ACTION_WLB_DECONFIGURE_FAILED {
            get {
                return ResourceManager.GetString("ACTION_WLB_DECONFIGURE_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Optimizing ähnelt.
        /// </summary>
        public static string ACTION_WLB_POOL_OPTIMIZING {
            get {
                return ResourceManager.GetString("ACTION_WLB_POOL_OPTIMIZING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Downloading WLB report &apos;{0}&apos; from &apos;{1}&apos; ({2}) ähnelt.
        /// </summary>
        public static string ACTION_WLB_REPORT {
            get {
                return ResourceManager.GetString("ACTION_WLB_REPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Download canceled ähnelt.
        /// </summary>
        public static string ACTION_WLB_REPORT_CANCELLED {
            get {
                return ResourceManager.GetString("ACTION_WLB_REPORT_CANCELLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Downloading... ähnelt.
        /// </summary>
        public static string ACTION_WLB_REPORT_DOWNLOADING {
            get {
                return ResourceManager.GetString("ACTION_WLB_REPORT_DOWNLOADING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Download failed ähnelt.
        /// </summary>
        public static string ACTION_WLB_REPORT_FAILED {
            get {
                return ResourceManager.GetString("ACTION_WLB_REPORT_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Downloaded ähnelt.
        /// </summary>
        public static string ACTION_WLB_REPORT_SUCCESSFUL {
            get {
                return ResourceManager.GetString("ACTION_WLB_REPORT_SUCCESSFUL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Downloading WLB report {0} ähnelt.
        /// </summary>
        public static string ACTION_WLB_REPORT_TASK_DESCRIPTION {
            get {
                return ResourceManager.GetString("ACTION_WLB_REPORT_TASK_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Downloading WLB report {0} ähnelt.
        /// </summary>
        public static string ACTION_WLB_REPORT_TASK_NAME {
            get {
                return ResourceManager.GetString("ACTION_WLB_REPORT_TASK_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A&amp;ctivate ähnelt.
        /// </summary>
        public static string ACTIVATE {
            get {
                return ResourceManager.GetString("ACTIVATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenCenter] is unable to contact the activation server.
        ///
        ///If you are not currently connected to the internet, we can save
        ///the activation request to a file, for you to upload at a later date.
        ///
        ///To use this file, visit https://{0}. ähnelt.
        /// </summary>
        public static string ACTIVATION_FAILED_MESSAGE {
            get {
                return ResourceManager.GetString("ACTIVATION_FAILED_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Saved activation request to {0}. ähnelt.
        /// </summary>
        public static string ACTIVATION_REQUEST_SAVED {
            get {
                return ResourceManager.GetString("ACTIVATION_REQUEST_SAVED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sending activation request ähnelt.
        /// </summary>
        public static string ACTIVATION_REQUEST_TITLE {
            get {
                return ResourceManager.GetString("ACTIVATION_REQUEST_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save... ähnelt.
        /// </summary>
        public static string ACTIVATION_SAVE {
            get {
                return ResourceManager.GetString("ACTIVATION_SAVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Active Directory Users ähnelt.
        /// </summary>
        public static string ACTIVE_DIRECTORY_TAB_TITLE {
            get {
                return ResourceManager.GetString("ACTIVE_DIRECTORY_TAB_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adding/removing users from Active Directory ACL ähnelt.
        /// </summary>
        public static string AD_ADDING_REMOVING {
            get {
                return ResourceManager.GetString("AD_ADDING_REMOVING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adding/removing users from Active Directory ACL on &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string AD_ADDING_REMOVING_ON {
            get {
                return ResourceManager.GetString("AD_ADDING_REMOVING_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adding/removing roles from subject ähnelt.
        /// </summary>
        public static string AD_ADDING_REMOVING_ROLES {
            get {
                return ResourceManager.GetString("AD_ADDING_REMOVING_ROLES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adding/removing roles from subject &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string AD_ADDING_REMOVING_ROLES_ON {
            get {
                return ResourceManager.GetString("AD_ADDING_REMOVING_ROLES_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (Always granted access) ähnelt.
        /// </summary>
        public static string AD_ALWAYS_GRANTED_ACCESS {
            get {
                return ResourceManager.GetString("AD_ALWAYS_GRANTED_ACCESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are logged in using your AD user account. You can only change the password when logged in using the local root account. ähnelt.
        /// </summary>
        public static string AD_CANNOT_CHANGE_PASSWORD {
            get {
                return ResourceManager.GetString("AD_CANNOT_CHANGE_PASSWORD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot modify the root account ähnelt.
        /// </summary>
        public static string AD_CANNOT_MODIFY_ROOT {
            get {
                return ResourceManager.GetString("AD_CANNOT_MODIFY_ROOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; is joined to the Active Directory domain &apos;{1}&apos;, while the pool &apos;{2}&apos; is joined to the Active Directory domain &apos;{3}&apos;.
        ///&apos;{0}&apos; can only join the pool if they both have the same AD configuration.
        ///
        ///To join &apos;{0}&apos; to the pool &apos;{2}&apos;, first disable AD on &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string AD_CHANGE_DOMAIN_BLURB {
            get {
                return ResourceManager.GetString("AD_CHANGE_DOMAIN_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool &apos;{0}&apos; belongs to domain &apos;{1}&apos;. ähnelt.
        /// </summary>
        public static string AD_CONFIGURED_BLURB {
            get {
                return ResourceManager.GetString("AD_CONFIGURED_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server &apos;{0}&apos; belongs to domain &apos;{1}&apos;. ähnelt.
        /// </summary>
        public static string AD_CONFIGURED_BLURB_HOST {
            get {
                return ResourceManager.GetString("AD_CONFIGURED_BLURB_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die AD authentication is currently being configured for pool &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string AD_CONFIGURING_BLURB {
            get {
                return ResourceManager.GetString("AD_CONFIGURING_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die AD authentication is currently being configured for server &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string AD_CONFIGURING_BLURB_HOST {
            get {
                return ResourceManager.GetString("AD_CONFIGURING_BLURB_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to terminate this user session?
        ///
        ///This will disconnect you from &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string AD_CONFIRM_SELF_TERMINATE {
            get {
                return ResourceManager.GetString("AD_CONFIRM_SELF_TERMINATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Terminate Session ähnelt.
        /// </summary>
        public static string AD_CONFIRM_SELF_TERMINATE_OK {
            get {
                return ResourceManager.GetString("AD_CONFIRM_SELF_TERMINATE_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are about to revoke the permissions for user &apos;{0}&apos;.
        ///
        ///You are currently logged in as &apos;{0}&apos; on &apos;{1}&apos;, and doing this will disconnect you from &apos;{1}&apos;. To reconnect, you will need to supply the local root account credentials, or the credentials for another authorized AD user.
        ///
        ///Do you want to continue? ähnelt.
        /// </summary>
        public static string AD_CONFIRM_SUICIDE {
            get {
                return ResourceManager.GetString("AD_CONFIRM_SUICIDE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are about to revoke the permissions for group &apos;{0}&apos;.
        ///
        ///The user you are currently logged into &apos;{1}&apos; with is a member of &apos;{0}&apos;. Proceeding will disconnect you and any other members of this group from &apos;{1}&apos;. To reconnect, you will need to supply the local root account credentials, or the credentials for another authorized AD user.
        ///
        ///Do you want to continue? ähnelt.
        /// </summary>
        public static string AD_CONFIRM_SUICIDE_GROUP {
            get {
                return ResourceManager.GetString("AD_CONFIRM_SUICIDE_GROUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Subject could not be resolved in your AD ähnelt.
        /// </summary>
        public static string AD_COULD_NOT_RESOLVE_SUFFIX {
            get {
                return ResourceManager.GetString("AD_COULD_NOT_RESOLVE_SUFFIX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disabling AD authentication ähnelt.
        /// </summary>
        public static string AD_DISABLING {
            get {
                return ResourceManager.GetString("AD_DISABLING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}
        ///Host: {1} ähnelt.
        /// </summary>
        public static string AD_FAILURE_WITH_HOST {
            get {
                return ResourceManager.GetString("AD_FAILURE_WITH_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die AD Authentication ähnelt.
        /// </summary>
        public static string AD_FEATURE_NAME {
            get {
                return ResourceManager.GetString("AD_FEATURE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Join Domain ähnelt.
        /// </summary>
        public static string AD_JOIN_DOMAIN {
            get {
                return ResourceManager.GetString("AD_JOIN_DOMAIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool &apos;{0}&apos; has Active Directory authentication enabled. In order for &apos;{1}&apos; to join the pool, it must share the same AD configuration.
        ///
        ///To join &apos;{1}&apos; to the Active Directory domain &apos;{2}&apos;, enter a domain user account name and password, then click OK.
        ///
        ///You must use a user account with sufficient privileges. ähnelt.
        /// </summary>
        public static string AD_JOIN_DOMAIN_BLURB {
            get {
                return ResourceManager.GetString("AD_JOIN_DOMAIN_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter your fully qualified AD domain name, and a user name and password with sufficient privileges to add servers to your domain. ähnelt.
        /// </summary>
        public static string AD_JOIN_DOMAIN_BLURB_SHORT {
            get {
                return ResourceManager.GetString("AD_JOIN_DOMAIN_BLURB_SHORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter your fully qualified AD domain name, and a user name and password with sufficient privileges to add servers to your domain. ähnelt.
        /// </summary>
        public static string AD_JOIN_DOMAIN_BLURB_SHORT_HOST {
            get {
                return ResourceManager.GetString("AD_JOIN_DOMAIN_BLURB_SHORT_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are about to remove &apos;{0}&apos; from the AD domain &apos;{1}&apos;. Any users authenticated using AD will be disconnected.
        ///
        ///Do you want to continue? ähnelt.
        /// </summary>
        public static string AD_LEAVE_CONFIRM {
            get {
                return ResourceManager.GetString("AD_LEAVE_CONFIRM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die L&amp;eave Domain ähnelt.
        /// </summary>
        public static string AD_LEAVE_DOMAIN {
            get {
                return ResourceManager.GetString("AD_LEAVE_DOMAIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are currently connected to pool &apos;{0}&apos; using Active Directory authentication.
        ///If you leave the AD domain &apos;{1}&apos;, you will be disconnected from the pool.
        ///To reconnect, you will need to supply the local root account credentials.
        ///
        ///Do you want to continue? ähnelt.
        /// </summary>
        public static string AD_LEAVE_WARNING {
            get {
                return ResourceManager.GetString("AD_LEAVE_WARNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are currently connected to server &apos;{0}&apos; using Active Directory authentication.
        ///If you leave the AD domain &apos;{1}&apos;, you will be disconnected from the server.
        ///To reconnect, you will need to supply the local root account credentials.
        ///
        ///Do you want to continue? ähnelt.
        /// </summary>
        public static string AD_LEAVE_WARNING_HOST {
            get {
                return ResourceManager.GetString("AD_LEAVE_WARNING_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Alternatively, select ignore to leave the machine account enabled. ähnelt.
        /// </summary>
        public static string AD_LEAVING_ADDITIONAL_BLURB {
            get {
                return ResourceManager.GetString("AD_LEAVING_ADDITIONAL_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Local root account ähnelt.
        /// </summary>
        public static string AD_LOCAL_ROOT_ACCOUNT {
            get {
                return ResourceManager.GetString("AD_LOCAL_ROOT_ACCOUNT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are currently logged in as one of the selected users. If you continue you will be logged out of &apos;{0}&apos;.
        ///
        ///Do you want to continue? ähnelt.
        /// </summary>
        public static string AD_LOGOUT_SUICIDE_MANY {
            get {
                return ResourceManager.GetString("AD_LOGOUT_SUICIDE_MANY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are currently logged in as the selected user. If you continue you will be logged out of &apos;{0}&apos;.
        ///
        ///Do you want to continue? ähnelt.
        /// </summary>
        public static string AD_LOGOUT_SUICIDE_ONE {
            get {
                return ResourceManager.GetString("AD_LOGOUT_SUICIDE_ONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please wait while [XenCenter] establishes your current external authentication configuration. ähnelt.
        /// </summary>
        public static string AD_MASTER_UNAVAILABLE_BLURB {
            get {
                return ResourceManager.GetString("AD_MASTER_UNAVAILABLE_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die AD is not currently configured for pool &apos;{0}&apos;. To enable AD authentication, click Join Domain. ähnelt.
        /// </summary>
        public static string AD_NOT_CONFIGURED_BLURB {
            get {
                return ResourceManager.GetString("AD_NOT_CONFIGURED_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die AD is not currently configured for server &apos;{0}&apos;. To enable AD authentication, click Join Domain. ähnelt.
        /// </summary>
        public static string AD_NOT_CONFIGURED_BLURB_HOST {
            get {
                return ResourceManager.GetString("AD_NOT_CONFIGURED_BLURB_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resolving AD names ähnelt.
        /// </summary>
        public static string AD_RESOLVING_NAMES {
            get {
                return ResourceManager.GetString("AD_RESOLVING_NAMES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resolving AD names on &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string AD_RESOLVING_NAMES_ON {
            get {
                return ResourceManager.GetString("AD_RESOLVING_NAMES_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resolving... ähnelt.
        /// </summary>
        public static string AD_RESOLVING_SUFFIX {
            get {
                return ResourceManager.GetString("AD_RESOLVING_SUFFIX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool Admin ähnelt.
        /// </summary>
        public static string AD_ROLE_POOL_ADMIN {
            get {
                return ResourceManager.GetString("AD_ROLE_POOL_ADMIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool Operator ähnelt.
        /// </summary>
        public static string AD_ROLE_POOL_OPERATOR {
            get {
                return ResourceManager.GetString("AD_ROLE_POOL_OPERATOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Read Only ähnelt.
        /// </summary>
        public static string AD_ROLE_READ_ONLY {
            get {
                return ResourceManager.GetString("AD_ROLE_READ_ONLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VM Admin ähnelt.
        /// </summary>
        public static string AD_ROLE_VM_ADMIN {
            get {
                return ResourceManager.GetString("AD_ROLE_VM_ADMIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VM Operator ähnelt.
        /// </summary>
        public static string AD_ROLE_VM_OPERATOR {
            get {
                return ResourceManager.GetString("AD_ROLE_VM_OPERATOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VM Power Admin ähnelt.
        /// </summary>
        public static string AD_ROLE_VM_POWER_ADMIN {
            get {
                return ResourceManager.GetString("AD_ROLE_VM_POWER_ADMIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the role you want to assign to group &apos;{0}&apos;. Each role inherits all the privileges of the subordinate role below it in the list. ähnelt.
        /// </summary>
        public static string AD_SELECT_ROLE_GROUP {
            get {
                return ResourceManager.GetString("AD_SELECT_ROLE_GROUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the role you want to assign to these users and groups. Each role inherits all the privileges of the subordinate role below it in the list. ähnelt.
        /// </summary>
        public static string AD_SELECT_ROLE_MIXED {
            get {
                return ResourceManager.GetString("AD_SELECT_ROLE_MIXED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the role you want to assign to user &apos;{0}&apos;. Each role inherits all the privileges of the subordinate role below it in the list. ähnelt.
        /// </summary>
        public static string AD_SELECT_ROLE_USER {
            get {
                return ResourceManager.GetString("AD_SELECT_ROLE_USER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select a single subject to change their role ähnelt.
        /// </summary>
        public static string AD_SELECT_SINGLE_SUBJECT {
            get {
                return ResourceManager.GetString("AD_SELECT_SINGLE_SUBJECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Subject &apos;{0}&apos; already has access to the server. ähnelt.
        /// </summary>
        public static string AD_USER_ALREADY_HAS_ACCESS {
            get {
                return ResourceManager.GetString("AD_USER_ALREADY_HAS_ACCESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Add ähnelt.
        /// </summary>
        public static string ADD {
            get {
                return ResourceManager.GetString("ADD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add custom field &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ADD_CUSTOM_FIELD {
            get {
                return ResourceManager.GetString("ADD_CUSTOM_FIELD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are attempting to add the server &apos;{0}&apos; to a pool that is configured to use AD authentication. All pool members must use the same authentication method.
        ///
        ///Do you want to enable AD authentication on your server and join it to the same domain as the pool? ähnelt.
        /// </summary>
        public static string ADD_HOST_TO_POOL_AD_MESSAGE {
            get {
                return ResourceManager.GetString("ADD_HOST_TO_POOL_AD_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are attempting to add the following servers to a pool that is configured to use AD authentication:
        ///
        ///{0}
        ///
        ///All pool members must use the same authentication method. Do you want to enable AD authentication on these servers and join them to the same domain as the pool? ähnelt.
        /// </summary>
        public static string ADD_HOST_TO_POOL_AD_MESSAGE_MULTIPLE {
            get {
                return ResourceManager.GetString("ADD_HOST_TO_POOL_AD_MESSAGE_MULTIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are attempting to add the server &apos;{0}&apos; to a pool that is using older CPUs.
        ///
        ///VMs running in the pool will only use the CPU features common to all the servers in the pool.
        ///
        ///Do you want to do this? ähnelt.
        /// </summary>
        public static string ADD_HOST_TO_POOL_CPU_DOWN_LEVEL_HOST_MESSAGE {
            get {
                return ResourceManager.GetString("ADD_HOST_TO_POOL_CPU_DOWN_LEVEL_HOST_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are attempting to add the following servers to a pool that is using older CPUs.
        ///
        ///{0}
        ///
        ///VMs running in the pool will only use the CPU features common to all the servers in the pool.
        ///
        ///Do you want to do this? ähnelt.
        /// </summary>
        public static string ADD_HOST_TO_POOL_CPU_DOWN_LEVEL_HOST_MESSAGE_MULTIPLE {
            get {
                return ResourceManager.GetString("ADD_HOST_TO_POOL_CPU_DOWN_LEVEL_HOST_MESSAGE_MULTIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are attempting to add the server &apos;{0}&apos; to a pool that is using different CPUs.
        ///
        ///VMs starting on the pool in future will only use the reduced set of CPU features common to all the servers in the pool. VMs already running in the pool will not be able to migrate to the new server until they are restarted.
        ///
        ///Do you want to do this? ähnelt.
        /// </summary>
        public static string ADD_HOST_TO_POOL_CPU_DOWN_LEVEL_POOL_AND_HOST_MESSAGE {
            get {
                return ResourceManager.GetString("ADD_HOST_TO_POOL_CPU_DOWN_LEVEL_POOL_AND_HOST_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are attempting to add the following servers to a pool that is using different CPUs.
        ///
        ///{0}
        ///
        ///VMs starting on the pool in future will only use the reduced set of CPU features common to all the servers in the pool. VMs already running in the pool will not be able to migrate to the new servers until they are restarted.
        ///
        ///Do you want to do this? ähnelt.
        /// </summary>
        public static string ADD_HOST_TO_POOL_CPU_DOWN_LEVEL_POOL_AND_HOST_MESSAGE_MULTIPLE {
            get {
                return ResourceManager.GetString("ADD_HOST_TO_POOL_CPU_DOWN_LEVEL_POOL_AND_HOST_MESSAGE_MULTIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are attempting to add the server &apos;{0}&apos; to a pool that is using newer CPUs.
        ///
        ///VMs starting on the pool in future will only use the reduced set of CPU features common to all the servers in the pool. VMs already running in the pool will not be able to migrate to the new server until they are restarted.
        ///
        ///Do you want to do this? ähnelt.
        /// </summary>
        public static string ADD_HOST_TO_POOL_CPU_DOWN_LEVEL_POOL_MESSAGE {
            get {
                return ResourceManager.GetString("ADD_HOST_TO_POOL_CPU_DOWN_LEVEL_POOL_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are attempting to add the following servers to a pool that is using newer CPUs.
        ///
        ///{0}
        ///
        ///VMs starting on the pool in future will only use the reduced set of CPU features common to all the servers in the pool. VMs already running in the pool will not be able to migrate to the new servers until they are restarted.
        ///
        ///Do you want to do this? ähnelt.
        /// </summary>
        public static string ADD_HOST_TO_POOL_CPU_DOWN_LEVEL_POOL_MESSAGE_MULTIPLE {
            get {
                return ResourceManager.GetString("ADD_HOST_TO_POOL_CPU_DOWN_LEVEL_POOL_MESSAGE_MULTIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are attempting to add the server &apos;{0}&apos; to a pool that is using older CPUs.
        ///
        ///[XenServer] can continue by rebooting the server and reducing its CPU to the level of the existing servers in the pool. This will shut down any VMs running on the server. This feature is supported for CPU combinations listed in the [XenServer] Hardware Compatibility List.
        ///
        ///Do you want to do this? ähnelt.
        /// </summary>
        public static string ADD_HOST_TO_POOL_CPU_MASKING_MESSAGE {
            get {
                return ResourceManager.GetString("ADD_HOST_TO_POOL_CPU_MASKING_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are attempting to add the following servers to a pool that is using older CPUs:
        ///
        ///{0}
        ///
        ///[XenServer] can continue by rebooting the servers and reducing their CPUs to the level of the existing servers in the pool. This will shut down any VMs running on the servers. This feature is supported for CPU combinations listed in the [XenServer] Hardware Compatibility List.
        ///
        ///Do you want to do this? ähnelt.
        /// </summary>
        public static string ADD_HOST_TO_POOL_CPU_MASKING_MESSAGE_MULTIPLE {
            get {
                return ResourceManager.GetString("ADD_HOST_TO_POOL_CPU_MASKING_MESSAGE_MULTIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unable to move the server &apos;{0}&apos; into the pool &apos;{1}&apos;: the pool is no longer connected. ähnelt.
        /// </summary>
        public static string ADD_HOST_TO_POOL_DISCONNECTED_POOL {
            get {
                return ResourceManager.GetString("ADD_HOST_TO_POOL_DISCONNECTED_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unable to move selected servers into the pool &apos;{0}&apos;: the pool is no longer connected. ähnelt.
        /// </summary>
        public static string ADD_HOST_TO_POOL_DISCONNECTED_POOL_MULTIPLE {
            get {
                return ResourceManager.GetString("ADD_HOST_TO_POOL_DISCONNECTED_POOL_MULTIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are attempting to add the server &apos;{0}&apos; to a licensed pool.
        ///
        ///Do you want to apply the licensing from the pool to this server? ähnelt.
        /// </summary>
        public static string ADD_HOST_TO_POOL_LICENSE_MESSAGE {
            get {
                return ResourceManager.GetString("ADD_HOST_TO_POOL_LICENSE_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are attempting to add the following servers to a licensed pool.
        ///
        ///{0}
        ///
        ///Do you want to apply the licensing from the pool to these servers? ähnelt.
        /// </summary>
        public static string ADD_HOST_TO_POOL_LICENSE_MESSAGE_MULTIPLE {
            get {
                return ResourceManager.GetString("ADD_HOST_TO_POOL_LICENSE_MESSAGE_MULTIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The following supplemental pack should be installed on all servers in a pool, but currently is not:
        ///
        ///{0}
        ///
        ///It is strongly recommended that you Cancel and apply the latest version of the pack to all servers before expanding the pool. ähnelt.
        /// </summary>
        public static string ADD_HOST_TO_POOL_SUPP_PACK {
            get {
                return ResourceManager.GetString("ADD_HOST_TO_POOL_SUPP_PACK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The following supplemental packs should be installed on all servers in a pool, but currently are not:
        ///
        ///{0}
        ///
        ///It is strongly recommended that you Cancel and apply the latest version of the packs to all servers before expanding the pool. ähnelt.
        /// </summary>
        public static string ADD_HOST_TO_POOL_SUPP_PACKS {
            get {
                return ResourceManager.GetString("ADD_HOST_TO_POOL_SUPP_PACKS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add New Server ähnelt.
        /// </summary>
        public static string ADD_NEW_CONNECT_TO {
            get {
                return ResourceManager.GetString("ADD_NEW_CONNECT_TO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter the host name or IP address of the server you want to add and your user login credentials for that server. ähnelt.
        /// </summary>
        public static string ADD_NEW_ENTER_CREDENTIALS {
            get {
                return ResourceManager.GetString("ADD_NEW_ENTER_CREDENTIALS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Incorrect user name and/or password. ähnelt.
        /// </summary>
        public static string ADD_NEW_INCORRECT {
            get {
                return ResourceManager.GetString("ADD_NEW_INCORRECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Add New Server... ähnelt.
        /// </summary>
        public static string ADD_NEW_SERVER_MENU_ITEM {
            get {
                return ResourceManager.GetString("ADD_NEW_SERVER_MENU_ITEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add a pool or standalone server... ähnelt.
        /// </summary>
        public static string ADD_POOL_OR_SERVER {
            get {
                return ResourceManager.GetString("ADD_POOL_OR_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Import &amp;StorageLink Volume... ähnelt.
        /// </summary>
        public static string ADD_SL_VOLUME {
            get {
                return ResourceManager.GetString("ADD_SL_VOLUME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add tag &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ADD_TAG {
            get {
                return ResourceManager.GetString("ADD_TAG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add tags &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ADD_TAGS {
            get {
                return ResourceManager.GetString("ADD_TAGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New &amp;Virtual Disk... ähnelt.
        /// </summary>
        public static string ADD_VIRTUAL_DISK {
            get {
                return ResourceManager.GetString("ADD_VIRTUAL_DISK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Added custom field &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ADDED_CUSTOM_FIELD {
            get {
                return ResourceManager.GetString("ADDED_CUSTOM_FIELD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Added tag &apos;{0}&apos;  ähnelt.
        /// </summary>
        public static string ADDED_TAG {
            get {
                return ResourceManager.GetString("ADDED_TAG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Added tags &apos;{0}&apos;  ähnelt.
        /// </summary>
        public static string ADDED_TAGS {
            get {
                return ResourceManager.GetString("ADDED_TAGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Added to access list ähnelt.
        /// </summary>
        public static string ADDED_TO_ACCESS_LIST {
            get {
                return ResourceManager.GetString("ADDED_TO_ACCESS_LIST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adding custom field &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ADDING_CUSTOM_FIELD {
            get {
                return ResourceManager.GetString("ADDING_CUSTOM_FIELD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adding EULAS... ähnelt.
        /// </summary>
        public static string ADDING_EULAS {
            get {
                return ResourceManager.GetString("ADDING_EULAS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adding resolved names to access list... ähnelt.
        /// </summary>
        public static string ADDING_RESOLVED_TO_ACCESS_LIST {
            get {
                return ResourceManager.GetString("ADDING_RESOLVED_TO_ACCESS_LIST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adding server &apos;{0}&apos; to pool &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string ADDING_SERVER_TO_POOL {
            get {
                return ResourceManager.GetString("ADDING_SERVER_TO_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adding selected servers to pool &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ADDING_SERVERS_TO_POOL {
            get {
                return ResourceManager.GetString("ADDING_SERVERS_TO_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adding tag &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ADDING_TAG {
            get {
                return ResourceManager.GetString("ADDING_TAG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adding tags &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ADDING_TAGS {
            get {
                return ResourceManager.GetString("ADDING_TAGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adding to access list... ähnelt.
        /// </summary>
        public static string ADDING_TO_ACCESS_LIST {
            get {
                return ResourceManager.GetString("ADDING_TO_ACCESS_LIST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Address ähnelt.
        /// </summary>
        public static string ADDRESS {
            get {
                return ResourceManager.GetString("ADDRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenCenter] can no longer authenticate with the existing credentials for this server. Enter new credentials to proceed. ähnelt.
        /// </summary>
        public static string ADDSERVER_PASS_NEW {
            get {
                return ResourceManager.GetString("ADDSERVER_PASS_NEW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Advanced Options ähnelt.
        /// </summary>
        public static string ADVANCED_OPTIONS {
            get {
                return ResourceManager.GetString("ADVANCED_OPTIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Don&apos;t assign this VM a home server. The VM will be started on any server with the necessary resources. (Shared storage required). ähnelt.
        /// </summary>
        public static string AFFINITY_PICKER_DYNAMIC_NOT_SHARED_SR {
            get {
                return ResourceManager.GetString("AFFINITY_PICKER_DYNAMIC_NOT_SHARED_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Don&apos;t assign this VM a home server. The VM will be started on any server with the necessary resources. ähnelt.
        /// </summary>
        public static string AFFINITY_PICKER_DYNAMIC_SHARED_SR {
            get {
                return ResourceManager.GetString("AFFINITY_PICKER_DYNAMIC_SHARED_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die is after ähnelt.
        /// </summary>
        public static string AFTER {
            get {
                return ResourceManager.GetString("AFTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Aggregate ähnelt.
        /// </summary>
        public static string AGGREGATE {
            get {
                return ResourceManager.GetString("AGGREGATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Agile ähnelt.
        /// </summary>
        public static string AGILE {
            get {
                return ResourceManager.GetString("AGILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Actions ähnelt.
        /// </summary>
        public static string ALERT_ACTIONS {
            get {
                return ResourceManager.GetString("ALERT_ACTIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Alarm Settings ähnelt.
        /// </summary>
        public static string ALERT_ALARM_ACTION {
            get {
                return ResourceManager.GetString("ALERT_ALARM_ACTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die CPU Usage Alarm ähnelt.
        /// </summary>
        public static string ALERT_ALARM_CPU {
            get {
                return ResourceManager.GetString("ALERT_ALARM_CPU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die CPU usage on {0} has been on average {1} for the last {2}.
        ///This alarm is set to be triggered when CPU usage is more than {3}. ähnelt.
        /// </summary>
        public static string ALERT_ALARM_CPU_DESCRIPTION {
            get {
                return ResourceManager.GetString("ALERT_ALARM_CPU_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disk Usage Alarm ähnelt.
        /// </summary>
        public static string ALERT_ALARM_DISK {
            get {
                return ResourceManager.GetString("ALERT_ALARM_DISK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disk usage on {0} has been on average {1} for the last {2}.
        ///This alarm is set to be triggered when disk usage is more than {3}. ähnelt.
        /// </summary>
        public static string ALERT_ALARM_DISK_DESCRIPTION {
            get {
                return ResourceManager.GetString("ALERT_ALARM_DISK_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Control Domain Memory Usage ähnelt.
        /// </summary>
        public static string ALERT_ALARM_DOM0_MEMORY {
            get {
                return ResourceManager.GetString("ALERT_ALARM_DOM0_MEMORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Control Domain Memory Demand Alarm ähnelt.
        /// </summary>
        public static string ALERT_ALARM_DOM0_MEMORY_DEMAND {
            get {
                return ResourceManager.GetString("ALERT_ALARM_DOM0_MEMORY_DEMAND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The memory required by the control domain on {0} is {1} of its allocated memory. Occasional performance degradation can be expected when memory swapping is forced to happen.
        ///This alarm is set to be triggered when the memory required by the control domain is above {2} of its allocated memory. ähnelt.
        /// </summary>
        public static string ALERT_ALARM_DOM0_MEMORY_DEMAND_DESCRIPTION {
            get {
                return ResourceManager.GetString("ALERT_ALARM_DOM0_MEMORY_DEMAND_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die File System on Control Domain Full ähnelt.
        /// </summary>
        public static string ALERT_ALARM_FILESYSTEM {
            get {
                return ResourceManager.GetString("ALERT_ALARM_FILESYSTEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disk usage for the Control Domain on {0} has reached {1}. [XenServer]&apos;s performance will be critically affected if this disk becomes full. Log files or other non-essential (user created) files should be removed. ähnelt.
        /// </summary>
        public static string ALERT_ALARM_FILESYSTEM_DESCRIPTION {
            get {
                return ResourceManager.GetString("ALERT_ALARM_FILESYSTEM_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die File System on Logs Partition Full ähnelt.
        /// </summary>
        public static string ALERT_ALARM_LOG_FILESYSTEM {
            get {
                return ResourceManager.GetString("ALERT_ALARM_LOG_FILESYSTEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The disk usage for the Logs Partition on {0} has reached {1}. Logging will be critically affected if this disk becomes full. Old log files should be removed. ähnelt.
        /// </summary>
        public static string ALERT_ALARM_LOG_FILESYSTEM_DESCRIPTION {
            get {
                return ResourceManager.GetString("ALERT_ALARM_LOG_FILESYSTEM_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Memory Usage Alarm ähnelt.
        /// </summary>
        public static string ALERT_ALARM_MEMORY {
            get {
                return ResourceManager.GetString("ALERT_ALARM_MEMORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Free memory on {0} has been {1} for the last {2}.
        ///This alarm is set to be triggered when free memory falls below {3}. ähnelt.
        /// </summary>
        public static string ALERT_ALARM_MEMORY_DESCRIPTION {
            get {
                return ResourceManager.GetString("ALERT_ALARM_MEMORY_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network Usage Alarm ähnelt.
        /// </summary>
        public static string ALERT_ALARM_NETWORK {
            get {
                return ResourceManager.GetString("ALERT_ALARM_NETWORK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network usage on {0} has been on average {1} for the last {2}.
        ///This alarm is set to be triggered when network usage is more than {3}. ähnelt.
        /// </summary>
        public static string ALERT_ALARM_NETWORK_DESCRIPTION {
            get {
                return ResourceManager.GetString("ALERT_ALARM_NETWORK_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SR Disk Space Alarm ähnelt.
        /// </summary>
        public static string ALERT_ALARM_SR_PHYSICAL_UTILISATION {
            get {
                return ResourceManager.GetString("ALERT_ALARM_SR_PHYSICAL_UTILISATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The physical utilization on {0} is about {1} of its capacity. 
        ///This alarm is set to be triggered when the physical utilisation of the SR goes above {2}. ähnelt.
        /// </summary>
        public static string ALERT_ALARM_SR_PHYSICAL_UTILISATION_DESCRIPTION {
            get {
                return ResourceManager.GetString("ALERT_ALARM_SR_PHYSICAL_UTILISATION_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Storage Throughput Alarm ähnelt.
        /// </summary>
        public static string ALERT_ALARM_STORAGE {
            get {
                return ResourceManager.GetString("ALERT_ALARM_STORAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The total read and write throughput of {0} on storage repository &apos;{1}&apos; has been {2} for the last {3}.
        ///This alarm is set to be triggered when the total throughput exceeds {4}. ähnelt.
        /// </summary>
        public static string ALERT_ALARM_STORAGE_DESCRIPTION {
            get {
                return ResourceManager.GetString("ALERT_ALARM_STORAGE_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (Showing first {0} entries) ähnelt.
        /// </summary>
        public static string ALERT_CAP_LABEL {
            get {
                return ResourceManager.GetString("ALERT_CAP_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die When CPU usage exceeds {0}% for {1} min(s) ähnelt.
        /// </summary>
        public static string ALERT_CPUS_SUB_TEXT {
            get {
                return ResourceManager.GetString("ALERT_CPUS_SUB_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die When disk usage exceeds {0} for {1} min(s) ähnelt.
        /// </summary>
        public static string ALERT_DISK_SUB_TEXT {
            get {
                return ResourceManager.GetString("ALERT_DISK_SUB_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dismiss ähnelt.
        /// </summary>
        public static string ALERT_DISMISS {
            get {
                return ResourceManager.GetString("ALERT_DISMISS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You have applied filters to the list of alerts. Do you want to dismiss all alerts from every connected server, or only the alerts you have chosen to view? In both cases the dismissed alerts will be removed from the servers permanently.
        ///
        ///Note that if RBAC is enabled, only alerts which you have privileges to dismiss will be affected. ähnelt.
        /// </summary>
        public static string ALERT_DISMISS_ALL_CONTINUE {
            get {
                return ResourceManager.GetString("ALERT_DISMISS_ALL_CONTINUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This operation will remove permanently all alerts from every connected server. Do you want to continue?
        ///
        ///Note that if RBAC is enabled, only alerts which you have privileges to dismiss will be affected. ähnelt.
        /// </summary>
        public static string ALERT_DISMISS_ALL_NO_FILTER_CONTINUE {
            get {
                return ResourceManager.GetString("ALERT_DISMISS_ALL_NO_FILTER_CONTINUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Once a system alert is dismissed it will be removed from the server permanently. Do you want to continue? ähnelt.
        /// </summary>
        public static string ALERT_DISMISS_CONFIRM {
            get {
                return ResourceManager.GetString("ALERT_DISMISS_CONFIRM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This operation will remove the selected alerts from the servers permanently. Do you want to continue?
        ///
        ///Note that if RBAC is enabled, only alerts which you have privileges to dismiss will be affected. ähnelt.
        /// </summary>
        public static string ALERT_DISMISS_SELECTED_CONFIRM {
            get {
                return ResourceManager.GetString("ALERT_DISMISS_SELECTED_CONFIRM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die When control domain memory usage exceeds {0} for {1} min(s) ähnelt.
        /// </summary>
        public static string ALERT_DOM0_MEMORY_SUB_TEXT {
            get {
                return ResourceManager.GetString("ALERT_DOM0_MEMORY_SUB_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export &amp;all ähnelt.
        /// </summary>
        public static string ALERT_EXPORT_ALL_BUTTON {
            get {
                return ResourceManager.GetString("ALERT_EXPORT_ALL_BUTTON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You have applied filters to the list of alerts. Do you want to export all alerts from every connected server, or only the alerts you have chosen to view? ähnelt.
        /// </summary>
        public static string ALERT_EXPORT_ALL_OR_FILTERED {
            get {
                return ResourceManager.GetString("ALERT_EXPORT_ALL_OR_FILTERED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only export &amp;visible ähnelt.
        /// </summary>
        public static string ALERT_EXPORT_FILTERED_BUTTON {
            get {
                return ResourceManager.GetString("ALERT_EXPORT_FILTERED_BUTTON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Help ähnelt.
        /// </summary>
        public static string ALERT_GENERIC_HELP {
            get {
                return ResourceManager.GetString("ALERT_GENERIC_HELP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die When free memory falls below {0} for {1} min(s) ähnelt.
        /// </summary>
        public static string ALERT_MEMORY_SUB_TEXT {
            get {
                return ResourceManager.GetString("ALERT_MEMORY_SUB_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die When network usage exceeds {0} for {1} min(s) ähnelt.
        /// </summary>
        public static string ALERT_NET_SUB_TEXT {
            get {
                return ResourceManager.GetString("ALERT_NET_SUB_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Go to Web Page ähnelt.
        /// </summary>
        public static string ALERT_NEW_PATCH_DOWNLOAD {
            get {
                return ResourceManager.GetString("ALERT_NEW_PATCH_DOWNLOAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} is now available ähnelt.
        /// </summary>
        public static string ALERT_NEW_VERSION {
            get {
                return ResourceManager.GetString("ALERT_NEW_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} is now available. Download the new version from the [Citrix] website. ähnelt.
        /// </summary>
        public static string ALERT_NEW_VERSION_DETAILS {
            get {
                return ResourceManager.GetString("ALERT_NEW_VERSION_DETAILS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Go to Web Page ähnelt.
        /// </summary>
        public static string ALERT_NEW_VERSION_DOWNLOAD {
            get {
                return ResourceManager.GetString("ALERT_NEW_VERSION_DOWNLOAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die When SR physical utilization exceeds {0} for {1} min(s) ähnelt.
        /// </summary>
        public static string ALERT_SR_PHYSICAL_UTILISATION_SUB_TEXT {
            get {
                return ResourceManager.GetString("ALERT_SR_PHYSICAL_UTILISATION_SUB_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die When storage throughput exceeds {0} for {1} min(s) ähnelt.
        /// </summary>
        public static string ALERT_SR_SUB_TEXT {
            get {
                return ResourceManager.GetString("ALERT_SR_SUB_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Alerts ähnelt.
        /// </summary>
        public static string ALERTS {
            get {
                return ResourceManager.GetString("ALERTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Alerts found: {0} ähnelt.
        /// </summary>
        public static string ALERTS_FOUND {
            get {
                return ResourceManager.GetString("ALERTS_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Total alerts: {0} ähnelt.
        /// </summary>
        public static string ALERTS_TOTAL {
            get {
                return ResourceManager.GetString("ALERTS_TOTAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All Files ähnelt.
        /// </summary>
        public static string ALL_FILES {
            get {
                return ResourceManager.GetString("ALL_FILES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All of the following: ähnelt.
        /// </summary>
        public static string ALL_OF {
            get {
                return ResourceManager.GetString("ALL_OF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All your managed servers are fully licensed. ähnelt.
        /// </summary>
        public static string ALL_SERVERS_LICENSED {
            get {
                return ResourceManager.GetString("ALL_SERVERS_LICENSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All Storage Repositories ähnelt.
        /// </summary>
        public static string ALL_SRS {
            get {
                return ResourceManager.GetString("ALL_SRS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All resources ähnelt.
        /// </summary>
        public static string ALL_TYPES {
            get {
                return ResourceManager.GetString("ALL_TYPES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All resources and folders ähnelt.
        /// </summary>
        public static string ALL_TYPES_AND_FOLDERS {
            get {
                return ResourceManager.GetString("ALL_TYPES_AND_FOLDERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All Updates Applied ähnelt.
        /// </summary>
        public static string ALL_UPDATES_APPLIED {
            get {
                return ResourceManager.GetString("ALL_UPDATES_APPLIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All Updates Uploaded ähnelt.
        /// </summary>
        public static string ALL_UPDATES_UPLOADED {
            get {
                return ResourceManager.GetString("ALL_UPDATES_UPLOADED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Allow to continue ähnelt.
        /// </summary>
        public static string ALLOW_TO_CONTINUE {
            get {
                return ResourceManager.GetString("ALLOW_TO_CONTINUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Allowed MTU range: {0} to {1} ähnelt.
        /// </summary>
        public static string ALLOWED_MTU_RANGE {
            get {
                return ResourceManager.GetString("ALLOWED_MTU_RANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Allowed MTU value: {0} ähnelt.
        /// </summary>
        public static string ALLOWED_MTU_VALUE {
            get {
                return ResourceManager.GetString("ALLOWED_MTU_VALUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The SR &apos;{0}&apos; is currently attached elsewhere. Do you want to attach it to &apos;{1}&apos;? 
        ///
        ///Warning: you must ensure that the SR is not in use by any server not connected to [XenCenter]. Failure to do so may result in data loss. ähnelt.
        /// </summary>
        public static string ALREADY_ATTACHED_ELSEWHERE {
            get {
                return ResourceManager.GetString("ALREADY_ATTACHED_ELSEWHERE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are already connected to server &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string ALREADY_CONNECTED {
            get {
                return ResourceManager.GetString("ALREADY_CONNECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die already in {0} ähnelt.
        /// </summary>
        public static string ALREADY_IN_BOND {
            get {
                return ResourceManager.GetString("ALREADY_IN_BOND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Any ancestor folder ähnelt.
        /// </summary>
        public static string ANCESTOR_FOLDERS {
            get {
                return ResourceManager.GetString("ANCESTOR_FOLDERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Any of the following: ähnelt.
        /// </summary>
        public static string ANY_OF {
            get {
                return ResourceManager.GetString("ANY_OF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Applied on:  ähnelt.
        /// </summary>
        public static string APPLIED_ON {
            get {
                return ResourceManager.GetString("APPLIED_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Applies To ähnelt.
        /// </summary>
        public static string APPLIES_TO {
            get {
                return ResourceManager.GetString("APPLIES_TO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Apply hotfix ähnelt.
        /// </summary>
        public static string APPLY_HOTFIX {
            get {
                return ResourceManager.GetString("APPLY_HOTFIX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Applying this update failed.  Logs:
        ///
        /// ähnelt.
        /// </summary>
        public static string APPLY_PATCH_FAILED_LOG_MESSAGE {
            get {
                return ResourceManager.GetString("APPLY_PATCH_FAILED_LOG_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 
        ///
        ///Apply update &apos;{0}&apos; to server &apos;{1}&apos;...
        ///
        /// ähnelt.
        /// </summary>
        public static string APPLY_PATCH_LOG_MESSAGE {
            get {
                return ResourceManager.GetString("APPLY_PATCH_LOG_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Applying hotfix to &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string APPLYING_HOTFIX_TO_HOST {
            get {
                return ResourceManager.GetString("APPLYING_HOTFIX_TO_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Applying Update &apos;{0}&apos; to Server &apos;{1}&apos;... ähnelt.
        /// </summary>
        public static string APPLYING_PATCH {
            get {
                return ResourceManager.GetString("APPLYING_PATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die License applied ähnelt.
        /// </summary>
        public static string APPLYLICENSE_APPLIED {
            get {
                return ResourceManager.GetString("APPLYLICENSE_APPLIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Applying license {0}... ähnelt.
        /// </summary>
        public static string APPLYLICENSE_APPLYING {
            get {
                return ResourceManager.GetString("APPLYLICENSE_APPLYING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Preparing to apply license ähnelt.
        /// </summary>
        public static string APPLYLICENSE_PREP {
            get {
                return ResourceManager.GetString("APPLYLICENSE_PREP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Applying license to server {0} ähnelt.
        /// </summary>
        public static string APPLYLICENSE_TITLE {
            get {
                return ResourceManager.GetString("APPLYLICENSE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die License updated ähnelt.
        /// </summary>
        public static string APPLYLICENSE_UPDATED {
            get {
                return ResourceManager.GetString("APPLYLICENSE_UPDATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die are empty ähnelt.
        /// </summary>
        public static string ARE_EMPTY {
            get {
                return ResourceManager.GetString("ARE_EMPTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die are not empty ähnelt.
        /// </summary>
        public static string ARE_NOT_EMPTY {
            get {
                return ResourceManager.GetString("ARE_NOT_EMPTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die As soon as the snapshot is taken ähnelt.
        /// </summary>
        public static string ASAPSNAPSHOTTAKEN {
            get {
                return ResourceManager.GetString("ASAPSNAPSHOTTAKEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A-SIS capable ähnelt.
        /// </summary>
        public static string ASIS_CAPABLE {
            get {
                return ResourceManager.GetString("ASIS_CAPABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VM migration status ähnelt.
        /// </summary>
        public static string ASSERT_CAN_EVACUATE_CHECK_DESCRIPTION {
            get {
                return ResourceManager.GetString("ASSERT_CAN_EVACUATE_CHECK_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: Can recover VM check ähnelt.
        /// </summary>
        public static string ASSERT_VM_CAN_BE_RECOVERED_CHECK_DESCRIPTION {
            get {
                return ResourceManager.GetString("ASSERT_VM_CAN_BE_RECOVERED_CHECK_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die License Details ähnelt.
        /// </summary>
        public static string ASSIGN_LICENSE_DIALOG_COLLAPSE_MESSAGE {
            get {
                return ResourceManager.GetString("ASSIGN_LICENSE_DIALOG_COLLAPSE_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die License Details ähnelt.
        /// </summary>
        public static string ASSIGN_LICENSE_DIALOG_EXPAND_MESSAGE {
            get {
                return ResourceManager.GetString("ASSIGN_LICENSE_DIALOG_EXPAND_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Assign to vA&amp;pp ähnelt.
        /// </summary>
        public static string ASSIGN_VM_APPLIANCE {
            get {
                return ResourceManager.GetString("ASSIGN_VM_APPLIANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Assign VM &apos;{0}&apos; to vApp &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string ASSIGN_VM_TO_VAPP {
            get {
                return ResourceManager.GetString("ASSIGN_VM_TO_VAPP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Assign VMs to vApp &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ASSIGN_VMS_TO_VAPP {
            get {
                return ResourceManager.GetString("ASSIGN_VMS_TO_VAPP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Assign VM to snapsh&amp;ot schedule ähnelt.
        /// </summary>
        public static string ASSIGN_VMSS_POLICY {
            get {
                return ResourceManager.GetString("ASSIGN_VMSS_POLICY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Assign VM to snapshot schedule ähnelt.
        /// </summary>
        public static string ASSIGN_VMSS_POLICY_CONTEXT_MENU {
            get {
                return ResourceManager.GetString("ASSIGN_VMSS_POLICY_CONTEXT_MENU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Assign VM to snapshot schedule... ähnelt.
        /// </summary>
        public static string ASSIGN_VMSS_POLICY_NOAMP {
            get {
                return ResourceManager.GetString("ASSIGN_VMSS_POLICY_NOAMP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die vApp assigned. ähnelt.
        /// </summary>
        public static string ASSIGNED_VM_APPLIANCE {
            get {
                return ResourceManager.GetString("ASSIGNED_VM_APPLIANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Snapshot schedule assigned. ähnelt.
        /// </summary>
        public static string ASSIGNED_VMSS_POLICY {
            get {
                return ResourceManager.GetString("ASSIGNED_VMSS_POLICY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Assigning vApp... ähnelt.
        /// </summary>
        public static string ASSIGNING_VM_APPLIANCE {
            get {
                return ResourceManager.GetString("ASSIGNING_VM_APPLIANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Assigning to a snapshot schedule... ähnelt.
        /// </summary>
        public static string ASSIGNING_VMSS_POLICY {
            get {
                return ResourceManager.GetString("ASSIGNING_VMSS_POLICY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The selected disk can only be attached in read/write mode ähnelt.
        /// </summary>
        public static string ATTACH_DISK_DIALOG_READONLY_DISABLED_FOR_HVM {
            get {
                return ResourceManager.GetString("ATTACH_DISK_DIALOG_READONLY_DISABLED_FOR_HVM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Attach SR ähnelt.
        /// </summary>
        public static string ATTACH_SR {
            get {
                return ResourceManager.GetString("ATTACH_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} - {1}  ähnelt.
        /// </summary>
        public static string ATTACHDISK_SIZE_DESCRIPTION {
            get {
                return ResourceManager.GetString("ATTACHDISK_SIZE_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attached ähnelt.
        /// </summary>
        public static string ATTACHDISKWIZARD_ATTACHED {
            get {
                return ResourceManager.GetString("ATTACHDISKWIZARD_ATTACHED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die attached to ähnelt.
        /// </summary>
        public static string ATTACHED_TO {
            get {
                return ResourceManager.GetString("ATTACHED_TO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attached virtual disks ähnelt.
        /// </summary>
        public static string ATTACHED_VIRTUAL_DISKS {
            get {
                return ResourceManager.GetString("ATTACHED_VIRTUAL_DISKS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attaching virtual disk &apos;{0}&apos; to VM &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string ATTACHING_VIRTUAL_DISK {
            get {
                return ResourceManager.GetString("ATTACHING_VIRTUAL_DISK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Authorizing User ähnelt.
        /// </summary>
        public static string AUTHORIZING_USER {
            get {
                return ResourceManager.GetString("AUTHORIZING_USER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Auto-start on server boot ähnelt.
        /// </summary>
        public static string AUTOSTART {
            get {
                return ResourceManager.GetString("AUTOSTART", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VM {0} has autostart enabled ähnelt.
        /// </summary>
        public static string AUTOSTART_ENABLED_CHECK_DESCRIPTION {
            get {
                return ResourceManager.GetString("AUTOSTART_ENABLED_CHECK_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die available ähnelt.
        /// </summary>
        public static string AVAILABLE {
            get {
                return ResourceManager.GetString("AVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Download ähnelt.
        /// </summary>
        public static string AVAILABLE_UPDATES_DOWNLOAD_TEXT {
            get {
                return ResourceManager.GetString("AVAILABLE_UPDATES_DOWNLOAD_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An error occurred when searching for updates: {0} ähnelt.
        /// </summary>
        public static string AVAILABLE_UPDATES_ERROR {
            get {
                return ResourceManager.GetString("AVAILABLE_UPDATES_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The following software updates for your system are available online. ähnelt.
        /// </summary>
        public static string AVAILABLE_UPDATES_FOUND {
            get {
                return ResourceManager.GetString("AVAILABLE_UPDATES_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There was an internal error when searching for available updates. Please see the logs for more information. ähnelt.
        /// </summary>
        public static string AVAILABLE_UPDATES_INTERNAL_ERROR {
            get {
                return ResourceManager.GetString("AVAILABLE_UPDATES_INTERNAL_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There was a network error when searching for available updates. Please see the logs for more information. ähnelt.
        /// </summary>
        public static string AVAILABLE_UPDATES_NETWORK_ERROR {
            get {
                return ResourceManager.GetString("AVAILABLE_UPDATES_NETWORK_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No updates found. ähnelt.
        /// </summary>
        public static string AVAILABLE_UPDATES_NOT_FOUND {
            get {
                return ResourceManager.GetString("AVAILABLE_UPDATES_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Searching for updates... ähnelt.
        /// </summary>
        public static string AVAILABLE_UPDATES_SEARCHING {
            get {
                return ResourceManager.GetString("AVAILABLE_UPDATES_SEARCHING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Backing up server &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string BACKINGUP_HOST {
            get {
                return ResourceManager.GetString("BACKINGUP_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Backing up server &apos;{0}&apos;, {1} received...  ähnelt.
        /// </summary>
        public static string BACKINGUP_HOST_WITH_DATA {
            get {
                return ResourceManager.GetString("BACKINGUP_HOST_WITH_DATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Back Up Server... ähnelt.
        /// </summary>
        public static string BACKUP_HOST {
            get {
                return ResourceManager.GetString("BACKUP_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Backup name ähnelt.
        /// </summary>
        public static string BACKUP_NAME {
            get {
                return ResourceManager.GetString("BACKUP_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the server to restore from the list below. If the server you want is not listed here, you can add it by clicking Add New Server. ähnelt.
        /// </summary>
        public static string BACKUP_SELECT_HOST {
            get {
                return ResourceManager.GetString("BACKUP_SELECT_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restore ähnelt.
        /// </summary>
        public static string BACKUP_SELECT_HOST_BUTTON {
            get {
                return ResourceManager.GetString("BACKUP_SELECT_HOST_BUTTON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restore from Backup ähnelt.
        /// </summary>
        public static string BACKUP_SELECT_HOST_TITLE {
            get {
                return ResourceManager.GetString("BACKUP_SELECT_HOST_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The server you are connecting to has been restored from a backup of &apos;{0}&apos;, a server you are already connected to. 
        ///
        ///This is a potentially dangerous operation and is not allowed. ähnelt.
        /// </summary>
        public static string BAD_RESTORE_DETECTED {
            get {
                return ResourceManager.GetString("BAD_RESTORE_DETECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The server &apos;{0}&apos; gave a bad response to the query. ähnelt.
        /// </summary>
        public static string BAD_SERVER_RESPONSE {
            get {
                return ResourceManager.GetString("BAD_SERVER_RESPONSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose the VMs whose memory settings you want to adjust ähnelt.
        /// </summary>
        public static string BALLOONING_PAGE_CHOOSEVMS_PAGETITLE {
            get {
                return ResourceManager.GetString("BALLOONING_PAGE_CHOOSEVMS_PAGETITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select VMs ähnelt.
        /// </summary>
        public static string BALLOONING_PAGE_CHOOSEVMS_TEXT {
            get {
                return ResourceManager.GetString("BALLOONING_PAGE_CHOOSEVMS_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure the memory settings for your selected VMs ähnelt.
        /// </summary>
        public static string BALLOONING_PAGE_MEMORY_PAGETITLE {
            get {
                return ResourceManager.GetString("BALLOONING_PAGE_MEMORY_PAGETITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adjust memory settings ähnelt.
        /// </summary>
        public static string BALLOONING_PAGE_MEMORY_TEXT {
            get {
                return ResourceManager.GetString("BALLOONING_PAGE_MEMORY_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set a fixed memory for this VM, or set a memory range and allow the VM&apos;s memory allocation to be adjusted automatically. ähnelt.
        /// </summary>
        public static string BALLOONING_RUBRIC {
            get {
                return ResourceManager.GetString("BALLOONING_RUBRIC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set the memory range and static maximum memory for this VM. ähnelt.
        /// </summary>
        public static string BALLOONING_RUBRIC_ADVANCED {
            get {
                return ResourceManager.GetString("BALLOONING_RUBRIC_ADVANCED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set the memory range and static maximum memory for VMs created from this template. ähnelt.
        /// </summary>
        public static string BALLOONING_RUBRIC_ADVANCED_TEMPLATE {
            get {
                return ResourceManager.GetString("BALLOONING_RUBRIC_ADVANCED_TEMPLATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set a fixed memory for VMs created from this template, or set a memory range and allow the VMs&apos; memory allocation to be adjusted automatically. ähnelt.
        /// </summary>
        public static string BALLOONING_RUBRIC_TEMPLATE {
            get {
                return ResourceManager.GetString("BALLOONING_RUBRIC_TEMPLATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Base ähnelt.
        /// </summary>
        public static string BASE {
            get {
                return ResourceManager.GetString("BASE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die is before ähnelt.
        /// </summary>
        public static string BEFORE {
            get {
                return ResourceManager.GetString("BEFORE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Before You Start ähnelt.
        /// </summary>
        public static string BEFORE_YOU_START {
            get {
                return ResourceManager.GetString("BEFORE_YOU_START", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die bigger than ähnelt.
        /// </summary>
        public static string BIGGER_THAN {
            get {
                return ResourceManager.GetString("BIGGER_THAN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die BIOS strings copied ähnelt.
        /// </summary>
        public static string BIOS_STRINGS_COPIED {
            get {
                return ResourceManager.GetString("BIOS_STRINGS_COPIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bonded network ähnelt.
        /// </summary>
        public static string BOND {
            get {
                return ResourceManager.GetString("BOND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Create Bond ähnelt.
        /// </summary>
        public static string BOND_CREATE {
            get {
                return ResourceManager.GetString("BOND_CREATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Create bond anyway ähnelt.
        /// </summary>
        public static string BOND_CREATE_CONTINUE {
            get {
                return ResourceManager.GetString("BOND_CREATE_CONTINUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Can’t create this bond while HA is enabled
        ///
        ///A management interface exists on one of the selected NICs. Moving the management interface to the bond could result in HA network heartbeat failure, so this action is not allowed while HA is on.
        ///
        ///To continue, either select different NICs for the bond, or disable HA, create the bond, and then enable HA again. ähnelt.
        /// </summary>
        public static string BOND_CREATE_HA_ENABLED {
            get {
                return ResourceManager.GetString("BOND_CREATE_HA_ENABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This bond cannot be created because both management and secondary interfaces exist on your selected bond members.
        ///
        ///Both types of interface cannot be added to the same bond. Choose different bond members, or move the management interfaces before creating the bond. ähnelt.
        /// </summary>
        public static string BOND_CREATE_WILL_DISTURB_BOTH {
            get {
                return ResourceManager.GetString("BOND_CREATE_WILL_DISTURB_BOTH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating this bond will automatically move the management interface on one of your selected bond members to the bond itself:
        ///
        ///- [XenCenter] connections to the pool will temporarily be disturbed
        ///
        ///- If your network configuration is incorrect then [XenCenter] may permanently lose the connection to the pool, or pool members may be unable to contact each other. ähnelt.
        /// </summary>
        public static string BOND_CREATE_WILL_DISTURB_PRIMARY {
            get {
                return ResourceManager.GetString("BOND_CREATE_WILL_DISTURB_PRIMARY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating this bond will disrupt traffic through the secondary interfaces on the bond members while the interfaces are moved onto the bond itself. ähnelt.
        /// </summary>
        public static string BOND_CREATE_WILL_DISTURB_SECONDARY {
            get {
                return ResourceManager.GetString("BOND_CREATE_WILL_DISTURB_SECONDARY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Delete bond anyway ähnelt.
        /// </summary>
        public static string BOND_DELETE_CONTINUE {
            get {
                return ResourceManager.GetString("BOND_DELETE_CONTINUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Can’t delete this bond while HA is enabled
        ///
        ///A management interface exists on one of the bonded NICs. Deleting the  bond could result in HA network heartbeat failure, so this action is not allowed while HA is on.
        ///
        ///To continue, disable HA, delete the bond, and then enable HA again. ähnelt.
        /// </summary>
        public static string BOND_DELETE_HA_ENABLED {
            get {
                return ResourceManager.GetString("BOND_DELETE_HA_ENABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}
        ///
        ///Deleting this bond will automatically transfer the management and secondary interfaces on the bond to the first slave member of the bond: 
        ///
        ///- [XenCenter] connections to the pool will temporarily be disturbed
        ///
        ///- Traffic through the secondary interface will be disrupted
        ///
        ///- If your network configuration is incorrect then [XenCenter] may permanently lose the connection to the pool, or pool members may be unable to contact each other. ähnelt.
        /// </summary>
        public static string BOND_DELETE_WILL_DISTURB_BOTH {
            get {
                return ResourceManager.GetString("BOND_DELETE_WILL_DISTURB_BOTH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}
        ///
        ///Deleting this bond will automatically transfer the management interface on the bond to the first slave member of the bond: 
        ///
        ///- [XenCenter] connections to the pool will temporarily be disturbed
        ///
        ///- If your network configuration is incorrect then [XenCenter] may permanently lose the connection to the pool, or pool members may be unable to contact each other. ähnelt.
        /// </summary>
        public static string BOND_DELETE_WILL_DISTURB_PRIMARY {
            get {
                return ResourceManager.GetString("BOND_DELETE_WILL_DISTURB_PRIMARY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}
        ///
        ///Deleting this bond will disrupt traffic through the secondary interface on the bond while the interface is moved to the first slave of the bond. ähnelt.
        /// </summary>
        public static string BOND_DELETE_WILL_DISTURB_SECONDARY {
            get {
                return ResourceManager.GetString("BOND_DELETE_WILL_DISTURB_SECONDARY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VM will not boot from devices below this line ähnelt.
        /// </summary>
        public static string BOOT_DEVICE_DISABLED_ROW_TEXT {
            get {
                return ResourceManager.GetString("BOOT_DEVICE_DISABLED_ROW_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DVD-Drive ähnelt.
        /// </summary>
        public static string BOOT_DVD_DRIVE {
            get {
                return ResourceManager.GetString("BOOT_DVD_DRIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hard Disk ähnelt.
        /// </summary>
        public static string BOOT_HARD_DISK {
            get {
                return ResourceManager.GetString("BOOT_HARD_DISK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Boot order: {0} ähnelt.
        /// </summary>
        public static string BOOTORDER {
            get {
                return ResourceManager.GetString("BOOTORDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There are broken SRs after the upgrade. To solve this problem you should reattach the SRs. ähnelt.
        /// </summary>
        public static string BROKEN_SRS_AFTER_UPGRADE {
            get {
                return ResourceManager.GetString("BROKEN_SRS_AFTER_UPGRADE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your Tools ISO is on a broken SR, [XenCenter] will attempt to fix it before proceeding. Do you want to continue? ähnelt.
        /// </summary>
        public static string BROKEN_TOOLS_PROMPT {
            get {
                return ResourceManager.GetString("BROKEN_TOOLS_PROMPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die status-report- ähnelt.
        /// </summary>
        public static string BUGTOOL_FILE_PREFIX {
            get {
                return ResourceManager.GetString("BUGTOOL_FILE_PREFIX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Compiling ähnelt.
        /// </summary>
        public static string BUGTOOL_HOST_STATUS_COMPILING {
            get {
                return ResourceManager.GetString("BUGTOOL_HOST_STATUS_COMPILING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Downloading - {0} ähnelt.
        /// </summary>
        public static string BUGTOOL_HOST_STATUS_DOWNLOADING {
            get {
                return ResourceManager.GetString("BUGTOOL_HOST_STATUS_DOWNLOADING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed ähnelt.
        /// </summary>
        public static string BUGTOOL_HOST_STATUS_FAILED {
            get {
                return ResourceManager.GetString("BUGTOOL_HOST_STATUS_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed - {0} ähnelt.
        /// </summary>
        public static string BUGTOOL_HOST_STATUS_FAILED_WITH_ERROR {
            get {
                return ResourceManager.GetString("BUGTOOL_HOST_STATUS_FAILED_WITH_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pending ähnelt.
        /// </summary>
        public static string BUGTOOL_HOST_STATUS_PENDING {
            get {
                return ResourceManager.GetString("BUGTOOL_HOST_STATUS_PENDING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the data you want to include in your report ähnelt.
        /// </summary>
        public static string BUGTOOL_PAGE_CAPABILITIES_PAGETITLE {
            get {
                return ResourceManager.GetString("BUGTOOL_PAGE_CAPABILITIES_PAGETITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select Report Contents ähnelt.
        /// </summary>
        public static string BUGTOOL_PAGE_CAPABILITIES_TEXT {
            get {
                return ResourceManager.GetString("BUGTOOL_PAGE_CAPABILITIES_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Case number is invalid. ähnelt.
        /// </summary>
        public static string BUGTOOL_PAGE_DESTINATION_INVALID_CASE_NO {
            get {
                return ResourceManager.GetString("BUGTOOL_PAGE_DESTINATION_INVALID_CASE_NO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Destination directory is invalid. ähnelt.
        /// </summary>
        public static string BUGTOOL_PAGE_DESTINATION_INVALID_FOLDER {
            get {
                return ResourceManager.GetString("BUGTOOL_PAGE_DESTINATION_INVALID_FOLDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die File name is invalid. ähnelt.
        /// </summary>
        public static string BUGTOOL_PAGE_DESTINATION_INVALID_NAME {
            get {
                return ResourceManager.GetString("BUGTOOL_PAGE_DESTINATION_INVALID_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select a destination folder for the report files ähnelt.
        /// </summary>
        public static string BUGTOOL_PAGE_DESTINATION_PAGETITLE {
            get {
                return ResourceManager.GetString("BUGTOOL_PAGE_DESTINATION_PAGETITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Report Destination ähnelt.
        /// </summary>
        public static string BUGTOOL_PAGE_DESTINATION_TEXT {
            get {
                return ResourceManager.GetString("BUGTOOL_PAGE_DESTINATION_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to cancel the current action? ähnelt.
        /// </summary>
        public static string BUGTOOL_PAGE_RETRIEVEDATA_CONFIRM_CANCEL {
            get {
                return ResourceManager.GetString("BUGTOOL_PAGE_RETRIEVEDATA_CONFIRM_CANCEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Compiling Status Report ähnelt.
        /// </summary>
        public static string BUGTOOL_PAGE_RETRIEVEDATA_PAGE_TITLE {
            get {
                return ResourceManager.GetString("BUGTOOL_PAGE_RETRIEVEDATA_PAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Compile Report ähnelt.
        /// </summary>
        public static string BUGTOOL_PAGE_RETRIEVEDATA_TEXT {
            get {
                return ResourceManager.GetString("BUGTOOL_PAGE_RETRIEVEDATA_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select Servers ähnelt.
        /// </summary>
        public static string BUGTOOL_PAGE_SERVERS_TEXT {
            get {
                return ResourceManager.GetString("BUGTOOL_PAGE_SERVERS_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the servers you want to include in the report ähnelt.
        /// </summary>
        public static string BUGTOOL_PAGE_SERVERS_TITLE {
            get {
                return ResourceManager.GetString("BUGTOOL_PAGE_SERVERS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A {0} user cannot retrieve all the specified items. ähnelt.
        /// </summary>
        public static string BUGTOOL_RBAC_FAILURE {
            get {
                return ResourceManager.GetString("BUGTOOL_RBAC_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Saving server status report ähnelt.
        /// </summary>
        public static string BUGTOOL_SAVING {
            get {
                return ResourceManager.GetString("BUGTOOL_SAVING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Built-in network ähnelt.
        /// </summary>
        public static string BUILTIN_NETWORK {
            get {
                return ResourceManager.GetString("BUILTIN_NETWORK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PCI Bus Path ähnelt.
        /// </summary>
        public static string BUS_PATH {
            get {
                return ResourceManager.GetString("BUS_PATH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open or Collapse the Properties ähnelt.
        /// </summary>
        public static string BUTTON_DISCLOSURE_TOOLTIP {
            get {
                return ResourceManager.GetString("BUTTON_DISCLOSURE_TOOLTIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cache not yet populated ähnelt.
        /// </summary>
        public static string CACHE_NOT_YET_POPULATED {
            get {
                return ResourceManager.GetString("CACHE_NOT_YET_POPULATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Caching ähnelt.
        /// </summary>
        public static string CACHING {
            get {
                return ResourceManager.GetString("CACHING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cancel ähnelt.
        /// </summary>
        public static string CANCEL {
            get {
                return ResourceManager.GetString("CANCEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cancel Connect ähnelt.
        /// </summary>
        public static string CANCEL_CONNECT {
            get {
                return ResourceManager.GetString("CANCEL_CONNECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Canceling... ähnelt.
        /// </summary>
        public static string CANCELING {
            get {
                return ResourceManager.GetString("CANCELING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Canceling Tasks ähnelt.
        /// </summary>
        public static string CANCELING_TASKS {
            get {
                return ResourceManager.GetString("CANCELING_TASKS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cancelled by user ähnelt.
        /// </summary>
        public static string CANCELLED_BY_USER {
            get {
                return ResourceManager.GetString("CANCELLED_BY_USER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This ISO storage is in use and cannot be activated. ähnelt.
        /// </summary>
        public static string CANNOT_ACTIVATE_ISO_IN_USE {
            get {
                return ResourceManager.GetString("CANNOT_ACTIVATE_ISO_IN_USE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This snapshot is in use and cannot be activated. ähnelt.
        /// </summary>
        public static string CANNOT_ACTIVATE_SNAPSHOT_IN_USE {
            get {
                return ResourceManager.GetString("CANNOT_ACTIVATE_SNAPSHOT_IN_USE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This virtual disk is already activated on VM &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string CANNOT_ACTIVATE_VD_ALREADY_ACTIVE {
            get {
                return ResourceManager.GetString("CANNOT_ACTIVATE_VD_ALREADY_ACTIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This virtual disk is in use and cannot be activated. ähnelt.
        /// </summary>
        public static string CANNOT_ACTIVATE_VD_IN_USE {
            get {
                return ResourceManager.GetString("CANNOT_ACTIVATE_VD_IN_USE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die It is not possible to activate this virtual disk on VM &apos;{0}&apos; as the VM is not running. ähnelt.
        /// </summary>
        public static string CANNOT_ACTIVATE_VD_VM_HALTED {
            get {
                return ResourceManager.GetString("CANNOT_ACTIVATE_VD_VM_HALTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You must install I/O drivers on VM &apos;{0}&apos; before you can activate this virtual disk for the VM. ähnelt.
        /// </summary>
        public static string CANNOT_ACTIVATE_VD_VM_NEEDS_IO_DRIVERS {
            get {
                return ResourceManager.GetString("CANNOT_ACTIVATE_VD_VM_NEEDS_IO_DRIVERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You must install [XenServer product] Tools on VM &apos;{0}&apos; before you can activate this virtual disk for the VM. ähnelt.
        /// </summary>
        public static string CANNOT_ACTIVATE_VD_VM_NEEDS_TOOLS {
            get {
                return ResourceManager.GetString("CANNOT_ACTIVATE_VD_VM_NEEDS_TOOLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (The network&apos;s MTU cannot be changed because it is in use as the management interface &apos;{0}&apos;) ähnelt.
        /// </summary>
        public static string CANNOT_CONFIGURE_JUMBO_DISTURB_MANAGEMENT {
            get {
                return ResourceManager.GetString("CANNOT_CONFIGURE_JUMBO_DISTURB_MANAGEMENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (The network&apos;s MTU cannot be changed because there are active VMs attached without tools installed) ähnelt.
        /// </summary>
        public static string CANNOT_CONFIGURE_JUMBO_VM_NO_TOOLS {
            get {
                return ResourceManager.GetString("CANNOT_CONFIGURE_JUMBO_VM_NO_TOOLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You cannot configure an archive that is more frequent than the snapshot schedule ähnelt.
        /// </summary>
        public static string CANNOT_CONFIGURE_MORE_FREQ_ARCHIVE {
            get {
                return ResourceManager.GetString("CANNOT_CONFIGURE_MORE_FREQ_ARCHIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (The network&apos;s NIC and VLAN cannot be changed as it is in use as the management interface &apos;{0}&apos;) ähnelt.
        /// </summary>
        public static string CANNOT_CONFIGURE_NET_DISTURB_MANAGEMENT {
            get {
                return ResourceManager.GetString("CANNOT_CONFIGURE_NET_DISTURB_MANAGEMENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (The network&apos;s NIC and VLAN cannot be changed as there are active VMs attached) ähnelt.
        /// </summary>
        public static string CANNOT_CONFIGURE_NET_VMS_ATTACHED {
            get {
                return ResourceManager.GetString("CANNOT_CONFIGURE_NET_VMS_ATTACHED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This ISO storage is in use and cannot be deactivated. ähnelt.
        /// </summary>
        public static string CANNOT_DEACTIVATE_ISO_IN_USE {
            get {
                return ResourceManager.GetString("CANNOT_DEACTIVATE_ISO_IN_USE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This virtual disk is already deactivated on VM &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string CANNOT_DEACTIVATE_NOT_ACTIVE {
            get {
                return ResourceManager.GetString("CANNOT_DEACTIVATE_NOT_ACTIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This snapshot is in use and cannot be deactivated. ähnelt.
        /// </summary>
        public static string CANNOT_DEACTIVATE_SNAPSHOT_IN_USE {
            get {
                return ResourceManager.GetString("CANNOT_DEACTIVATE_SNAPSHOT_IN_USE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This virtual disk is in use and cannot be deactivated. ähnelt.
        /// </summary>
        public static string CANNOT_DEACTIVATE_VDI_IN_USE {
            get {
                return ResourceManager.GetString("CANNOT_DEACTIVATE_VDI_IN_USE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You must install I/O drivers on VM &apos;{0}&apos; before you can deactivate this virtual disk for the VM. ähnelt.
        /// </summary>
        public static string CANNOT_DEACTIVATE_VDI_NEEDS_IO_DRIVERS {
            get {
                return ResourceManager.GetString("CANNOT_DEACTIVATE_VDI_NEEDS_IO_DRIVERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You must install [XenServer product] Tools on VM &apos;{0}&apos; before you can deactivate this virtual disk for the VM. ähnelt.
        /// </summary>
        public static string CANNOT_DEACTIVATE_VDI_NEEDS_TOOLS {
            get {
                return ResourceManager.GetString("CANNOT_DEACTIVATE_VDI_NEEDS_TOOLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die It is not possible to deactivate this virtual disk on VM &apos;{0}&apos; because the VM is not running. ähnelt.
        /// </summary>
        public static string CANNOT_DEACTIVATE_VDI_VM_NOT_RUNNING {
            get {
                return ResourceManager.GetString("CANNOT_DEACTIVATE_VDI_VM_NOT_RUNNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Virtual disks must be deactivated before being deleted. This virtual disk is in use by the VM &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string CANNOT_DELETE_ACTIVE_VDI {
            get {
                return ResourceManager.GetString("CANNOT_DELETE_ACTIVE_VDI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ISO storage must be ejected from VMs before being deleted. This storage is in use by the VM &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string CANNOT_DELETE_ACTIVE_VDI_ISO {
            get {
                return ResourceManager.GetString("CANNOT_DELETE_ACTIVE_VDI_ISO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die It is not possible to deactivate and delete this virtual disk on the VM &apos;{0}&apos;: 
        ///
        ///{1} ähnelt.
        /// </summary>
        public static string CANNOT_DELETE_CANNOT_DEACTIVATE_REASON {
            get {
                return ResourceManager.GetString("CANNOT_DELETE_CANNOT_DEACTIVATE_REASON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer] templates cannot be deleted. ähnelt.
        /// </summary>
        public static string CANNOT_DELETE_DEFAULT_TEMPLATE {
            get {
                return ResourceManager.GetString("CANNOT_DELETE_DEFAULT_TEMPLATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This virtual disk is used for DR. To delete it, configure DR not to save data to this storage repository. ähnelt.
        /// </summary>
        public static string CANNOT_DELETE_DR_VD {
            get {
                return ResourceManager.GetString("CANNOT_DELETE_DR_VD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This virtual disk is used for HA. To delete it, first disable HA. ähnelt.
        /// </summary>
        public static string CANNOT_DELETE_HA_VD {
            get {
                return ResourceManager.GetString("CANNOT_DELETE_HA_VD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot delete this system disk as it is in use by the running VM &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string CANNOT_DELETE_IN_USE_SYS_VD {
            get {
                return ResourceManager.GetString("CANNOT_DELETE_IN_USE_SYS_VD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die It is not possible to delete this ISO storage. Try again later and confirm your SR supports this operation. ähnelt.
        /// </summary>
        public static string CANNOT_DELETE_ISO_GENERIC {
            get {
                return ResourceManager.GetString("CANNOT_DELETE_ISO_GENERIC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This ISO storage is currently in use and cannot be deleted. ähnelt.
        /// </summary>
        public static string CANNOT_DELETE_ISO_IN_USE {
            get {
                return ResourceManager.GetString("CANNOT_DELETE_ISO_IN_USE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die It is not possible to delete this snapshot. Try again later and confirm your SR supports this operation. ähnelt.
        /// </summary>
        public static string CANNOT_DELETE_SNAPSHOT_GENERIC {
            get {
                return ResourceManager.GetString("CANNOT_DELETE_SNAPSHOT_GENERIC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This snapshot is currently in use and cannot be deleted. ähnelt.
        /// </summary>
        public static string CANNOT_DELETE_SNAPSHOT_IN_USE {
            get {
                return ResourceManager.GetString("CANNOT_DELETE_SNAPSHOT_IN_USE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleting the [XenServer product] Tools ISO storage is not supported. ähnelt.
        /// </summary>
        public static string CANNOT_DELETE_TOOLS_SR {
            get {
                return ResourceManager.GetString("CANNOT_DELETE_TOOLS_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die It is not possible to delete this virtual disk. Try again later and confirm your SR supports this operation. ähnelt.
        /// </summary>
        public static string CANNOT_DELETE_VD_GENERIC {
            get {
                return ResourceManager.GetString("CANNOT_DELETE_VD_GENERIC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This virtual disk is currently in use and cannot be deleted. ähnelt.
        /// </summary>
        public static string CANNOT_DELETE_VD_IN_USE {
            get {
                return ResourceManager.GetString("CANNOT_DELETE_VD_IN_USE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This virtual disk is active on VM &apos;{0}&apos;. Deactivate the virtual disk before deleting. ähnelt.
        /// </summary>
        public static string CANNOT_DELETE_VDI_ACTIVE_ON {
            get {
                return ResourceManager.GetString("CANNOT_DELETE_VDI_ACTIVE_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This virtual disk is attached to multiple VMs. Detach your virtual disk from these VMs before deleting it. ähnelt.
        /// </summary>
        public static string CANNOT_DELETE_VDI_MULTIPLE_VBDS {
            get {
                return ResourceManager.GetString("CANNOT_DELETE_VDI_MULTIPLE_VBDS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Running VMs require tools to be installed before you can delete their virtual disks. This disk is in us by the running VM &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string CANNOT_DELETE_VDI_RUNNING_VM_NO_TOOLS {
            get {
                return ResourceManager.GetString("CANNOT_DELETE_VDI_RUNNING_VM_NO_TOOLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Virtual disks cannot be deleted from suspended VMs. This virtual disk is used by the suspended VM &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string CANNOT_DELETE_VDI_SUSPENDED_VM {
            get {
                return ResourceManager.GetString("CANNOT_DELETE_VDI_SUSPENDED_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You cannot configure an SR of type &apos;{0}&apos; using [XenCenter]. ähnelt.
        /// </summary>
        public static string CANNOT_FIND_SR_WIZARD_TYPE {
            get {
                return ResourceManager.GetString("CANNOT_FIND_SR_WIZARD_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot move this virtual disk because it is attached to a VM that is not running. ähnelt.
        /// </summary>
        public static string CANNOT_MIGRATE_VDI_NON_RUNNING_VM {
            get {
                return ResourceManager.GetString("CANNOT_MIGRATE_VDI_NON_RUNNING_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This virtual disk has CBT enabled. It cannot be moved to another storage repository. ähnelt.
        /// </summary>
        public static string CANNOT_MOVE_CBT_ENABLED_VDI {
            get {
                return ResourceManager.GetString("CANNOT_MOVE_CBT_ENABLED_VDI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This virtual disk is used for DR. It cannot be moved to another storage repository. ähnelt.
        /// </summary>
        public static string CANNOT_MOVE_DR_VD {
            get {
                return ResourceManager.GetString("CANNOT_MOVE_DR_VD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This virtual disk is used for HA. It cannot be moved to another storage repository. ähnelt.
        /// </summary>
        public static string CANNOT_MOVE_HA_VD {
            get {
                return ResourceManager.GetString("CANNOT_MOVE_HA_VD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This virtual disk is in use and cannot be moved. ähnelt.
        /// </summary>
        public static string CANNOT_MOVE_VDI_IN_USE {
            get {
                return ResourceManager.GetString("CANNOT_MOVE_VDI_IN_USE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Snapshot disks cannot be moved ähnelt.
        /// </summary>
        public static string CANNOT_MOVE_VDI_IS_SNAPSHOT {
            get {
                return ResourceManager.GetString("CANNOT_MOVE_VDI_IS_SNAPSHOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You must detach this virtual disk before it can be moved. ähnelt.
        /// </summary>
        public static string CANNOT_MOVE_VDI_WITH_VBDS {
            get {
                return ResourceManager.GetString("CANNOT_MOVE_VDI_WITH_VBDS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot parse required parameter &apos;{1}&apos; on XML node &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string CANNOT_PARSE_NODE_PARAM {
            get {
                return ResourceManager.GetString("CANNOT_PARSE_NODE_PARAM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This StorageLink server cannot be removed because it is currently in use. ähnelt.
        /// </summary>
        public static string CANNOT_REMOVE_SL_SERVER {
            get {
                return ResourceManager.GetString("CANNOT_REMOVE_SL_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The server &apos;{0}&apos; cannot join the pool &apos;{1}&apos; for the following reason:
        ///
        ///{2} ähnelt.
        /// </summary>
        public static string CANT_JOIN_POOL_1 {
            get {
                return ResourceManager.GetString("CANT_JOIN_POOL_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The following servers cannot join the pool &apos;{0}&apos;:
        ///
        ///{1} ähnelt.
        /// </summary>
        public static string CANT_JOIN_POOL_N {
            get {
                return ResourceManager.GetString("CANT_JOIN_POOL_N", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DVD drive on {0} ähnelt.
        /// </summary>
        public static string CD_DRIVE {
            get {
                return ResourceManager.GetString("CD_DRIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The DVD drive cannot be created, because you have reached the maximum number of virtual disks allowed for this virtual machine. ähnelt.
        /// </summary>
        public static string CDDRIVE_MAX_ALLOWED_VBDS {
            get {
                return ResourceManager.GetString("CDDRIVE_MAX_ALLOWED_VBDS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change... ähnelt.
        /// </summary>
        public static string CHANGE {
            get {
                return ResourceManager.GetString("CHANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change policy &apos;{0}&apos; status ähnelt.
        /// </summary>
        public static string CHANGE_POLICY_STATUS {
            get {
                return ResourceManager.GetString("CHANGE_POLICY_STATUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Insert [XenServer] CD ähnelt.
        /// </summary>
        public static string CHANGE_SERVER_CD {
            get {
                return ResourceManager.GetString("CHANGE_SERVER_CD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change Server Password... ähnelt.
        /// </summary>
        public static string CHANGE_SERVER_PASSWORD {
            get {
                return ResourceManager.GetString("CHANGE_SERVER_PASSWORD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The VM &apos;{0}&apos; is already assigned to the snashot schedule &apos;{1}&apos;.
        ///    
        ///Do you want to assign it to the schedule &apos;{2}&apos; instead? ähnelt.
        /// </summary>
        public static string CHANGE_VM_SNAPSHOT_SCHEDULE_WARNING {
            get {
                return ResourceManager.GetString("CHANGE_VM_SNAPSHOT_SCHEDULE_WARNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Assign VM to vApp ähnelt.
        /// </summary>
        public static string CHANGE_VMS_APPLIANCE {
            get {
                return ResourceManager.GetString("CHANGE_VMS_APPLIANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The VM &apos;{0}&apos; is already assigned to the vApp &apos;{1}&apos;.
        ///    
        ///Do you want to assign it to the vApp &apos;{2}&apos; instead? ähnelt.
        /// </summary>
        public static string CHANGE_VMS_APPLIANCE_WARNING {
            get {
                return ResourceManager.GetString("CHANGE_VMS_APPLIANCE_WARNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Some of the VMs you selected are already assigned to a different vApp.
        ///    
        ///Do you want to assign these VMs to the vApp &apos;{0}&apos; instead? ähnelt.
        /// </summary>
        public static string CHANGE_VMS_APPLIANCES_WARNING {
            get {
                return ResourceManager.GetString("CHANGE_VMS_APPLIANCES_WARNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Some of the VMs you selected are already assigned to a different snapshot schedule.
        ///    
        ///Do you want to assign these VMs to the schedule &apos;{0}&apos; instead? ähnelt.
        /// </summary>
        public static string CHANGE_VMS_SNAPSHOT_SCHEDULE_WARNING {
            get {
                return ResourceManager.GetString("CHANGE_VMS_SNAPSHOT_SCHEDULE_WARNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Assign VM to snapshot schedule ähnelt.
        /// </summary>
        public static string CHANGE_VMSS_POLICY {
            get {
                return ResourceManager.GetString("CHANGE_VMSS_POLICY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changed [XenCenter] master password ähnelt.
        /// </summary>
        public static string CHANGED_MASTER_PASSWORD {
            get {
                return ResourceManager.GetString("CHANGED_MASTER_PASSWORD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changed [XenCenter] master password for session restore ähnelt.
        /// </summary>
        public static string CHANGED_MASTER_PASSWORD_LONG {
            get {
                return ResourceManager.GetString("CHANGED_MASTER_PASSWORD_LONG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server CD changed ähnelt.
        /// </summary>
        public static string CHANGED_SERVER_CD {
            get {
                return ResourceManager.GetString("CHANGED_SERVER_CD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change Server Password - {0} ähnelt.
        /// </summary>
        public static string CHANGEPASS_DIALOG_TITLE {
            get {
                return ResourceManager.GetString("CHANGEPASS_DIALOG_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please type the root password for {0}: ähnelt.
        /// </summary>
        public static string CHANGEPASS_ROOT_PASS {
            get {
                return ResourceManager.GetString("CHANGEPASS_ROOT_PASS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool &apos;{0}&apos; cannot have WLB enabled ähnelt.
        /// </summary>
        public static string CHECK_WLB_ENABLED {
            get {
                return ResourceManager.GetString("CHECK_WLB_ENABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking VM migration status ähnelt.
        /// </summary>
        public static string CHECKING_CANEVACUATE_STATUS {
            get {
                return ResourceManager.GetString("CHECKING_CANEVACUATE_STATUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking for pending restart ähnelt.
        /// </summary>
        public static string CHECKING_FOR_PENDING_RESTART {
            get {
                return ResourceManager.GetString("CHECKING_FOR_PENDING_RESTART", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking HA and WLB status ähnelt.
        /// </summary>
        public static string CHECKING_HA_STATUS {
            get {
                return ResourceManager.GetString("CHECKING_HA_STATUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking host liveness status ähnelt.
        /// </summary>
        public static string CHECKING_HOST_LIVENESS_STATUS {
            get {
                return ResourceManager.GetString("CHECKING_HOST_LIVENESS_STATUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking role... ähnelt.
        /// </summary>
        public static string CHECKING_ROLE {
            get {
                return ResourceManager.GetString("CHECKING_ROLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking partition layout ähnelt.
        /// </summary>
        public static string CHECKING_SAFE_TO_UPGRADE {
            get {
                return ResourceManager.GetString("CHECKING_SAFE_TO_UPGRADE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking reboots required ähnelt.
        /// </summary>
        public static string CHECKING_SERVER_NEEDS_REBOOT {
            get {
                return ResourceManager.GetString("CHECKING_SERVER_NEEDS_REBOOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking server selection ähnelt.
        /// </summary>
        public static string CHECKING_SERVER_SELECTION {
            get {
                return ResourceManager.GetString("CHECKING_SERVER_SELECTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking server side status ähnelt.
        /// </summary>
        public static string CHECKING_SERVER_SIDE_STATUS {
            get {
                return ResourceManager.GetString("CHECKING_SERVER_SIDE_STATUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking storage connections status ähnelt.
        /// </summary>
        public static string CHECKING_STORAGE_CONNECTIONS_STATUS {
            get {
                return ResourceManager.GetString("CHECKING_STORAGE_CONNECTIONS_STATUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking StorageLink connections ähnelt.
        /// </summary>
        public static string CHECKING_STORAGELINK_CONNECTIONS {
            get {
                return ResourceManager.GetString("CHECKING_STORAGELINK_CONNECTIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking StorageLink status ähnelt.
        /// </summary>
        public static string CHECKING_STORAGELINK_STATUS {
            get {
                return ResourceManager.GetString("CHECKING_STORAGELINK_STATUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking upgrade hotfix status ähnelt.
        /// </summary>
        public static string CHECKING_UPGRADE_HOTFIX_STATUS {
            get {
                return ResourceManager.GetString("CHECKING_UPGRADE_HOTFIX_STATUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking [XenCenter] version ähnelt.
        /// </summary>
        public static string CHECKING_XENCENTER_VERSION {
            get {
                return ResourceManager.GetString("CHECKING_XENCENTER_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cross-server private network ähnelt.
        /// </summary>
        public static string CHIN {
            get {
                return ResourceManager.GetString("CHIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cross-server private networks ähnelt.
        /// </summary>
        public static string CHINS {
            get {
                return ResourceManager.GetString("CHINS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cross-server private networks require the vSwitch Controller to be configured and running. ähnelt.
        /// </summary>
        public static string CHINS_NEED_VSWITCHCONTROLLER {
            get {
                return ResourceManager.GetString("CHINS_NEED_VSWITCHCONTROLLER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose another &amp;destination ähnelt.
        /// </summary>
        public static string CHOOSE_ANOTHER_DESTINATION {
            get {
                return ResourceManager.GetString("CHOOSE_ANOTHER_DESTINATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose the type of new storage ähnelt.
        /// </summary>
        public static string CHOOSE_SR_TYPE_PAGE_TITLE {
            get {
                return ResourceManager.GetString("CHOOSE_SR_TYPE_PAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select a checkbox to add a VM to the vApp; clear its checkbox to remove it from the vApp. ähnelt.
        /// </summary>
        public static string CHOOSE_VMS_VAPP_RUBRIC {
            get {
                return ResourceManager.GetString("CHOOSE_VMS_VAPP_RUBRIC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select a checkbox to add a VM to the snapshot schedule; clear its checkbox to remove it from the schedule. ähnelt.
        /// </summary>
        public static string CHOOSE_VMS_VMSS_RUBRIC {
            get {
                return ResourceManager.GetString("CHOOSE_VMS_VMSS_RUBRIC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Clear Search ähnelt.
        /// </summary>
        public static string CLEAR_SEARCH {
            get {
                return ResourceManager.GetString("CLEAR_SEARCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cloning template &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string CLONING_TEMPLATE {
            get {
                return ResourceManager.GetString("CLONING_TEMPLATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Close ähnelt.
        /// </summary>
        public static string CLOSE {
            get {
                return ResourceManager.GetString("CLOSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die To close this wizard, click Finish ähnelt.
        /// </summary>
        public static string CLOSE_WIZARD_CLICK_FINISH {
            get {
                return ResourceManager.GetString("CLOSE_WIZARD_CLICK_FINISH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Collapse Children ähnelt.
        /// </summary>
        public static string COLLAPSE_CHILDREN {
            get {
                return ResourceManager.GetString("COLLAPSE_CHILDREN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die for use with Common Criteria versions of [XenServer] only ähnelt.
        /// </summary>
        public static string COMMON_CRITERIA_TEXT {
            get {
                return ResourceManager.GetString("COMMON_CRITERIA_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Completed ähnelt.
        /// </summary>
        public static string COMPLETED {
            get {
                return ResourceManager.GetString("COMPLETED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Completed, with some errors encountered. See the application log files for more information. ähnelt.
        /// </summary>
        public static string COMPLETED_WITH_ERRORS {
            get {
                return ResourceManager.GetString("COMPLETED_WITH_ERRORS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Compressing appliance files... ähnelt.
        /// </summary>
        public static string COMPRESSING_FILES {
            get {
                return ResourceManager.GetString("COMPRESSING_FILES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Configure HA... ähnelt.
        /// </summary>
        public static string CONFIGURE_HA_ELLIPSIS {
            get {
                return ResourceManager.GetString("CONFIGURE_HA_ELLIPSIS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configuring Workload Balancing  ähnelt.
        /// </summary>
        public static string CONFIGURING_WLB {
            get {
                return ResourceManager.GetString("CONFIGURING_WLB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configuring Workload Balancing on pool &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string CONFIGURING_WLB_ON {
            get {
                return ResourceManager.GetString("CONFIGURING_WLB_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changing the Control Domain memory will cause the server to be rebooted.
        ///
        ///Do you want to continue? ähnelt.
        /// </summary>
        public static string CONFIRM_CHANGE_CONTROL_DOMAIN_MEMORY {
            get {
                return ResourceManager.GetString("CONFIRM_CHANGE_CONTROL_DOMAIN_MEMORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changing the maximum memory of these VMs will cause them to be rebooted.
        ///
        ///Do you want to continue? ähnelt.
        /// </summary>
        public static string CONFIRM_CHANGE_MEMORY_MAX_PLURAL {
            get {
                return ResourceManager.GetString("CONFIRM_CHANGE_MEMORY_MAX_PLURAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changing the maximum memory of this VM will cause it to be rebooted.
        ///
        ///Do you want to continue? ähnelt.
        /// </summary>
        public static string CONFIRM_CHANGE_MEMORY_MAX_SINGULAR {
            get {
                return ResourceManager.GetString("CONFIRM_CHANGE_MEMORY_MAX_SINGULAR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changing the memory of these VMs while they are running will cause them to be forcibly rebooted. This operation can lose data.
        ///
        ///Do you want to continue? ähnelt.
        /// </summary>
        public static string CONFIRM_CHANGE_MEMORY_PLURAL {
            get {
                return ResourceManager.GetString("CONFIRM_CHANGE_MEMORY_PLURAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changing the memory of this VM while it is running will cause it to be forcibly rebooted. This operation can lose data.
        ///
        ///Do you want to continue? ähnelt.
        /// </summary>
        public static string CONFIRM_CHANGE_MEMORY_SINGULAR {
            get {
                return ResourceManager.GetString("CONFIRM_CHANGE_MEMORY_SINGULAR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changing the static maximum memory of these VMs will cause them to be rebooted.
        ///
        ///Do you want to continue? ähnelt.
        /// </summary>
        public static string CONFIRM_CHANGE_STATIC_MAX_PLURAL {
            get {
                return ResourceManager.GetString("CONFIRM_CHANGE_STATIC_MAX_PLURAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changing the static maximum memory of this VM will cause it to be rebooted.
        ///
        ///Do you want to continue? ähnelt.
        /// </summary>
        public static string CONFIRM_CHANGE_STATIC_MAX_SINGULAR {
            get {
                return ResourceManager.GetString("CONFIRM_CHANGE_STATIC_MAX_SINGULAR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to delete the selected {0}? ähnelt.
        /// </summary>
        public static string CONFIRM_DELETE {
            get {
                return ResourceManager.GetString("CONFIRM_DELETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You want to delete these {0} selected items. ähnelt.
        /// </summary>
        public static string CONFIRM_DELETE_ITEMS {
            get {
                return ResourceManager.GetString("CONFIRM_DELETE_ITEMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete Multiple Items ähnelt.
        /// </summary>
        public static string CONFIRM_DELETE_ITEMS_TITLE {
            get {
                return ResourceManager.GetString("CONFIRM_DELETE_ITEMS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you want to delete the selected policies?
        ///    
        ///{0} VMs are currently protected with these policies and will no longer be protected if you delete the policies. ähnelt.
        /// </summary>
        public static string CONFIRM_DELETE_POLICIES {
            get {
                return ResourceManager.GetString("CONFIRM_DELETE_POLICIES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you want to delete the selected policies? ähnelt.
        /// </summary>
        public static string CONFIRM_DELETE_POLICIES_0 {
            get {
                return ResourceManager.GetString("CONFIRM_DELETE_POLICIES_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you want to delete policy &apos;{0}&apos;?
        ///    
        ///{1} VMs are currently protected with this policy and will no longer be protected if you delete the policy. ähnelt.
        /// </summary>
        public static string CONFIRM_DELETE_POLICY {
            get {
                return ResourceManager.GetString("CONFIRM_DELETE_POLICY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you want to delete policy &apos;{0}&apos;? ähnelt.
        /// </summary>
        public static string CONFIRM_DELETE_POLICY_0 {
            get {
                return ResourceManager.GetString("CONFIRM_DELETE_POLICY_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to delete &apos;{0}&apos;? ähnelt.
        /// </summary>
        public static string CONFIRM_DELETE_PVS_SITE {
            get {
                return ResourceManager.GetString("CONFIRM_DELETE_PVS_SITE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to delete &apos;{0}&apos;? This configuration is in use by PVS-Accelerator. ähnelt.
        /// </summary>
        public static string CONFIRM_DELETE_PVS_SITE_IN_USE {
            get {
                return ResourceManager.GetString("CONFIRM_DELETE_PVS_SITE_IN_USE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to delete the tag &apos;{0}&apos; from all managed resources? ähnelt.
        /// </summary>
        public static string CONFIRM_DELETE_TAG {
            get {
                return ResourceManager.GetString("CONFIRM_DELETE_TAG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete Tag ähnelt.
        /// </summary>
        public static string CONFIRM_DELETE_TAG_TITLE {
            get {
                return ResourceManager.GetString("CONFIRM_DELETE_TAG_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to delete the selected tags from all managed resources? ähnelt.
        /// </summary>
        public static string CONFIRM_DELETE_TAGS {
            get {
                return ResourceManager.GetString("CONFIRM_DELETE_TAGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete Tags ähnelt.
        /// </summary>
        public static string CONFIRM_DELETE_TAGS_TITLE {
            get {
                return ResourceManager.GetString("CONFIRM_DELETE_TAGS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete {0} ähnelt.
        /// </summary>
        public static string CONFIRM_DELETE_TITLE {
            get {
                return ResourceManager.GetString("CONFIRM_DELETE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to delete VM &apos;{0}&apos; from &apos;{1}&apos;? ähnelt.
        /// </summary>
        public static string CONFIRM_DELETE_VM {
            get {
                return ResourceManager.GetString("CONFIRM_DELETE_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you want to delete vApp &apos;{0}&apos;?
        ///    
        ///{1} VMs are currently included in this vApp. ähnelt.
        /// </summary>
        public static string CONFIRM_DELETE_VM_APPLIANCE {
            get {
                return ResourceManager.GetString("CONFIRM_DELETE_VM_APPLIANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you want to delete vApp &apos;{0}&apos;? ähnelt.
        /// </summary>
        public static string CONFIRM_DELETE_VM_APPLIANCE_0 {
            get {
                return ResourceManager.GetString("CONFIRM_DELETE_VM_APPLIANCE_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you want to delete vApp &apos;{0}&apos;?
        ///    
        ///{1} VM is currently included in this vApp. ähnelt.
        /// </summary>
        public static string CONFIRM_DELETE_VM_APPLIANCE_1 {
            get {
                return ResourceManager.GetString("CONFIRM_DELETE_VM_APPLIANCE_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to delete vApp &apos;{0}&apos;?
        ///
        ///This will also delete its VMs. ähnelt.
        /// </summary>
        public static string CONFIRM_DELETE_VM_APPLIANCE_AND_VMS {
            get {
                return ResourceManager.GetString("CONFIRM_DELETE_VM_APPLIANCE_AND_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you want to delete the selected vApps?
        ///    
        ///{0} VMs are currently included in these vApps. ähnelt.
        /// </summary>
        public static string CONFIRM_DELETE_VM_APPLIANCES {
            get {
                return ResourceManager.GetString("CONFIRM_DELETE_VM_APPLIANCES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you want to delete the selected vApps? ähnelt.
        /// </summary>
        public static string CONFIRM_DELETE_VM_APPLIANCES_0 {
            get {
                return ResourceManager.GetString("CONFIRM_DELETE_VM_APPLIANCES_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you want to delete the selected vApps?
        ///    
        ///{0} VM is currently included in one of these vApps. ähnelt.
        /// </summary>
        public static string CONFIRM_DELETE_VM_APPLIANCES_1 {
            get {
                return ResourceManager.GetString("CONFIRM_DELETE_VM_APPLIANCES_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to delete the following VMs from &apos;{1}&apos;?
        ///
        ///{0} ähnelt.
        /// </summary>
        public static string CONFIRM_DELETE_VMS {
            get {
                return ResourceManager.GetString("CONFIRM_DELETE_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to destroy &apos;{0}&apos;?
        ///
        ///You should only need to destroy a server if it has physically failed.
        ///Destroying this server will permanently remove it from the pool along with its local SRs, DVD drives and removable storage. The server will need to be reinstalled before it can be used again.
        ///
        ///This action is final and unrecoverable. ähnelt.
        /// </summary>
        public static string CONFIRM_DESTROY_HOST {
            get {
                return ResourceManager.GetString("CONFIRM_DESTROY_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Destroy Server ähnelt.
        /// </summary>
        public static string CONFIRM_DESTROY_HOST_TITLE {
            get {
                return ResourceManager.GetString("CONFIRM_DESTROY_HOST_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Yes, Destroy ähnelt.
        /// </summary>
        public static string CONFIRM_DESTROY_HOST_YES_BUTTON_LABEL {
            get {
                return ResourceManager.GetString("CONFIRM_DESTROY_HOST_YES_BUTTON_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This will disable Changed Block Tracking on the disks of the selected VM. If you are using any third-party solutions to back up the VM, they might be affected. Note that Changed Block Tracking cannot be enabled again from [XenCenter]. Do you want to continue? ähnelt.
        /// </summary>
        public static string CONFIRM_DISABLE_CBT_VM {
            get {
                return ResourceManager.GetString("CONFIRM_DISABLE_CBT_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disable Changed Block Tracking on VM &quot;{0}&quot; ähnelt.
        /// </summary>
        public static string CONFIRM_DISABLE_CBT_VM_TITLE {
            get {
                return ResourceManager.GetString("CONFIRM_DISABLE_CBT_VM_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This will disable Changed Block Tracking on the disks of the selected VMs. If you are using any third-party solutions to back up the VMs, they might be affected. Note that Changed Block Tracking cannot be enabled again from [XenCenter]. Do you want to continue? ähnelt.
        /// </summary>
        public static string CONFIRM_DISABLE_CBT_VMS {
            get {
                return ResourceManager.GetString("CONFIRM_DISABLE_CBT_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disable Changed Block Tracking on selected VMs ähnelt.
        /// </summary>
        public static string CONFIRM_DISABLE_CBT_VMs_TITLE {
            get {
                return ResourceManager.GetString("CONFIRM_DISABLE_CBT_VMs_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to disable Health Check on the selected pool? ähnelt.
        /// </summary>
        public static string CONFIRM_DISABLE_HEALTH_CHECK_POOL {
            get {
                return ResourceManager.GetString("CONFIRM_DISABLE_HEALTH_CHECK_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to disable Health Check on the selected server? ähnelt.
        /// </summary>
        public static string CONFIRM_DISABLE_HEALTH_CHECK_SERVER {
            get {
                return ResourceManager.GetString("CONFIRM_DISABLE_HEALTH_CHECK_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The export file may be larger than your filesystem limit.
        ///
        ///Estimated file size: {0}
        ///Filesystem limit: {1}
        ///
        ///Are you sure you want to export VM {2}? ähnelt.
        /// </summary>
        public static string CONFIRM_EXPORT_FAT {
            get {
                return ResourceManager.GetString("CONFIRM_EXPORT_FAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There might not be enough free disk space for the export operation to complete.
        ///
        ///Estimated space required: {0}
        ///Free space: {1}
        ///
        ///Are you sure you want to export VM {2}? ähnelt.
        /// </summary>
        public static string CONFIRM_EXPORT_NOT_ENOUGH_MEMORY {
            get {
                return ResourceManager.GetString("CONFIRM_EXPORT_NOT_ENOUGH_MEMORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to forcibly reboot the selected VM? This operation will cancel all running tasks for the VM and can result in data loss. ähnelt.
        /// </summary>
        public static string CONFIRM_FORCEREBOOT_VM {
            get {
                return ResourceManager.GetString("CONFIRM_FORCEREBOOT_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to forcibly reboot the selected VM? This operation can result in data loss. ähnelt.
        /// </summary>
        public static string CONFIRM_FORCEREBOOT_VM_NO_CANCEL_TASKS {
            get {
                return ResourceManager.GetString("CONFIRM_FORCEREBOOT_VM_NO_CANCEL_TASKS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Force VM Reboot ähnelt.
        /// </summary>
        public static string CONFIRM_FORCEREBOOT_VM_TITLE {
            get {
                return ResourceManager.GetString("CONFIRM_FORCEREBOOT_VM_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to forcibly reboot the selected VMs? This operation will cancel all running tasks for the VMs and can result in data loss. ähnelt.
        /// </summary>
        public static string CONFIRM_FORCEREBOOT_VMS {
            get {
                return ResourceManager.GetString("CONFIRM_FORCEREBOOT_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to forcibly reboot the selected VMs? This operation can result in data loss. ähnelt.
        /// </summary>
        public static string CONFIRM_FORCEREBOOT_VMS_NO_CANCEL_TASKS {
            get {
                return ResourceManager.GetString("CONFIRM_FORCEREBOOT_VMS_NO_CANCEL_TASKS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Force Reboot Multiple VMs ähnelt.
        /// </summary>
        public static string CONFIRM_FORCEREBOOT_VMS_TITLE {
            get {
                return ResourceManager.GetString("CONFIRM_FORCEREBOOT_VMS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to forcibly shut down the selected VM? This operation will cancel all running tasks for the VM and can result in data loss. ähnelt.
        /// </summary>
        public static string CONFIRM_FORCESHUTDOWN_VM {
            get {
                return ResourceManager.GetString("CONFIRM_FORCESHUTDOWN_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to forcibly shut down the selected VM? This operation can result in data loss. ähnelt.
        /// </summary>
        public static string CONFIRM_FORCESHUTDOWN_VM_NO_CANCEL_TASKS {
            get {
                return ResourceManager.GetString("CONFIRM_FORCESHUTDOWN_VM_NO_CANCEL_TASKS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Force Shut Down VM ähnelt.
        /// </summary>
        public static string CONFIRM_FORCESHUTDOWN_VM_TITLE {
            get {
                return ResourceManager.GetString("CONFIRM_FORCESHUTDOWN_VM_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to forcibly shut down the selected VMs? This operation will cancel all running tasks for each of the selected VMs and can result in data loss. ähnelt.
        /// </summary>
        public static string CONFIRM_FORCESHUTDOWN_VMS {
            get {
                return ResourceManager.GetString("CONFIRM_FORCESHUTDOWN_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to forcibly shut down the selected VMs? This operation can result in data loss. ähnelt.
        /// </summary>
        public static string CONFIRM_FORCESHUTDOWN_VMS_NO_CANCEL_TASKS {
            get {
                return ResourceManager.GetString("CONFIRM_FORCESHUTDOWN_VMS_NO_CANCEL_TASKS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Force Shut Down Multiple VMs ähnelt.
        /// </summary>
        public static string CONFIRM_FORCESHUTDOWN_VMS_TITLE {
            get {
                return ResourceManager.GetString("CONFIRM_FORCESHUTDOWN_VMS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rebooting a server will also shut down all the VMs running on it. &apos;{0}&apos; is running a storage virtual appliance and rebooting it might impact the availability of your storage. Are you sure you want to continue? ähnelt.
        /// </summary>
        public static string CONFIRM_REBOOT_HCI_WARN_SERVER {
            get {
                return ResourceManager.GetString("CONFIRM_REBOOT_HCI_WARN_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rebooting a server will also shut down all the VMs running on it. The following servers are running a storage virtual appliance and rebooting them might impact the availablity of your storage:
        ///
        ///{0}
        ///
        ///Are you sure you want to continue? ähnelt.
        /// </summary>
        public static string CONFIRM_REBOOT_HCI_WARN_SERVERS {
            get {
                return ResourceManager.GetString("CONFIRM_REBOOT_HCI_WARN_SERVERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to reboot &apos;{0}&apos;?
        ///
        ///This will also shut down all the VMs currently running on it. ähnelt.
        /// </summary>
        public static string CONFIRM_REBOOT_SERVER {
            get {
                return ResourceManager.GetString("CONFIRM_REBOOT_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to reboot &apos;{0}&apos;? ähnelt.
        /// </summary>
        public static string CONFIRM_REBOOT_SERVER_NO_VMS {
            get {
                return ResourceManager.GetString("CONFIRM_REBOOT_SERVER_NO_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reboot Server ähnelt.
        /// </summary>
        public static string CONFIRM_REBOOT_SERVER_TITLE {
            get {
                return ResourceManager.GetString("CONFIRM_REBOOT_SERVER_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Yes, Reboot ähnelt.
        /// </summary>
        public static string CONFIRM_REBOOT_SERVER_YES_BUTTON_LABEL {
            get {
                return ResourceManager.GetString("CONFIRM_REBOOT_SERVER_YES_BUTTON_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to reboot the selected servers?
        ///
        ///This will also shut down all the VMs currently running on them. ähnelt.
        /// </summary>
        public static string CONFIRM_REBOOT_SERVERS {
            get {
                return ResourceManager.GetString("CONFIRM_REBOOT_SERVERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to reboot the selected servers? ähnelt.
        /// </summary>
        public static string CONFIRM_REBOOT_SERVERS_NO_VMS {
            get {
                return ResourceManager.GetString("CONFIRM_REBOOT_SERVERS_NO_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reboot Multiple Servers ähnelt.
        /// </summary>
        public static string CONFIRM_REBOOT_SERVERS_TITLE {
            get {
                return ResourceManager.GetString("CONFIRM_REBOOT_SERVERS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to reboot the selected VM? ähnelt.
        /// </summary>
        public static string CONFIRM_REBOOT_VM {
            get {
                return ResourceManager.GetString("CONFIRM_REBOOT_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reboot VM ähnelt.
        /// </summary>
        public static string CONFIRM_REBOOT_VM_TITLE {
            get {
                return ResourceManager.GetString("CONFIRM_REBOOT_VM_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to reboot the selected VMs? ähnelt.
        /// </summary>
        public static string CONFIRM_REBOOT_VMS {
            get {
                return ResourceManager.GetString("CONFIRM_REBOOT_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reboot Multiple VMs ähnelt.
        /// </summary>
        public static string CONFIRM_REBOOT_VMS_TITLE {
            get {
                return ResourceManager.GetString("CONFIRM_REBOOT_VMS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to restart the toolstack on the selected servers? Note that [XenCenter] will temporarily lose connection to them. ähnelt.
        /// </summary>
        public static string CONFIRM_RESTART_TOOLSTACK_MANY_SERVERS {
            get {
                return ResourceManager.GetString("CONFIRM_RESTART_TOOLSTACK_MANY_SERVERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to restart the toolstack on &apos;{0}&apos;? Note that [XenCenter] will temporarily lose connection to the server. ähnelt.
        /// </summary>
        public static string CONFIRM_RESTART_TOOLSTACK_ONE_SERVER {
            get {
                return ResourceManager.GetString("CONFIRM_RESTART_TOOLSTACK_ONE_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restart Toolstack ähnelt.
        /// </summary>
        public static string CONFIRM_RESTART_TOOLSTACK_TITLE {
            get {
                return ResourceManager.GetString("CONFIRM_RESTART_TOOLSTACK_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to shut down the selected vApp? ähnelt.
        /// </summary>
        public static string CONFIRM_SHUT_DOWN_APPLIANCE {
            get {
                return ResourceManager.GetString("CONFIRM_SHUT_DOWN_APPLIANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to shut down the following vApps?
        ///
        ///{0} ähnelt.
        /// </summary>
        public static string CONFIRM_SHUT_DOWN_APPLIANCES {
            get {
                return ResourceManager.GetString("CONFIRM_SHUT_DOWN_APPLIANCES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shutting down a server will also shut down all the VMs running on it. &apos;{0}&apos; is running a storage virtual appliance and shutting it down might impact the availability of your storage. Are you sure you want to continue? ähnelt.
        /// </summary>
        public static string CONFIRM_SHUTDOWN_HCI_WARN_SERVER {
            get {
                return ResourceManager.GetString("CONFIRM_SHUTDOWN_HCI_WARN_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shutting down a server will also shut down all the VMs running on it. The following servers are running a storage virtual appliance and shutting them down might impact the availablity of your storage:
        ///
        ///{0}
        ///
        ///Are you sure you want to continue? ähnelt.
        /// </summary>
        public static string CONFIRM_SHUTDOWN_HCI_WARN_SERVERS {
            get {
                return ResourceManager.GetString("CONFIRM_SHUTDOWN_HCI_WARN_SERVERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to shut down &apos;{0}&apos;?
        ///
        ///This will also shut down all the VMs currently running on it. ähnelt.
        /// </summary>
        public static string CONFIRM_SHUTDOWN_SERVER {
            get {
                return ResourceManager.GetString("CONFIRM_SHUTDOWN_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to shut down &apos;{0}&apos;? ähnelt.
        /// </summary>
        public static string CONFIRM_SHUTDOWN_SERVER_NO_VMS {
            get {
                return ResourceManager.GetString("CONFIRM_SHUTDOWN_SERVER_NO_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shut Down Server ähnelt.
        /// </summary>
        public static string CONFIRM_SHUTDOWN_SERVER_TITLE {
            get {
                return ResourceManager.GetString("CONFIRM_SHUTDOWN_SERVER_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Yes, Shut Down ähnelt.
        /// </summary>
        public static string CONFIRM_SHUTDOWN_SERVER_YES_BUTTON_LABEL {
            get {
                return ResourceManager.GetString("CONFIRM_SHUTDOWN_SERVER_YES_BUTTON_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to shut down the selected servers?
        ///
        ///This will also shut down all the VMs currently running on them. ähnelt.
        /// </summary>
        public static string CONFIRM_SHUTDOWN_SERVERS {
            get {
                return ResourceManager.GetString("CONFIRM_SHUTDOWN_SERVERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to shut down the selected servers? ähnelt.
        /// </summary>
        public static string CONFIRM_SHUTDOWN_SERVERS_NO_VMS {
            get {
                return ResourceManager.GetString("CONFIRM_SHUTDOWN_SERVERS_NO_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shut Down Multiple Servers ähnelt.
        /// </summary>
        public static string CONFIRM_SHUTDOWN_SERVERS_TITLE {
            get {
                return ResourceManager.GetString("CONFIRM_SHUTDOWN_SERVERS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to shut down the selected VM? ähnelt.
        /// </summary>
        public static string CONFIRM_SHUTDOWN_VM {
            get {
                return ResourceManager.GetString("CONFIRM_SHUTDOWN_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shut Down VM ähnelt.
        /// </summary>
        public static string CONFIRM_SHUTDOWN_VM_TITLE {
            get {
                return ResourceManager.GetString("CONFIRM_SHUTDOWN_VM_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to shut down the selected VMs? ähnelt.
        /// </summary>
        public static string CONFIRM_SHUTDOWN_VMS {
            get {
                return ResourceManager.GetString("CONFIRM_SHUTDOWN_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shut Down Multiple VMs ähnelt.
        /// </summary>
        public static string CONFIRM_SHUTDOWN_VMS_TITLE {
            get {
                return ResourceManager.GetString("CONFIRM_SHUTDOWN_VMS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to suspend the selected VM? ähnelt.
        /// </summary>
        public static string CONFIRM_SUSPEND_VM {
            get {
                return ResourceManager.GetString("CONFIRM_SUSPEND_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Suspend VM ähnelt.
        /// </summary>
        public static string CONFIRM_SUSPEND_VM_TITLE {
            get {
                return ResourceManager.GetString("CONFIRM_SUSPEND_VM_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to suspend the selected VMs? ähnelt.
        /// </summary>
        public static string CONFIRM_SUSPEND_VMS {
            get {
                return ResourceManager.GetString("CONFIRM_SUSPEND_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Suspend Multiple VMs ähnelt.
        /// </summary>
        public static string CONFIRM_SUSPEND_VMS_TITLE {
            get {
                return ResourceManager.GetString("CONFIRM_SUSPEND_VMS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The process of reclaiming space may place significant load on the storage controller, temporarily affecting the storage&apos;s performance.
        ///Would you like to carry out the operation at this time? ähnelt.
        /// </summary>
        public static string CONFIRM_TRIM_SR {
            get {
                return ResourceManager.GetString("CONFIRM_TRIM_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reclaim freed space ähnelt.
        /// </summary>
        public static string CONFIRM_TRIM_SR_TITLE {
            get {
                return ResourceManager.GetString("CONFIRM_TRIM_SR_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Confirmations ähnelt.
        /// </summary>
        public static string CONFIRMATIONS {
            get {
                return ResourceManager.GetString("CONFIRMATIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Confirm dismissal of notifications ähnelt.
        /// </summary>
        public static string CONFIRMATIONS_DETAIL {
            get {
                return ResourceManager.GetString("CONFIRMATIONS_DETAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not connect to {0}. ähnelt.
        /// </summary>
        public static string CONNCET_CONNECTION_FAILURE {
            get {
                return ResourceManager.GetString("CONNCET_CONNECTION_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Connect ähnelt.
        /// </summary>
        public static string CONNECT {
            get {
                return ResourceManager.GetString("CONNECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not find [XenServer] running on {0}. ähnelt.
        /// </summary>
        public static string CONNECT_NO_XAPI_FAILURE {
            get {
                return ResourceManager.GetString("CONNECT_NO_XAPI_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not find {0}. ähnelt.
        /// </summary>
        public static string CONNECT_RESOLUTION_FAILURE {
            get {
                return ResourceManager.GetString("CONNECT_RESOLUTION_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connect to Server ähnelt.
        /// </summary>
        public static string CONNECT_TO_SERVER {
            get {
                return ResourceManager.GetString("CONNECT_TO_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter your user name and password to connect to this server. ähnelt.
        /// </summary>
        public static string CONNECT_TO_SERVER_BLURB {
            get {
                return ResourceManager.GetString("CONNECT_TO_SERVER_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connected ähnelt.
        /// </summary>
        public static string CONNECTED {
            get {
                return ResourceManager.GetString("CONNECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connecting... ähnelt.
        /// </summary>
        public static string CONNECTING {
            get {
                return ResourceManager.GetString("CONNECTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connecting to {0} in progress. ähnelt.
        /// </summary>
        public static string CONNECTING_NOTICE_TEXT {
            get {
                return ResourceManager.GetString("CONNECTING_NOTICE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connecting to {0} ähnelt.
        /// </summary>
        public static string CONNECTING_NOTICE_TITLE {
            get {
                return ResourceManager.GetString("CONNECTING_NOTICE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connection ähnelt.
        /// </summary>
        public static string CONNECTION {
            get {
                return ResourceManager.GetString("CONNECTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The server closed the connection immediately. ähnelt.
        /// </summary>
        public static string CONNECTION_CLOSED_BY_SERVER {
            get {
                return ResourceManager.GetString("CONNECTION_CLOSED_BY_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connection to {0} closed. ähnelt.
        /// </summary>
        public static string CONNECTION_CLOSED_NOTICE_TEXT {
            get {
                return ResourceManager.GetString("CONNECTION_CLOSED_NOTICE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disconnected from {0} ähnelt.
        /// </summary>
        public static string CONNECTION_CLOSED_NOTICE_TITLE {
            get {
                return ResourceManager.GetString("CONNECTION_CLOSED_NOTICE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Proxy and timeout options ähnelt.
        /// </summary>
        public static string CONNECTION_DESC {
            get {
                return ResourceManager.GetString("CONNECTION_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connection Failed: A connection to {0} already exists ähnelt.
        /// </summary>
        public static string CONNECTION_EXISTS {
            get {
                return ResourceManager.GetString("CONNECTION_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connection Failed: You tried to connect to an already connected server ähnelt.
        /// </summary>
        public static string CONNECTION_EXISTS_NULL {
            get {
                return ResourceManager.GetString("CONNECTION_EXISTS_NULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed to connect to {0} ähnelt.
        /// </summary>
        public static string CONNECTION_FAILED_TITLE {
            get {
                return ResourceManager.GetString("CONNECTION_FAILED_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Looking for master for {0} on {1}... ähnelt.
        /// </summary>
        public static string CONNECTION_FINDING_MASTER_DESCRIPTION {
            get {
                return ResourceManager.GetString("CONNECTION_FINDING_MASTER_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Looking for master for {0} ähnelt.
        /// </summary>
        public static string CONNECTION_FINDING_MASTER_TITLE {
            get {
                return ResourceManager.GetString("CONNECTION_FINDING_MASTER_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connection General Properties ähnelt.
        /// </summary>
        public static string CONNECTION_GENERAL_TAB_TITLE {
            get {
                return ResourceManager.GetString("CONNECTION_GENERAL_TAB_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not contact server ähnelt.
        /// </summary>
        public static string CONNECTION_IO_EXCEPTION {
            get {
                return ResourceManager.GetString("CONNECTION_IO_EXCEPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Lost connection to {0}. Will search for a new pool master in {1} seconds. ähnelt.
        /// </summary>
        public static string CONNECTION_LOST_NOTICE_MASTER_IN_X_SECONDS {
            get {
                return ResourceManager.GetString("CONNECTION_LOST_NOTICE_MASTER_IN_X_SECONDS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Lost connection to {0} ähnelt.
        /// </summary>
        public static string CONNECTION_LOST_NOTICE_TITLE {
            get {
                return ResourceManager.GetString("CONNECTION_LOST_NOTICE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Lost connection to {0}. Will reconnect in {1} seconds. ähnelt.
        /// </summary>
        public static string CONNECTION_LOST_RECONNECT_IN_X_SECONDS {
            get {
                return ResourceManager.GetString("CONNECTION_LOST_RECONNECT_IN_X_SECONDS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connection to {0} successful. ähnelt.
        /// </summary>
        public static string CONNECTION_OK_NOTICE_TEXT {
            get {
                return ResourceManager.GetString("CONNECTION_OK_NOTICE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connected to {0} ähnelt.
        /// </summary>
        public static string CONNECTION_OK_NOTICE_TITLE {
            get {
                return ResourceManager.GetString("CONNECTION_OK_NOTICE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connection to {0}: redirecting to the pool master at {1} ähnelt.
        /// </summary>
        public static string CONNECTION_REDIRECTING {
            get {
                return ResourceManager.GetString("CONNECTION_REDIRECTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The connection was refused. ähnelt.
        /// </summary>
        public static string CONNECTION_REFUSED {
            get {
                return ResourceManager.GetString("CONNECTION_REFUSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connection Refused ähnelt.
        /// </summary>
        public static string CONNECTION_REFUSED_TITLE {
            get {
                return ResourceManager.GetString("CONNECTION_REFUSED_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connection to Server {0} restricted because a connection already exists to another XE Express Server ({1}) ähnelt.
        /// </summary>
        public static string CONNECTION_RESTRICTED_MESSAGE {
            get {
                return ResourceManager.GetString("CONNECTION_RESTRICTED_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connection to server {0} restricted - a connection to a [Citrix] [XenServer product] Express Edition server ({1}) already exists.
        ///
        ///You can only connect to a single [Citrix] [XenServer product] Express Edition server at a time. To find out how to upgrade your license, follow the link below. ähnelt.
        /// </summary>
        public static string CONNECTION_RESTRICTED_MESSAGE_LONG {
            get {
                return ResourceManager.GetString("CONNECTION_RESTRICTED_MESSAGE_LONG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot connect to {0} because of license restriction ähnelt.
        /// </summary>
        public static string CONNECTION_RESTRICTED_NOTICE_TITLE {
            get {
                return ResourceManager.GetString("CONNECTION_RESTRICTED_NOTICE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connection to {0}: trying to find pool at {1} ähnelt.
        /// </summary>
        public static string CONNECTION_RETRYING_SLAVE {
            get {
                return ResourceManager.GetString("CONNECTION_RETRYING_SLAVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The connection to the server was lost ähnelt.
        /// </summary>
        public static string CONNECTION_WAS_LOST {
            get {
                return ResourceManager.GetString("CONNECTION_WAS_LOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connection to {0}: will try to connect to another pool member in {1} seconds ähnelt.
        /// </summary>
        public static string CONNECTION_WILL_RETRY_SLAVE {
            get {
                return ResourceManager.GetString("CONNECTION_WILL_RETRY_SLAVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Console ähnelt.
        /// </summary>
        public static string CONSOLE {
            get {
                return ResourceManager.GetString("CONSOLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Keyboard shortcuts and scaling options ähnelt.
        /// </summary>
        public static string CONSOLE_DESC {
            get {
                return ResourceManager.GetString("CONSOLE_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} server console ähnelt.
        /// </summary>
        public static string CONSOLE_HOST {
            get {
                return ResourceManager.GetString("CONSOLE_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This server is unavailable. ähnelt.
        /// </summary>
        public static string CONSOLE_HOST_DEAD {
            get {
                return ResourceManager.GetString("CONSOLE_HOST_DEAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} Nutanix CVM console ähnelt.
        /// </summary>
        public static string CONSOLE_HOST_NUTANIX {
            get {
                return ResourceManager.GetString("CONSOLE_HOST_NUTANIX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This VM is currently shut down. ähnelt.
        /// </summary>
        public static string CONSOLE_POWER_STATE_HALTED {
            get {
                return ResourceManager.GetString("CONSOLE_POWER_STATE_HALTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This VM is currently shut down.  Click here to start it. ähnelt.
        /// </summary>
        public static string CONSOLE_POWER_STATE_HALTED_START {
            get {
                return ResourceManager.GetString("CONSOLE_POWER_STATE_HALTED_START", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This VM is currently paused. ähnelt.
        /// </summary>
        public static string CONSOLE_POWER_STATE_PAUSED {
            get {
                return ResourceManager.GetString("CONSOLE_POWER_STATE_PAUSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This VM is currently paused.  Click here to unpause it. ähnelt.
        /// </summary>
        public static string CONSOLE_POWER_STATE_PAUSED_UNPAUSE {
            get {
                return ResourceManager.GetString("CONSOLE_POWER_STATE_PAUSED_UNPAUSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This VM is currently suspended. ähnelt.
        /// </summary>
        public static string CONSOLE_POWER_STATE_SUSPENDED {
            get {
                return ResourceManager.GetString("CONSOLE_POWER_STATE_SUSPENDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This VM is currently suspended.  Click here to resume it. ähnelt.
        /// </summary>
        public static string CONSOLE_POWER_STATE_SUSPENDED_RESUME {
            get {
                return ResourceManager.GetString("CONSOLE_POWER_STATE_SUSPENDED_RESUME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die contained in ähnelt.
        /// </summary>
        public static string CONTAINED_IN {
            get {
                return ResourceManager.GetString("CONTAINED_IN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Container ähnelt.
        /// </summary>
        public static string CONTAINER {
            get {
                return ResourceManager.GetString("CONTAINER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Command ähnelt.
        /// </summary>
        public static string CONTAINER_COMMAND {
            get {
                return ResourceManager.GetString("CONTAINER_COMMAND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Created ähnelt.
        /// </summary>
        public static string CONTAINER_CREATED {
            get {
                return ResourceManager.GetString("CONTAINER_CREATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Container General Properties ähnelt.
        /// </summary>
        public static string CONTAINER_GENERAL_TAB_TITLE {
            get {
                return ResourceManager.GetString("CONTAINER_GENERAL_TAB_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Image ähnelt.
        /// </summary>
        public static string CONTAINER_IMAGE {
            get {
                return ResourceManager.GetString("CONTAINER_IMAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} on &apos;{1}&apos; {2} ähnelt.
        /// </summary>
        public static string CONTAINER_ON_VM_TITLE {
            get {
                return ResourceManager.GetString("CONTAINER_ON_VM_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ports ähnelt.
        /// </summary>
        public static string CONTAINER_PORTS {
            get {
                return ResourceManager.GetString("CONTAINER_PORTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Address: {0} ähnelt.
        /// </summary>
        public static string CONTAINER_PORTS_ADDRESS {
            get {
                return ResourceManager.GetString("CONTAINER_PORTS_ADDRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Private port: {0} ähnelt.
        /// </summary>
        public static string CONTAINER_PORTS_PRIVATE_PORT {
            get {
                return ResourceManager.GetString("CONTAINER_PORTS_PRIVATE_PORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Protocol: {0} ähnelt.
        /// </summary>
        public static string CONTAINER_PORTS_PROTOCOL {
            get {
                return ResourceManager.GetString("CONTAINER_PORTS_PROTOCOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Public port: {0} ähnelt.
        /// </summary>
        public static string CONTAINER_PORTS_PUBLIC_PORT {
            get {
                return ResourceManager.GetString("CONTAINER_PORTS_PUBLIC_PORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die contains ähnelt.
        /// </summary>
        public static string CONTAINS {
            get {
                return ResourceManager.GetString("CONTAINS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Continue with export ähnelt.
        /// </summary>
        public static string CONTINUE_WITH_EXPORT {
            get {
                return ResourceManager.GetString("CONTINUE_WITH_EXPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Control domain on host {0} ähnelt.
        /// </summary>
        public static string CONTROL_DOM_ON_HOST {
            get {
                return ResourceManager.GetString("CONTROL_DOM_ON_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Control Domain Memory Settings - {0} ähnelt.
        /// </summary>
        public static string CONTROL_DOMAIN_MEMORY_DIALOG_TITLE {
            get {
                return ResourceManager.GetString("CONTROL_DOMAIN_MEMORY_DIALOG_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Control Domain Memory: ähnelt.
        /// </summary>
        public static string CONTROL_DOMAIN_MEMORY_LABEL {
            get {
                return ResourceManager.GetString("CONTROL_DOMAIN_MEMORY_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Convert ähnelt.
        /// </summary>
        public static string CONVERT {
            get {
                return ResourceManager.GetString("CONVERT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to convert VM &apos;{0}&apos; to a template? This cannot be undone. ähnelt.
        /// </summary>
        public static string CONVERT_TEMPLATE_DIALOG_TEXT {
            get {
                return ResourceManager.GetString("CONVERT_TEMPLATE_DIALOG_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Convert VM to Template ähnelt.
        /// </summary>
        public static string CONVERT_TO_TEMPLATE {
            get {
                return ResourceManager.GetString("CONVERT_TO_TEMPLATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy ähnelt.
        /// </summary>
        public static string COPY {
            get {
                return ResourceManager.GetString("COPY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Copy ähnelt.
        /// </summary>
        public static string COPY_MENU_ITEM {
            get {
                return ResourceManager.GetString("COPY_MENU_ITEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy Template ähnelt.
        /// </summary>
        public static string COPY_TEMPLATE {
            get {
                return ResourceManager.GetString("COPY_TEMPLATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Clone the existing template, using a storage-level fast disk clone operation ähnelt.
        /// </summary>
        public static string COPY_TEMPLATE_FAST_CLONE_DESCRIPTION {
            get {
                return ResourceManager.GetString("COPY_TEMPLATE_FAST_CLONE_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Provide a name and a description (optional) for the new template and then select a copy mode. ähnelt.
        /// </summary>
        public static string COPY_TEMPLATE_INTRA_POOL_RUBRIC {
            get {
                return ResourceManager.GetString("COPY_TEMPLATE_INTRA_POOL_RUBRIC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete original template after copy ähnelt.
        /// </summary>
        public static string COPY_TEMPLATE_REMOVE {
            get {
                return ResourceManager.GetString("COPY_TEMPLATE_REMOVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Create a full copy of the existing template on this storage repository: ähnelt.
        /// </summary>
        public static string COPY_TEMPLATE_SELECT_SR {
            get {
                return ResourceManager.GetString("COPY_TEMPLATE_SELECT_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy Template ähnelt.
        /// </summary>
        public static string COPY_TEMPLATE_WIZARD_TITLE {
            get {
                return ResourceManager.GetString("COPY_TEMPLATE_WIZARD_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy Template to {0} ähnelt.
        /// </summary>
        public static string COPY_TEMPLATE_WIZARD_TITLE_AND_LOCATION {
            get {
                return ResourceManager.GetString("COPY_TEMPLATE_WIZARD_TITLE_AND_LOCATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copying {0} canceled. ähnelt.
        /// </summary>
        public static string COPY_TO_SHARED_CANCELLED {
            get {
                return ResourceManager.GetString("COPY_TO_SHARED_CANCELLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy Virtual Machine ähnelt.
        /// </summary>
        public static string COPY_VM {
            get {
                return ResourceManager.GetString("COPY_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Clone ähnelt.
        /// </summary>
        public static string COPY_VM_CLONE_TEMPLATE_SLOW {
            get {
                return ResourceManager.GetString("COPY_VM_CLONE_TEMPLATE_SLOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Clone the existing VM, using a storage-level fast disk clone operation ähnelt.
        /// </summary>
        public static string COPY_VM_FAST_CLONE_DESCRIPTION {
            get {
                return ResourceManager.GetString("COPY_VM_FAST_CLONE_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Provide a name and a description (optional) for the new VM and then select a copy mode. ähnelt.
        /// </summary>
        public static string COPY_VM_INTRA_POOL_RUBRIC {
            get {
                return ResourceManager.GetString("COPY_VM_INTRA_POOL_RUBRIC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete original VM after copy ähnelt.
        /// </summary>
        public static string COPY_VM_REMOVE {
            get {
                return ResourceManager.GetString("COPY_VM_REMOVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Create a full copy of the existing VM on this storage repository: ähnelt.
        /// </summary>
        public static string COPY_VM_SELECT_SR {
            get {
                return ResourceManager.GetString("COPY_VM_SELECT_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Clone the existing template ähnelt.
        /// </summary>
        public static string COPY_VM_SLOW_CLONE_DESCRIPTION {
            get {
                return ResourceManager.GetString("COPY_VM_SLOW_CLONE_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select where would you like to copy your template ähnelt.
        /// </summary>
        public static string COPY_VM_WIZARD_RUBRIC_TEMPLATE {
            get {
                return ResourceManager.GetString("COPY_VM_WIZARD_RUBRIC_TEMPLATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select where would you like to copy your VM. ähnelt.
        /// </summary>
        public static string COPY_VM_WIZARD_RUBRIC_VM {
            get {
                return ResourceManager.GetString("COPY_VM_WIZARD_RUBRIC_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy VM ähnelt.
        /// </summary>
        public static string COPY_VM_WIZARD_TITLE {
            get {
                return ResourceManager.GetString("COPY_VM_WIZARD_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy VM to {0} ähnelt.
        /// </summary>
        public static string COPY_VM_WIZARD_TITLE_AND_LOCATION {
            get {
                return ResourceManager.GetString("COPY_VM_WIZARD_TITLE_AND_LOCATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copyright © {0} All rights reserved. ähnelt.
        /// </summary>
        public static string COPYRIGHT {
            get {
                return ResourceManager.GetString("COPYRIGHT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not open URL &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string COULD_NOT_OPEN_URL {
            get {
                return ResourceManager.GetString("COULD_NOT_OPEN_URL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not write to file &apos;{0}&apos;.
        ///
        ///{1} ähnelt.
        /// </summary>
        public static string COULD_NOT_WRITE_FILE {
            get {
                return ResourceManager.GetString("COULD_NOT_WRITE_FILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /sec ähnelt.
        /// </summary>
        public static string COUNTS_PER_SEC_UNIT {
            get {
                return ResourceManager.GetString("COUNTS_PER_SEC_UNIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die incompatible hardware platform version ähnelt.
        /// </summary>
        public static string CPM_FAILURE_REASON_HARDWARE_PLATFORM {
            get {
                return ResourceManager.GetString("CPM_FAILURE_REASON_HARDWARE_PLATFORM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die incompatible version numbers ähnelt.
        /// </summary>
        public static string CPM_FAILURE_REASON_VERSION {
            get {
                return ResourceManager.GetString("CPM_FAILURE_REASON_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do not automatically delete source virtual disks ähnelt.
        /// </summary>
        public static string CPM_SUMMARY_AUTO_DELETE_FALSE {
            get {
                return ResourceManager.GetString("CPM_SUMMARY_AUTO_DELETE_FALSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Automatically delete source virtual disks ähnelt.
        /// </summary>
        public static string CPM_SUMMARY_AUTO_DELETE_TRUE {
            get {
                return ResourceManager.GetString("CPM_SUMMARY_AUTO_DELETE_TRUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Destination: ähnelt.
        /// </summary>
        public static string CPM_SUMMARY_KEY_DESTINATION {
            get {
                return ResourceManager.GetString("CPM_SUMMARY_KEY_DESTINATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Template: ähnelt.
        /// </summary>
        public static string CPM_SUMMARY_KEY_MIGRATE_TEMPLATE {
            get {
                return ResourceManager.GetString("CPM_SUMMARY_KEY_MIGRATE_TEMPLATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VM: ähnelt.
        /// </summary>
        public static string CPM_SUMMARY_KEY_MIGRATE_VM {
            get {
                return ResourceManager.GetString("CPM_SUMMARY_KEY_MIGRATE_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Networking: ähnelt.
        /// </summary>
        public static string CPM_SUMMARY_KEY_NETWORK {
            get {
                return ResourceManager.GetString("CPM_SUMMARY_KEY_NETWORK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Storage: ähnelt.
        /// </summary>
        public static string CPM_SUMMARY_KEY_STORAGE {
            get {
                return ResourceManager.GetString("CPM_SUMMARY_KEY_STORAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Target Server: ähnelt.
        /// </summary>
        public static string CPM_SUMMARY_KEY_TARGET_SERVER {
            get {
                return ResourceManager.GetString("CPM_SUMMARY_KEY_TARGET_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Migration Network: ähnelt.
        /// </summary>
        public static string CPM_SUMMARY_KEY_TRANSFER_NETWORK {
            get {
                return ResourceManager.GetString("CPM_SUMMARY_KEY_TRANSFER_NETWORK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network not found ähnelt.
        /// </summary>
        public static string CPM_SUMMARY_NETWORK_NOT_FOUND {
            get {
                return ResourceManager.GetString("CPM_SUMMARY_NETWORK_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unset ähnelt.
        /// </summary>
        public static string CPM_SUMMARY_UNSET {
            get {
                return ResourceManager.GetString("CPM_SUMMARY_UNSET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pl&amp;ace all virtual disks on the same SR: ähnelt.
        /// </summary>
        public static string CPM_WIZARD_ALL_ON_SAME_SR_RADIO {
            get {
                return ResourceManager.GetString("CPM_WIZARD_ALL_ON_SAME_SR_RADIO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Destination ähnelt.
        /// </summary>
        public static string CPM_WIZARD_COPY_MODE_TAB_TITLE {
            get {
                return ResourceManager.GetString("CPM_WIZARD_COPY_MODE_TAB_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Destination ähnelt.
        /// </summary>
        public static string CPM_WIZARD_COPY_MODE_TITLE {
            get {
                return ResourceManager.GetString("CPM_WIZARD_COPY_MODE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Destination: ähnelt.
        /// </summary>
        public static string CPM_WIZARD_DESTINATION_DESTINATION {
            get {
                return ResourceManager.GetString("CPM_WIZARD_DESTINATION_DESTINATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the pool or standalone server where you want to copy the selected VMs to. ähnelt.
        /// </summary>
        public static string CPM_WIZARD_DESTINATION_INSTRUCTIONS_COPY {
            get {
                return ResourceManager.GetString("CPM_WIZARD_DESTINATION_INSTRUCTIONS_COPY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the pool or standalone server where you want to copy the selected VM to. ähnelt.
        /// </summary>
        public static string CPM_WIZARD_DESTINATION_INSTRUCTIONS_COPY_SINGLE {
            get {
                return ResourceManager.GetString("CPM_WIZARD_DESTINATION_INSTRUCTIONS_COPY_SINGLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the pool or standalone server where you want to copy the selected templates to. ähnelt.
        /// </summary>
        public static string CPM_WIZARD_DESTINATION_INSTRUCTIONS_COPY_TEMPLATE {
            get {
                return ResourceManager.GetString("CPM_WIZARD_DESTINATION_INSTRUCTIONS_COPY_TEMPLATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the pool or standalone server where you want to copy the selected template to. ähnelt.
        /// </summary>
        public static string CPM_WIZARD_DESTINATION_INSTRUCTIONS_COPY_TEMPLATE_SINGLE {
            get {
                return ResourceManager.GetString("CPM_WIZARD_DESTINATION_INSTRUCTIONS_COPY_TEMPLATE_SINGLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the pool or standalone server where you want to migrate the selected VMs to. ähnelt.
        /// </summary>
        public static string CPM_WIZARD_DESTINATION_INSTRUCTIONS_MIGRATE {
            get {
                return ResourceManager.GetString("CPM_WIZARD_DESTINATION_INSTRUCTIONS_MIGRATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the pool or standalone server where you want to migrate the selected VM to. ähnelt.
        /// </summary>
        public static string CPM_WIZARD_DESTINATION_INSTRUCTIONS_MIGRATE_SINGLE {
            get {
                return ResourceManager.GetString("CPM_WIZARD_DESTINATION_INSTRUCTIONS_MIGRATE_SINGLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the pool or standalone server where you want to move the selected VMs to. ähnelt.
        /// </summary>
        public static string CPM_WIZARD_DESTINATION_INSTRUCTIONS_MOVE {
            get {
                return ResourceManager.GetString("CPM_WIZARD_DESTINATION_INSTRUCTIONS_MOVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the pool or standalone server where you want to move the selected VM to. ähnelt.
        /// </summary>
        public static string CPM_WIZARD_DESTINATION_INSTRUCTIONS_MOVE_SINGLE {
            get {
                return ResourceManager.GetString("CPM_WIZARD_DESTINATION_INSTRUCTIONS_MOVE_SINGLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Destination Pool ähnelt.
        /// </summary>
        public static string CPM_WIZARD_DESTINATION_TAB_TITLE {
            get {
                return ResourceManager.GetString("CPM_WIZARD_DESTINATION_TAB_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Specify a &amp;target server in the destination pool (optional): ähnelt.
        /// </summary>
        public static string CPM_WIZARD_DESTINATION_TABLE_INTRO {
            get {
                return ResourceManager.GetString("CPM_WIZARD_DESTINATION_TABLE_INTRO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the destination pool or standalone server ähnelt.
        /// </summary>
        public static string CPM_WIZARD_DESTINATION_TITLE {
            get {
                return ResourceManager.GetString("CPM_WIZARD_DESTINATION_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The destination host has become unreachable.
        ///
        ///Please reconnect the host and try again. ähnelt.
        /// </summary>
        public static string CPM_WIZARD_ERROR_TARGET_DISCONNECTED {
            get {
                return ResourceManager.GetString("CPM_WIZARD_ERROR_TARGET_DISCONNECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The wizard is ready to begin migrating the selected VMs using the settings shown below. Please review these settings and click Previous if you need to go back and make any changes, otherwise click Finish to migrate the VMs. ähnelt.
        /// </summary>
        public static string CPM_WIZARD_FINISH_PAGE_INTRO {
            get {
                return ResourceManager.GetString("CPM_WIZARD_FINISH_PAGE_INTRO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The wizard is ready to begin copying the selected VMs using the settings shown below. Please review these settings and click Previous if you need to go back and make any changes, otherwise click Finish to copy the VMs. ähnelt.
        /// </summary>
        public static string CPM_WIZARD_FINISH_PAGE_INTRO_COPY {
            get {
                return ResourceManager.GetString("CPM_WIZARD_FINISH_PAGE_INTRO_COPY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The wizard is ready to begin copying the selected VM using the settings shown below. Please review these settings and click Previous if you need to go back and make any changes, otherwise click Finish to copy the VM. ähnelt.
        /// </summary>
        public static string CPM_WIZARD_FINISH_PAGE_INTRO_COPY_SINGLE {
            get {
                return ResourceManager.GetString("CPM_WIZARD_FINISH_PAGE_INTRO_COPY_SINGLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The wizard is ready to begin copying the selected template using the settings shown below. Please review these settings and click Previous if you need to go back and make any changes, otherwise click Finish to copy the template. ähnelt.
        /// </summary>
        public static string CPM_WIZARD_FINISH_PAGE_INTRO_COPY_SINGLE_TEMPLATE {
            get {
                return ResourceManager.GetString("CPM_WIZARD_FINISH_PAGE_INTRO_COPY_SINGLE_TEMPLATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The wizard is ready to begin copying the selected templates using the settings shown below. Please review these settings and click Previous if you need to go back and make any changes, otherwise click Finish to copy the templates. ähnelt.
        /// </summary>
        public static string CPM_WIZARD_FINISH_PAGE_INTRO_COPY_TEMPLATE {
            get {
                return ResourceManager.GetString("CPM_WIZARD_FINISH_PAGE_INTRO_COPY_TEMPLATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The wizard is ready to begin migrating the selected VM using the settings shown below. Please review these settings and click Previous if you need to go back and make any changes, otherwise click Finish to migrate the VM. ähnelt.
        /// </summary>
        public static string CPM_WIZARD_FINISH_PAGE_INTRO_SINGLE {
            get {
                return ResourceManager.GetString("CPM_WIZARD_FINISH_PAGE_INTRO_SINGLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Review settings ähnelt.
        /// </summary>
        public static string CPM_WIZARD_FINISH_PAGE_TITLE {
            get {
                return ResourceManager.GetString("CPM_WIZARD_FINISH_PAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name and Storage ähnelt.
        /// </summary>
        public static string CPM_WIZARD_INTRA_POOL_COPY_TAB_TITLE {
            get {
                return ResourceManager.GetString("CPM_WIZARD_INTRA_POOL_COPY_TAB_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name and Storage ähnelt.
        /// </summary>
        public static string CPM_WIZARD_INTRA_POOL_COPY_TITLE {
            get {
                return ResourceManager.GetString("CPM_WIZARD_INTRA_POOL_COPY_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Map the virtual network interfaces in the selected VMs to networks in the destination pool or standalone server. ähnelt.
        /// </summary>
        public static string CPM_WIZARD_NETWORKING_INTRO {
            get {
                return ResourceManager.GetString("CPM_WIZARD_NETWORKING_INTRO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Map the virtual network interfaces in the selected VM to networks in the destination pool or standalone server. ähnelt.
        /// </summary>
        public static string CPM_WIZARD_NETWORKING_INTRO_SINGLE {
            get {
                return ResourceManager.GetString("CPM_WIZARD_NETWORKING_INTRO_SINGLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Map the virtual network interfaces in the selected templates to networks in the destination pool or standalone server. ähnelt.
        /// </summary>
        public static string CPM_WIZARD_NETWORKING_INTRO_TEMPLATE {
            get {
                return ResourceManager.GetString("CPM_WIZARD_NETWORKING_INTRO_TEMPLATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Map the virtual network interfaces in the selected template to networks in the destination pool or standalone server. ähnelt.
        /// </summary>
        public static string CPM_WIZARD_NETWORKING_INTRO_TEMPLATE_SINGLE {
            get {
                return ResourceManager.GetString("CPM_WIZARD_NETWORKING_INTRO_TEMPLATE_SINGLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Networking ähnelt.
        /// </summary>
        public static string CPM_WIZARD_SELECT_NETWORK_PAGE_TEXT {
            get {
                return ResourceManager.GetString("CPM_WIZARD_SELECT_NETWORK_PAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure networking ähnelt.
        /// </summary>
        public static string CPM_WIZARD_SELECT_NETWORK_PAGE_TITLE {
            get {
                return ResourceManager.GetString("CPM_WIZARD_SELECT_NETWORK_PAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Storage ähnelt.
        /// </summary>
        public static string CPM_WIZARD_SELECT_STORAGE_PAGE_TEXT {
            get {
                return ResourceManager.GetString("CPM_WIZARD_SELECT_STORAGE_PAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure storage ähnelt.
        /// </summary>
        public static string CPM_WIZARD_SELECT_STORAGE_PAGE_TITLE {
            get {
                return ResourceManager.GetString("CPM_WIZARD_SELECT_STORAGE_PAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Migration Network ähnelt.
        /// </summary>
        public static string CPM_WIZARD_SELECT_TRANSFER_NETWORK_PAGE_TEXT {
            get {
                return ResourceManager.GetString("CPM_WIZARD_SELECT_TRANSFER_NETWORK_PAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure storage migration settings ähnelt.
        /// </summary>
        public static string CPM_WIZARD_SELECT_TRANSFER_NETWORK_TITLE {
            get {
                return ResourceManager.GetString("CPM_WIZARD_SELECT_TRANSFER_NETWORK_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pla&amp;ce virtual disks onto specified SRs: ähnelt.
        /// </summary>
        public static string CPM_WIZARD_SPECIFIC_SR_RADIO {
            get {
                return ResourceManager.GetString("CPM_WIZARD_SPECIFIC_SR_RADIO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select one or more storage repositories (SR) in the destination pool or standalone server. ähnelt.
        /// </summary>
        public static string CPM_WIZARD_STORAGE_INSTRUCTIONS {
            get {
                return ResourceManager.GetString("CPM_WIZARD_STORAGE_INSTRUCTIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Migrate VM ähnelt.
        /// </summary>
        public static string CPM_WIZARD_TITLE {
            get {
                return ResourceManager.GetString("CPM_WIZARD_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Migrate VM to {0} ähnelt.
        /// </summary>
        public static string CPM_WIZARD_TITLE_AND_LOCATION {
            get {
                return ResourceManager.GetString("CPM_WIZARD_TITLE_AND_LOCATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The selected VMs are no longer available for migration. Please verify your selection is valid and relaunch the wizard. ähnelt.
        /// </summary>
        public static string CPM_WIZARD_VM_MISSING_ERROR {
            get {
                return ResourceManager.GetString("CPM_WIZARD_VM_MISSING_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Virtual network interfaces: ähnelt.
        /// </summary>
        public static string CPM_WIZARD_VM_SELECTION_INTRODUCTION {
            get {
                return ResourceManager.GetString("CPM_WIZARD_VM_SELECTION_INTRODUCTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WLB is enabled on the host ähnelt.
        /// </summary>
        public static string CPM_WLB_ENABLED_ON_HOST_FAILURE_REASON {
            get {
                return ResourceManager.GetString("CPM_WLB_ENABLED_ON_HOST_FAILURE_REASON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WLB is enabled on the source ähnelt.
        /// </summary>
        public static string CPM_WLB_ENABLED_ON_VM_FAILURE_REASON {
            get {
                return ResourceManager.GetString("CPM_WLB_ENABLED_ON_VM_FAILURE_REASON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select a storage network on the destination pool or standalone server that will be used for the live migration of the virtual disks. 
        ///
        ///For optimal performance and reliability during template migration, ensure that the network used for the storage migration is not being used for management or virtual machine traffic. ähnelt.
        /// </summary>
        public static string CPS_WIZARD_MIGRATION_PAGE_TITLE_TEMPLATE {
            get {
                return ResourceManager.GetString("CPS_WIZARD_MIGRATION_PAGE_TITLE_TEMPLATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select a storage network on the destination pool or standalone server that will be used for the live migration of the virtual disks. 
        ///
        ///For optimal performance and reliability during VM migration, ensure that the network used for the storage migration is not being used for management or virtual machine traffic. ähnelt.
        /// </summary>
        public static string CPS_WIZARD_MIGRATION_PAGE_TITLE_VM {
            get {
                return ResourceManager.GetString("CPS_WIZARD_MIGRATION_PAGE_TITLE_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Template - Virtual Network Interface ähnelt.
        /// </summary>
        public static string CPS_WIZARD_NETWORKING_NETWORK_COLUMN_TEMPLATE {
            get {
                return ResourceManager.GetString("CPS_WIZARD_NETWORKING_NETWORK_COLUMN_TEMPLATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VM - Virtual Network Interface ähnelt.
        /// </summary>
        public static string CPS_WIZARD_NETWORKING_NETWORK_COLUMN_VM {
            get {
                return ResourceManager.GetString("CPS_WIZARD_NETWORKING_NETWORK_COLUMN_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Template - Virtual Disk ähnelt.
        /// </summary>
        public static string CPS_WIZARD_STORAGE_PAGE_DISK_COLUMN_HEADER_FOR_TEMPLATE {
            get {
                return ResourceManager.GetString("CPS_WIZARD_STORAGE_PAGE_DISK_COLUMN_HEADER_FOR_TEMPLATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VM - Virtual Disk ähnelt.
        /// </summary>
        public static string CPS_WIZARD_STORAGE_PAGE_DISK_COLUMN_HEADER_FOR_VM {
            get {
                return ResourceManager.GetString("CPS_WIZARD_STORAGE_PAGE_DISK_COLUMN_HEADER_FOR_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die CPU ähnelt.
        /// </summary>
        public static string CPU {
            get {
                return ResourceManager.GetString("CPU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die CPU and Memory ähnelt.
        /// </summary>
        public static string CPU_AND_MEMORY {
            get {
                return ResourceManager.GetString("CPU_AND_MEMORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} vCPU(s) &amp; {1} MB RAM ähnelt.
        /// </summary>
        public static string CPU_AND_MEMORY_SUB {
            get {
                return ResourceManager.GetString("CPU_AND_MEMORY_SUB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} vCPU(s) ähnelt.
        /// </summary>
        public static string CPU_SUB {
            get {
                return ResourceManager.GetString("CPU_SUB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The number of vCPUs must be a multiple of the number of cores per socket ähnelt.
        /// </summary>
        public static string CPU_TOPOLOGY_INVALID_REASON_MULTIPLE {
            get {
                return ResourceManager.GetString("CPU_TOPOLOGY_INVALID_REASON_MULTIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The number of sockets must be at most 16 ähnelt.
        /// </summary>
        public static string CPU_TOPOLOGY_INVALID_REASON_SOCKETS {
            get {
                return ResourceManager.GetString("CPU_TOPOLOGY_INVALID_REASON_SOCKETS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 1 socket with 1 core per socket ähnelt.
        /// </summary>
        public static string CPU_TOPOLOGY_STRING_1_SOCKET_1_CORE {
            get {
                return ResourceManager.GetString("CPU_TOPOLOGY_STRING_1_SOCKET_1_CORE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 1 socket with {0} cores per socket ähnelt.
        /// </summary>
        public static string CPU_TOPOLOGY_STRING_1_SOCKET_N_CORE {
            get {
                return ResourceManager.GetString("CPU_TOPOLOGY_STRING_1_SOCKET_N_CORE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} cores per socket (Invalid configuration) ähnelt.
        /// </summary>
        public static string CPU_TOPOLOGY_STRING_INVALID_VALUE {
            get {
                return ResourceManager.GetString("CPU_TOPOLOGY_STRING_INVALID_VALUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 1 core per socket (Invalid configuration) ähnelt.
        /// </summary>
        public static string CPU_TOPOLOGY_STRING_INVALID_VALUE_1 {
            get {
                return ResourceManager.GetString("CPU_TOPOLOGY_STRING_INVALID_VALUE_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} sockets with 1 core per socket ähnelt.
        /// </summary>
        public static string CPU_TOPOLOGY_STRING_N_SOCKET_1_CORE {
            get {
                return ResourceManager.GetString("CPU_TOPOLOGY_STRING_N_SOCKET_1_CORE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} sockets with {1} cores per socket ähnelt.
        /// </summary>
        public static string CPU_TOPOLOGY_STRING_N_SOCKET_N_CORE {
            get {
                return ResourceManager.GetString("CPU_TOPOLOGY_STRING_N_SOCKET_N_CORE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating CD drive ähnelt.
        /// </summary>
        public static string CREATE_CD_DRIVE {
            get {
                return ResourceManager.GetString("CREATE_CD_DRIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die C&amp;reate ähnelt.
        /// </summary>
        public static string CREATE_MNEMONIC_R {
            get {
                return ResourceManager.GetString("CREATE_MNEMONIC_R", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Create new folder &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string CREATE_NEW_FOLDER {
            get {
                return ResourceManager.GetString("CREATE_NEW_FOLDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Create new folders &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string CREATE_NEW_FOLDERS {
            get {
                return ResourceManager.GetString("CREATE_NEW_FOLDERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Create policy ähnelt.
        /// </summary>
        public static string CREATE_POLICY {
            get {
                return ResourceManager.GetString("CREATE_POLICY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Create Template From Snapshot... ähnelt.
        /// </summary>
        public static string CREATE_TEMPLATE_FROM_SNAPSHOT_MENU_ITEM {
            get {
                return ResourceManager.GetString("CREATE_TEMPLATE_FROM_SNAPSHOT_MENU_ITEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Create VM &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string CREATE_VM {
            get {
                return ResourceManager.GetString("CREATE_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Create vApp ähnelt.
        /// </summary>
        public static string CREATE_VM_APPLIANCE {
            get {
                return ResourceManager.GetString("CREATE_VM_APPLIANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating VM &apos;{0}&apos; from template &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string CREATE_VM_FROM_TEMPLATE {
            get {
                return ResourceManager.GetString("CREATE_VM_FROM_TEMPLATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Created new folder ähnelt.
        /// </summary>
        public static string CREATED_NEW_FOLDER {
            get {
                return ResourceManager.GetString("CREATED_NEW_FOLDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Created new folders ähnelt.
        /// </summary>
        public static string CREATED_NEW_FOLDERS {
            get {
                return ResourceManager.GetString("CREATED_NEW_FOLDERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die vApp &apos;{0}&apos; created. ähnelt.
        /// </summary>
        public static string CREATED_VM_APPLIANCE {
            get {
                return ResourceManager.GetString("CREATED_VM_APPLIANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Snapshot schedule &apos;{0}&apos; created. ähnelt.
        /// </summary>
        public static string CREATED_VMSS {
            get {
                return ResourceManager.GetString("CREATED_VMSS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Created &apos;{0}&apos; by cloning &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string CREATEDVM_CLONE {
            get {
                return ResourceManager.GetString("CREATEDVM_CLONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Created &apos;{0}&apos; by copying &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string CREATEDVM_COPY {
            get {
                return ResourceManager.GetString("CREATEDVM_COPY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VM creation canceled ähnelt.
        /// </summary>
        public static string CREATEVM_CANCELLED {
            get {
                return ResourceManager.GetString("CREATEVM_CANCELLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configuring CD drive for {0} ähnelt.
        /// </summary>
        public static string CREATEVM_CD {
            get {
                return ResourceManager.GetString("CREATEVM_CD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating &apos;{0}&apos; by cloning &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string CREATEVM_CLONE {
            get {
                return ResourceManager.GetString("CREATEVM_CLONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating &apos;{0}&apos; by copying &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string CREATEVM_COPY {
            get {
                return ResourceManager.GetString("CREATEVM_COPY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configuring disks for {0} ähnelt.
        /// </summary>
        public static string CREATEVM_DISKS {
            get {
                return ResourceManager.GetString("CREATEVM_DISKS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configuring network interfaces for {0} ähnelt.
        /// </summary>
        public static string CREATEVM_NETWORK {
            get {
                return ResourceManager.GetString("CREATEVM_NETWORK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Provisioning new storage for {0} ähnelt.
        /// </summary>
        public static string CREATEVM_PROVISIONING {
            get {
                return ResourceManager.GetString("CREATEVM_PROVISIONING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating cloud config drive ähnelt.
        /// </summary>
        public static string CREATING_CLOUD_CONFIG_DRIVE {
            get {
                return ResourceManager.GetString("CREATING_CLOUD_CONFIG_DRIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating disks ähnelt.
        /// </summary>
        public static string CREATING_DISKS {
            get {
                return ResourceManager.GetString("CREATING_DISKS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Archiving appliance files into single package file {0}... ähnelt.
        /// </summary>
        public static string CREATING_FILE {
            get {
                return ResourceManager.GetString("CREATING_FILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating manifest file... ähnelt.
        /// </summary>
        public static string CREATING_MANIFEST {
            get {
                return ResourceManager.GetString("CREATING_MANIFEST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating new pool &apos;{0}&apos; with master &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string CREATING_NAMED_POOL_WITH_MASTER {
            get {
                return ResourceManager.GetString("CREATING_NAMED_POOL_WITH_MASTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating new folder... ähnelt.
        /// </summary>
        public static string CREATING_NEW_FOLDER {
            get {
                return ResourceManager.GetString("CREATING_NEW_FOLDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating new folders... ähnelt.
        /// </summary>
        public static string CREATING_NEW_FOLDERS {
            get {
                return ResourceManager.GetString("CREATING_NEW_FOLDERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating vApp &apos;{0}&apos;... ähnelt.
        /// </summary>
        public static string CREATING_VM_APPLIANCE {
            get {
                return ResourceManager.GetString("CREATING_VM_APPLIANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating snapshot schedule &apos;{0}&apos;... ähnelt.
        /// </summary>
        public static string CREATING_VMSS {
            get {
                return ResourceManager.GetString("CREATING_VMSS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creation time ähnelt.
        /// </summary>
        public static string CREATION_TIME {
            get {
                return ResourceManager.GetString("CREATION_TIME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die User name and password check complete ähnelt.
        /// </summary>
        public static string CREDENTIALS_CHECK_COMPLETE {
            get {
                return ResourceManager.GetString("CREDENTIALS_CHECK_COMPLETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking user name and password... ähnelt.
        /// </summary>
        public static string CREDENTIALS_CHECKING {
            get {
                return ResourceManager.GetString("CREDENTIALS_CHECKING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dell EqualLogic ähnelt.
        /// </summary>
        public static string CSLG_DELL_DIRECT {
            get {
                return ResourceManager.GetString("CSLG_DELL_DIRECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Direct Connection ähnelt.
        /// </summary>
        public static string CSLG_DIRECT_CONNECTION {
            get {
                return ResourceManager.GetString("CSLG_DIRECT_CONNECTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NetApp ähnelt.
        /// </summary>
        public static string CSLG_NETAPP_DIRECT {
            get {
                return ResourceManager.GetString("CSLG_NETAPP_DIRECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Storage adapter: ähnelt.
        /// </summary>
        public static string CSLG_STORAGEADAPTER {
            get {
                return ResourceManager.GetString("CSLG_STORAGEADAPTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die StorageLink adapters ähnelt.
        /// </summary>
        public static string CSLG_STORAGELINK_ADAPTERS {
            get {
                return ResourceManager.GetString("CSLG_STORAGELINK_ADAPTERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die StorageLink Server ({0}) ähnelt.
        /// </summary>
        public static string CSLG_STORAGELINK_SERVER {
            get {
                return ResourceManager.GetString("CSLG_STORAGELINK_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Comma Separated Value ähnelt.
        /// </summary>
        public static string CSV_DESCRIPTION {
            get {
                return ResourceManager.GetString("CSV_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current ähnelt.
        /// </summary>
        public static string CURRENT {
            get {
                return ResourceManager.GetString("CURRENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current location ähnelt.
        /// </summary>
        public static string CURRENT_LOCATION {
            get {
                return ResourceManager.GetString("CURRENT_LOCATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current memory usage: {0} ähnelt.
        /// </summary>
        public static string CURRENT_MEMORY_USAGE {
            get {
                return ResourceManager.GetString("CURRENT_MEMORY_USAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current memory usage: {0} per VM ähnelt.
        /// </summary>
        public static string CURRENT_MEMORY_USAGE_MULTIPLE {
            get {
                return ResourceManager.GetString("CURRENT_MEMORY_USAGE_MULTIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current policy ähnelt.
        /// </summary>
        public static string CURRENT_POLICY {
            get {
                return ResourceManager.GetString("CURRENT_POLICY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current schedule ähnelt.
        /// </summary>
        public static string CURRENT_SCHEDULE {
            get {
                return ResourceManager.GetString("CURRENT_SCHEDULE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current vApp ähnelt.
        /// </summary>
        public static string CURRENT_VAPP {
            get {
                return ResourceManager.GetString("CURRENT_VAPP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Custom... ähnelt.
        /// </summary>
        public static string CUSTOM {
            get {
                return ResourceManager.GetString("CUSTOM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} ({1}) ähnelt.
        /// </summary>
        public static string CUSTOM_FIELD_NAME_AND_TYPE {
            get {
                return ResourceManager.GetString("CUSTOM_FIELD_NAME_AND_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Custom Fields ähnelt.
        /// </summary>
        public static string CUSTOM_FIELDS {
            get {
                return ResourceManager.GetString("CUSTOM_FIELDS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Custom Search ähnelt.
        /// </summary>
        public static string CUSTOM_SEARCH {
            get {
                return ResourceManager.GetString("CUSTOM_SEARCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Custom Templates ähnelt.
        /// </summary>
        public static string CUSTOM_TEMPLATES {
            get {
                return ResourceManager.GetString("CUSTOM_TEMPLATES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Daily; at {0} ähnelt.
        /// </summary>
        public static string DAILY_SCHEDULE_FORMAT {
            get {
                return ResourceManager.GetString("DAILY_SCHEDULE_FORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die CPU ähnelt.
        /// </summary>
        public static string DATATYPE_CPU {
            get {
                return ResourceManager.GetString("DATATYPE_CPU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Custom ähnelt.
        /// </summary>
        public static string DATATYPE_CUSTOM {
            get {
                return ResourceManager.GetString("DATATYPE_CUSTOM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disk ähnelt.
        /// </summary>
        public static string DATATYPE_DISK {
            get {
                return ResourceManager.GetString("DATATYPE_DISK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die GPU ähnelt.
        /// </summary>
        public static string DATATYPE_GPU {
            get {
                return ResourceManager.GetString("DATATYPE_GPU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Latency ähnelt.
        /// </summary>
        public static string DATATYPE_LATENCY {
            get {
                return ResourceManager.GetString("DATATYPE_LATENCY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Load Average ähnelt.
        /// </summary>
        public static string DATATYPE_LOADAVERAGE {
            get {
                return ResourceManager.GetString("DATATYPE_LOADAVERAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Memory ähnelt.
        /// </summary>
        public static string DATATYPE_MEMORY {
            get {
                return ResourceManager.GetString("DATATYPE_MEMORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network ähnelt.
        /// </summary>
        public static string DATATYPE_NETWORK {
            get {
                return ResourceManager.GetString("DATATYPE_NETWORK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PVS-Accelerator ähnelt.
        /// </summary>
        public static string DATATYPE_PVS {
            get {
                return ResourceManager.GetString("DATATYPE_PVS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Storage ähnelt.
        /// </summary>
        public static string DATATYPE_STORAGE {
            get {
                return ResourceManager.GetString("DATATYPE_STORAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Date ähnelt.
        /// </summary>
        public static string DATE {
            get {
                return ResourceManager.GetString("DATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Date &amp; Time ähnelt.
        /// </summary>
        public static string DATE_AND_TIME {
            get {
                return ResourceManager.GetString("DATE_AND_TIME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Custom... ähnelt.
        /// </summary>
        public static string DATE_FILTER_CUSTOM {
            get {
                return ResourceManager.GetString("DATE_FILTER_CUSTOM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Last &amp;24 Hours ähnelt.
        /// </summary>
        public static string DATE_FILTER_LAST_24_HOURS {
            get {
                return ResourceManager.GetString("DATE_FILTER_LAST_24_HOURS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Last &amp;3 Days ähnelt.
        /// </summary>
        public static string DATE_FILTER_LAST_3_DAYS {
            get {
                return ResourceManager.GetString("DATE_FILTER_LAST_3_DAYS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Last 3&amp;0 Days ähnelt.
        /// </summary>
        public static string DATE_FILTER_LAST_30_DAYS {
            get {
                return ResourceManager.GetString("DATE_FILTER_LAST_30_DAYS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Last &amp;7 Days ähnelt.
        /// </summary>
        public static string DATE_FILTER_LAST_7_DAYS {
            get {
                return ResourceManager.GetString("DATE_FILTER_LAST_7_DAYS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MMM d ähnelt.
        /// </summary>
        public static string DATEFORMAT_DM {
            get {
                return ResourceManager.GetString("DATEFORMAT_DM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MMM d, yyyy ähnelt.
        /// </summary>
        public static string DATEFORMAT_DMY {
            get {
                return ResourceManager.GetString("DATEFORMAT_DMY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MMM d, yyyy h:mm tt ähnelt.
        /// </summary>
        public static string DATEFORMAT_DMY_HM {
            get {
                return ResourceManager.GetString("DATEFORMAT_DMY_HM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MMM d, yyyy h:mm:ss tt ähnelt.
        /// </summary>
        public static string DATEFORMAT_DMY_HMS {
            get {
                return ResourceManager.GetString("DATEFORMAT_DMY_HMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MMMM d, yyyy ähnelt.
        /// </summary>
        public static string DATEFORMAT_DMY_LONG {
            get {
                return ResourceManager.GetString("DATEFORMAT_DMY_LONG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ht ähnelt.
        /// </summary>
        public static string DATEFORMAT_H_SHORT {
            get {
                return ResourceManager.GetString("DATEFORMAT_H_SHORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die h:mm tt ähnelt.
        /// </summary>
        public static string DATEFORMAT_HM {
            get {
                return ResourceManager.GetString("DATEFORMAT_HM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die h:mm:ss tt ähnelt.
        /// </summary>
        public static string DATEFORMAT_HMS {
            get {
                return ResourceManager.GetString("DATEFORMAT_HMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die dddd, MMMM d, yyyy h:mm tt ähnelt.
        /// </summary>
        public static string DATEFORMAT_WDMY_HM_LONG {
            get {
                return ResourceManager.GetString("DATEFORMAT_WDMY_HM_LONG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dea&amp;ctivate ähnelt.
        /// </summary>
        public static string DEACTIVATE {
            get {
                return ResourceManager.GetString("DEACTIVATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Debian Etch 4.0 ähnelt.
        /// </summary>
        public static string DEBIAN_ETCH_40 {
            get {
                return ResourceManager.GetString("DEBIAN_ETCH_40", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Debian Sarge 3.1 ähnelt.
        /// </summary>
        public static string DEBIAN_SARGE_31 {
            get {
                return ResourceManager.GetString("DEBIAN_SARGE_31", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disconnecting Workload Balancing. ähnelt.
        /// </summary>
        public static string DECONFIGURING_WLB {
            get {
                return ResourceManager.GetString("DECONFIGURING_WLB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disconnecting Workload Balancing from pool &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string DECONFIGURING_WLB_ON {
            get {
                return ResourceManager.GetString("DECONFIGURING_WLB_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Default ähnelt.
        /// </summary>
        public static string DEFAULT {
            get {
                return ResourceManager.GetString("DEFAULT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Default install of [XenServer] ähnelt.
        /// </summary>
        public static string DEFAULT_INSTALL_OF_XENSERVER {
            get {
                return ResourceManager.GetString("DEFAULT_INSTALL_OF_XENSERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Default Search ähnelt.
        /// </summary>
        public static string DEFAULT_SEARCH {
            get {
                return ResourceManager.GetString("DEFAULT_SEARCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resources by Tag ähnelt.
        /// </summary>
        public static string DEFAULT_SEARCH_OBJECTS_BY_TAG {
            get {
                return ResourceManager.GetString("DEFAULT_SEARCH_OBJECTS_BY_TAG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VMs and Snapshots ähnelt.
        /// </summary>
        public static string DEFAULT_SEARCH_SNAPSHOTS_BY_VM {
            get {
                return ResourceManager.GetString("DEFAULT_SEARCH_SNAPSHOTS_BY_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VMs by vApp ähnelt.
        /// </summary>
        public static string DEFAULT_SEARCH_VMS_BY_APPLIANCE {
            get {
                return ResourceManager.GetString("DEFAULT_SEARCH_VMS_BY_APPLIANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VMs by Network ähnelt.
        /// </summary>
        public static string DEFAULT_SEARCH_VMS_BY_NETWORK {
            get {
                return ResourceManager.GetString("DEFAULT_SEARCH_VMS_BY_NETWORK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VMs by Operating System ähnelt.
        /// </summary>
        public static string DEFAULT_SEARCH_VMS_BY_OS {
            get {
                return ResourceManager.GetString("DEFAULT_SEARCH_VMS_BY_OS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VMs by Power State ähnelt.
        /// </summary>
        public static string DEFAULT_SEARCH_VMS_BY_POWERSTATE {
            get {
                return ResourceManager.GetString("DEFAULT_SEARCH_VMS_BY_POWERSTATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VMs without [XenServer product] Tools ähnelt.
        /// </summary>
        public static string DEFAULT_SEARCH_VMS_WO_XS_TOOLS {
            get {
                return ResourceManager.GetString("DEFAULT_SEARCH_VMS_WO_XS_TOOLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New virtual disk ähnelt.
        /// </summary>
        public static string DEFAULT_VDI_NAME {
            get {
                return ResourceManager.GetString("DEFAULT_VDI_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} - {1} ähnelt.
        /// </summary>
        public static string DELAY_LOADED_COMBO_BOX_ITEM_FAILURE_REASON {
            get {
                return ResourceManager.GetString("DELAY_LOADED_COMBO_BOX_ITEM_FAILURE_REASON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die unable to determine failure reason ähnelt.
        /// </summary>
        public static string DELAY_LOADED_COMBO_BOX_ITEM_FAILURE_UNKOWN {
            get {
                return ResourceManager.GetString("DELAY_LOADED_COMBO_BOX_ITEM_FAILURE_UNKOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die waiting... ähnelt.
        /// </summary>
        public static string DELAY_LOADING_COMBO_BOX_WAITING {
            get {
                return ResourceManager.GetString("DELAY_LOADING_COMBO_BOX_WAITING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Delete All ähnelt.
        /// </summary>
        public static string DELETE_ALL_BUTTON_LABEL {
            get {
                return ResourceManager.GetString("DELETE_ALL_BUTTON_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete tag &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string DELETE_ALL_TAG {
            get {
                return ResourceManager.GetString("DELETE_ALL_TAG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die For every server that currently has system alerts your current role is not privileged enough to dismiss them. ähnelt.
        /// </summary>
        public static string DELETE_ANY_MESSAGE_RBAC_BLOCKED {
            get {
                return ResourceManager.GetString("DELETE_ANY_MESSAGE_RBAC_BLOCKED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete Bond ähnelt.
        /// </summary>
        public static string DELETE_BOND {
            get {
                return ResourceManager.GetString("DELETE_BOND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure that you want to delete {0}? ähnelt.
        /// </summary>
        public static string DELETE_BOND_MESSAGE {
            get {
                return ResourceManager.GetString("DELETE_BOND_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure that you want to delete {0}?  This network is in use by virtual machines,
        ///and so will be renamed &apos;{1}&apos;. ähnelt.
        /// </summary>
        public static string DELETE_BOND_WITH_VIFS_MESSAGE {
            get {
                return ResourceManager.GetString("DELETE_BOND_WITH_VIFS_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete custom field &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string DELETE_CUSTOM_FIELD {
            get {
                return ResourceManager.GetString("DELETE_CUSTOM_FIELD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to permanently delete folder &apos;{0}&apos;?
        ///If you do, the resources inside it will no longer be in any folder. ähnelt.
        /// </summary>
        public static string DELETE_FOLDER_CONFIRM_CONTENTS {
            get {
                return ResourceManager.GetString("DELETE_FOLDER_CONFIRM_CONTENTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to permanently delete folder &apos;{0}&apos;?
        ///This will also delete its subfolders, and the resources inside it will no longer be in any folder. ähnelt.
        /// </summary>
        public static string DELETE_FOLDER_CONFIRM_CONTENTS_AND_SUBFOLDERS {
            get {
                return ResourceManager.GetString("DELETE_FOLDER_CONFIRM_CONTENTS_AND_SUBFOLDERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to permanently delete folder &apos;{0}&apos;? ähnelt.
        /// </summary>
        public static string DELETE_FOLDER_CONFIRM_EMPTY {
            get {
                return ResourceManager.GetString("DELETE_FOLDER_CONFIRM_EMPTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to permanently delete folder &apos;{0}&apos;?
        ///This will also delete its subfolders. ähnelt.
        /// </summary>
        public static string DELETE_FOLDER_CONFIRM_SUBFOLDERS {
            get {
                return ResourceManager.GetString("DELETE_FOLDER_CONFIRM_SUBFOLDERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete Folder ähnelt.
        /// </summary>
        public static string DELETE_FOLDER_DIALOG_TITLE {
            get {
                return ResourceManager.GetString("DELETE_FOLDER_DIALOG_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Delete Folder... ähnelt.
        /// </summary>
        public static string DELETE_FOLDER_MENU {
            get {
                return ResourceManager.GetString("DELETE_FOLDER_MENU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to permanently delete the selected folders?
        ///If you do, contained resources will no longer be in any folder. ähnelt.
        /// </summary>
        public static string DELETE_FOLDERS_CONFIRM_CONTENTS {
            get {
                return ResourceManager.GetString("DELETE_FOLDERS_CONFIRM_CONTENTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to permanently delete the selected folders?
        ///This will also delete all subfolders, and any contained resources will no longer be in any folder. ähnelt.
        /// </summary>
        public static string DELETE_FOLDERS_CONFIRM_CONTENTS_AND_SUBFOLDERS {
            get {
                return ResourceManager.GetString("DELETE_FOLDERS_CONFIRM_CONTENTS_AND_SUBFOLDERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to permanently delete the selected folders? ähnelt.
        /// </summary>
        public static string DELETE_FOLDERS_CONFIRM_EMPTY {
            get {
                return ResourceManager.GetString("DELETE_FOLDERS_CONFIRM_EMPTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to permanently delete the selected folders?
        ///This will also delete subfolders. ähnelt.
        /// </summary>
        public static string DELETE_FOLDERS_CONFIRM_SUBFOLDERS {
            get {
                return ResourceManager.GetString("DELETE_FOLDERS_CONFIRM_SUBFOLDERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete Folders ähnelt.
        /// </summary>
        public static string DELETE_FOLDERS_DIALOG_TITLE {
            get {
                return ResourceManager.GetString("DELETE_FOLDERS_DIALOG_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to delete &apos;{0}&apos;?  This operation cannot be undone. ähnelt.
        /// </summary>
        public static string DELETE_GRAPH_MESSAGE {
            get {
                return ResourceManager.GetString("DELETE_GRAPH_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There are no alerts remaining which you have permission to dismiss. ähnelt.
        /// </summary>
        public static string DELETE_MESSAGE_RBAC_BLOCKED {
            get {
                return ResourceManager.GetString("DELETE_MESSAGE_RBAC_BLOCKED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete Patch ähnelt.
        /// </summary>
        public static string DELETE_PATCH {
            get {
                return ResourceManager.GetString("DELETE_PATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete policies ähnelt.
        /// </summary>
        public static string DELETE_POLICIES {
            get {
                return ResourceManager.GetString("DELETE_POLICIES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete Search &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string DELETE_SEARCH {
            get {
                return ResourceManager.GetString("DELETE_SEARCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Delete ähnelt.
        /// </summary>
        public static string DELETE_SEARCH_MENU_ITEM {
            get {
                return ResourceManager.GetString("DELETE_SEARCH_MENU_ITEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to delete saved search &apos;{0}&apos;? ähnelt.
        /// </summary>
        public static string DELETE_SEARCH_PROMPT {
            get {
                return ResourceManager.GetString("DELETE_SEARCH_PROMPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove &amp;StorageLink volume... ähnelt.
        /// </summary>
        public static string DELETE_SL_VOLUME_CONTEXT_MENU_ELIPS {
            get {
                return ResourceManager.GetString("DELETE_SL_VOLUME_CONTEXT_MENU_ELIPS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Delete Snapshot ähnelt.
        /// </summary>
        public static string DELETE_SNAPSHOT_MENU_ITEM {
            get {
                return ResourceManager.GetString("DELETE_SNAPSHOT_MENU_ITEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete tag &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string DELETE_TAG {
            get {
                return ResourceManager.GetString("DELETE_TAG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete tags ähnelt.
        /// </summary>
        public static string DELETE_TAGS {
            get {
                return ResourceManager.GetString("DELETE_TAGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Delete Virtual Disk ähnelt.
        /// </summary>
        public static string DELETE_VIRTUAL_DISK {
            get {
                return ResourceManager.GetString("DELETE_VIRTUAL_DISK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete vApp ähnelt.
        /// </summary>
        public static string DELETE_VM_APPLIANCE_TITLE {
            get {
                return ResourceManager.GetString("DELETE_VM_APPLIANCE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete vApps ähnelt.
        /// </summary>
        public static string DELETE_VM_APPLIANCES {
            get {
                return ResourceManager.GetString("DELETE_VM_APPLIANCES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete Snapshot Schedule ähnelt.
        /// </summary>
        public static string DELETE_VMSS_TITLE {
            get {
                return ResourceManager.GetString("DELETE_VMSS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete WLB Optimization Scheduler ähnelt.
        /// </summary>
        public static string DELETE_WLB_OPTIMIZATION_SCHEDULE_CAPTION {
            get {
                return ResourceManager.GetString("DELETE_WLB_OPTIMIZATION_SCHEDULE_CAPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This will delete the selected scheduler. Continue? ähnelt.
        /// </summary>
        public static string DELETE_WLB_OPTIMIZATION_SCHEDULE_WARNING {
            get {
                return ResourceManager.GetString("DELETE_WLB_OPTIMIZATION_SCHEDULE_WARNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleted tag &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string DELETED_ALL_TAG {
            get {
                return ResourceManager.GetString("DELETED_ALL_TAG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleted custom field &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string DELETED_CUSTOM_FIELD {
            get {
                return ResourceManager.GetString("DELETED_CUSTOM_FIELD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleted object ähnelt.
        /// </summary>
        public static string DELETED_FOLDER {
            get {
                return ResourceManager.GetString("DELETED_FOLDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleted objects ähnelt.
        /// </summary>
        public static string DELETED_FOLDERS {
            get {
                return ResourceManager.GetString("DELETED_FOLDERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleted tag &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string DELETED_TAG {
            get {
                return ResourceManager.GetString("DELETED_TAG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleted tags ähnelt.
        /// </summary>
        public static string DELETED_TAGS {
            get {
                return ResourceManager.GetString("DELETED_TAGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die vApps deleted. ähnelt.
        /// </summary>
        public static string DELETED_VM_APPLIANCES {
            get {
                return ResourceManager.GetString("DELETED_VM_APPLIANCES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Snapshot schedules deleted. ähnelt.
        /// </summary>
        public static string DELETED_VMSS {
            get {
                return ResourceManager.GetString("DELETED_VMSS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleting tag &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string DELETING_ALL_TAG {
            get {
                return ResourceManager.GetString("DELETING_ALL_TAG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleting custom field &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string DELETING_CUSTOM_FIELD {
            get {
                return ResourceManager.GetString("DELETING_CUSTOM_FIELD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleting object... ähnelt.
        /// </summary>
        public static string DELETING_FOLDER {
            get {
                return ResourceManager.GetString("DELETING_FOLDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleting objects... ähnelt.
        /// </summary>
        public static string DELETING_FOLDERS {
            get {
                return ResourceManager.GetString("DELETING_FOLDERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleting search &apos;{0}&apos;... ähnelt.
        /// </summary>
        public static string DELETING_SEARCH {
            get {
                return ResourceManager.GetString("DELETING_SEARCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleting tag &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string DELETING_TAG {
            get {
                return ResourceManager.GetString("DELETING_TAG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleting tags ähnelt.
        /// </summary>
        public static string DELETING_TAGS {
            get {
                return ResourceManager.GetString("DELETING_TAGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleting vApp &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string DELETING_VM_APPLIANCE {
            get {
                return ResourceManager.GetString("DELETING_VM_APPLIANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleting snapshot schedule &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string DELETING_VMSS {
            get {
                return ResourceManager.GetString("DELETING_VMSS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Description ähnelt.
        /// </summary>
        public static string DESCRIPTION {
            get {
                return ResourceManager.GetString("DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Host destroyed ähnelt.
        /// </summary>
        public static string DESTROY_HOST_ACTION_COMPLETED_DESC {
            get {
                return ResourceManager.GetString("DESTROY_HOST_ACTION_COMPLETED_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Host destroyed, but could not remove its SRs ähnelt.
        /// </summary>
        public static string DESTROY_HOST_ACTION_COMPLETED_SRS_NOT_REMOVED_DESC {
            get {
                return ResourceManager.GetString("DESTROY_HOST_ACTION_COMPLETED_SRS_NOT_REMOVED_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Destroying host ähnelt.
        /// </summary>
        public static string DESTROY_HOST_ACTION_DESC {
            get {
                return ResourceManager.GetString("DESTROY_HOST_ACTION_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Removing SRs ähnelt.
        /// </summary>
        public static string DESTROY_HOST_ACTION_REMOVE_SRS_DESC {
            get {
                return ResourceManager.GetString("DESTROY_HOST_ACTION_REMOVE_SRS_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Destroying host &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string DESTROY_HOST_ACTION_TITLE {
            get {
                return ResourceManager.GetString("DESTROY_HOST_ACTION_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die D&amp;estroy ähnelt.
        /// </summary>
        public static string DESTROY_HOST_CONTEXT_MENU_ITEM_TEXT {
            get {
                return ResourceManager.GetString("DESTROY_HOST_CONTEXT_MENU_ITEM_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Destr&amp;oy ähnelt.
        /// </summary>
        public static string DESTROY_SR {
            get {
                return ResourceManager.GetString("DESTROY_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Destroyed ähnelt.
        /// </summary>
        public static string DESTROYING_HOSTS_END_DESC {
            get {
                return ResourceManager.GetString("DESTROYING_HOSTS_END_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Destroying ähnelt.
        /// </summary>
        public static string DESTROYING_HOSTS_START_DESC {
            get {
                return ResourceManager.GetString("DESTROYING_HOSTS_START_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Destroying servers ähnelt.
        /// </summary>
        public static string DESTROYING_HOSTS_TITLE {
            get {
                return ResourceManager.GetString("DESTROYING_HOSTS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Making pool &apos;{0}&apos; into standalone server ähnelt.
        /// </summary>
        public static string DESTROYING_POOL {
            get {
                return ResourceManager.GetString("DESTROYING_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Detach all ähnelt.
        /// </summary>
        public static string DETACH_ALL_BUTTON_LABEL {
            get {
                return ResourceManager.GetString("DETACH_ALL_BUTTON_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Detach ähnelt.
        /// </summary>
        public static string DETACH_SR {
            get {
                return ResourceManager.GetString("DETACH_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Detached ähnelt.
        /// </summary>
        public static string DETACHED {
            get {
                return ResourceManager.GetString("DETACHED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} (Detached) ähnelt.
        /// </summary>
        public static string DETACHED_BRACKETS {
            get {
                return ResourceManager.GetString("DETACHED_BRACKETS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenCenter] has detected that an SR already exists on this LUN. This SR is not currently in use by &apos;{0}&apos;,  would you like to attach it? ähnelt.
        /// </summary>
        public static string DETACHED_ISCI_DETECTED {
            get {
                return ResourceManager.GetString("DETACHED_ISCI_DETECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Details ähnelt.
        /// </summary>
        public static string DETAILS {
            get {
                return ResourceManager.GetString("DETAILS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Device ähnelt.
        /// </summary>
        public static string DEVICE_NAME {
            get {
                return ResourceManager.GetString("DEVICE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Device {0}, ({1}) ähnelt.
        /// </summary>
        public static string DEVICE_POSITION {
            get {
                return ResourceManager.GetString("DEVICE_POSITION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Position {0} is already in use. Your VM will not boot with two disks in the same position. Do you want to swap the disk at &apos;{0}&apos; with this disk? ähnelt.
        /// </summary>
        public static string DEVICE_POSITION_CONFLICT {
            get {
                return ResourceManager.GetString("DEVICE_POSITION_CONFLICT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You will have to restart the VM for changes in device position to take effect. ähnelt.
        /// </summary>
        public static string DEVICE_POSITION_RESTART_REQUIRED {
            get {
                return ResourceManager.GetString("DEVICE_POSITION_RESTART_REQUIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scanned for free device positions ähnelt.
        /// </summary>
        public static string DEVICE_POSITION_SCANNED {
            get {
                return ResourceManager.GetString("DEVICE_POSITION_SCANNED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scanning for free device positions ähnelt.
        /// </summary>
        public static string DEVICE_POSITION_SCANNING {
            get {
                return ResourceManager.GetString("DEVICE_POSITION_SCANNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No devices available ähnelt.
        /// </summary>
        public static string DIALOG_ATTACH_USB_NO_DEVICES_AVAILABLE {
            get {
                return ResourceManager.GetString("DIALOG_ATTACH_USB_NO_DEVICES_AVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disable passthrough ähnelt.
        /// </summary>
        public static string DIALOG_USB_USAGE_DISABLE_PASSTHROUGH {
            get {
                return ResourceManager.GetString("DIALOG_USB_USAGE_DISABLE_PASSTHROUGH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enable passthrough ähnelt.
        /// </summary>
        public static string DIALOG_USB_USAGE_ENABLE_PASSTHROUGH {
            get {
                return ResourceManager.GetString("DIALOG_USB_USAGE_ENABLE_PASSTHROUGH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure that you want to enable passthrough on this device? This will allow this device to be passed through to virtual machines. ähnelt.
        /// </summary>
        public static string DIALOG_USB_USAGE_NOTE_ALLOW {
            get {
                return ResourceManager.GetString("DIALOG_USB_USAGE_NOTE_ALLOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure that you want to disable passthrough on this device? This device will no longer be allowed to be passed through to virtual machines. ähnelt.
        /// </summary>
        public static string DIALOG_USB_USAGE_NOTE_DENY {
            get {
                return ResourceManager.GetString("DIALOG_USB_USAGE_NOTE_DENY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Yes, Disable passthrough ähnelt.
        /// </summary>
        public static string DIALOG_USB_USAGE_OKBUTTON_DISABLE {
            get {
                return ResourceManager.GetString("DIALOG_USB_USAGE_OKBUTTON_DISABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Yes, Enable passthrough ähnelt.
        /// </summary>
        public static string DIALOG_USB_USAGE_OKBUTTON_ENABLE {
            get {
                return ResourceManager.GetString("DIALOG_USB_USAGE_OKBUTTON_ENABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disa&amp;ble ähnelt.
        /// </summary>
        public static string DISABLE {
            get {
                return ResourceManager.GetString("DISABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disable HA ähnelt.
        /// </summary>
        public static string DISABLE_HA {
            get {
                return ResourceManager.GetString("DISABLE_HA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disable HA if you want to configure the management interfaces ähnelt.
        /// </summary>
        public static string DISABLE_HA_CONFIGURE_MANAGEMENT_INTERFACES {
            get {
                return ResourceManager.GetString("DISABLE_HA_CONFIGURE_MANAGEMENT_INTERFACES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Disable HA... ähnelt.
        /// </summary>
        public static string DISABLE_HA_ELLIPSIS {
            get {
                return ResourceManager.GetString("DISABLE_HA_ELLIPSIS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disable ähnelt.
        /// </summary>
        public static string DISABLE_NOAMP {
            get {
                return ResourceManager.GetString("DISABLE_NOAMP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Disable PVS-Accelerator ähnelt.
        /// </summary>
        public static string DISABLE_PVS_READ_CACHING_BUTTON {
            get {
                return ResourceManager.GetString("DISABLE_PVS_READ_CACHING_BUTTON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disable P&amp;VS-Accelerator ähnelt.
        /// </summary>
        public static string DISABLE_PVS_READ_CACHING_MENU {
            get {
                return ResourceManager.GetString("DISABLE_PVS_READ_CACHING_MENU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pause Workload Balancing  ähnelt.
        /// </summary>
        public static string DISABLE_WLB {
            get {
                return ResourceManager.GetString("DISABLE_WLB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pa&amp;use ähnelt.
        /// </summary>
        public static string DISABLE_WLB_ELLIPSIS {
            get {
                return ResourceManager.GetString("DISABLE_WLB_ELLIPSIS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disabled ähnelt.
        /// </summary>
        public static string DISABLED {
            get {
                return ResourceManager.GetString("DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No updates found because automatic checking for updates is disabled. ähnelt.
        /// </summary>
        public static string DISABLED_UPDATE_AUTOMATIC_CHECK_WARNING {
            get {
                return ResourceManager.GetString("DISABLED_UPDATE_AUTOMATIC_CHECK_WARNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Snapshot schedule &apos;{0}&apos; disabled. ähnelt.
        /// </summary>
        public static string DISABLED_VMSS {
            get {
                return ResourceManager.GetString("DISABLED_VMSS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disabling ähnelt.
        /// </summary>
        public static string DISABLING {
            get {
                return ResourceManager.GetString("DISABLING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disabling Active Directory Authentication ähnelt.
        /// </summary>
        public static string DISABLING_AD {
            get {
                return ResourceManager.GetString("DISABLING_AD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disabling Active Directory Authentication on pool &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string DISABLING_AD_ON {
            get {
                return ResourceManager.GetString("DISABLING_AD_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disabling HA ähnelt.
        /// </summary>
        public static string DISABLING_HA {
            get {
                return ResourceManager.GetString("DISABLING_HA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disabling HA on pool &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string DISABLING_HA_ON {
            get {
                return ResourceManager.GetString("DISABLING_HA_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disabling snapshot schedule &apos;{0}&apos;... ähnelt.
        /// </summary>
        public static string DISABLING_VMSS {
            get {
                return ResourceManager.GetString("DISABLING_VMSS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pausing Workload Balancing  ähnelt.
        /// </summary>
        public static string DISABLING_WLB {
            get {
                return ResourceManager.GetString("DISABLING_WLB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pausing Workload Balancing on pool &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string DISABLING_WLB_ON {
            get {
                return ResourceManager.GetString("DISABLING_WLB_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disaster Reco&amp;very ähnelt.
        /// </summary>
        public static string DISASTER_RECOVERY_AMP {
            get {
                return ResourceManager.GetString("DISASTER_RECOVERY_AMP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Di&amp;saster Recovery ähnelt.
        /// </summary>
        public static string DISASTER_RECOVERY_CONTEXT_MENU {
            get {
                return ResourceManager.GetString("DISASTER_RECOVERY_CONTEXT_MENU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disconnect ähnelt.
        /// </summary>
        public static string DISCONNECT {
            get {
                return ResourceManager.GetString("DISCONNECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Disconnect anyway ähnelt.
        /// </summary>
        public static string DISCONNECT_ANYWAY {
            get {
                return ResourceManager.GetString("DISCONNECT_ANYWAY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do&amp;n&apos;t disconnect ähnelt.
        /// </summary>
        public static string DISCONNECT_CANCEL {
            get {
                return ResourceManager.GetString("DISCONNECT_CANCEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unfinished tasks will be canceled if you disconnect from &apos;{0}&apos; before they finish. ähnelt.
        /// </summary>
        public static string DISCONNECT_WARNING {
            get {
                return ResourceManager.GetString("DISCONNECT_WARNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disconnected ähnelt.
        /// </summary>
        public static string DISCONNECTED {
            get {
                return ResourceManager.GetString("DISCONNECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The connection to the pool was lost before this action could take place. ähnelt.
        /// </summary>
        public static string DISCONNECTED_BEFORE_ACTION_STARTED {
            get {
                return ResourceManager.GetString("DISCONNECTED_BEFORE_ACTION_STARTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disconnected servers ähnelt.
        /// </summary>
        public static string DISCONNECTED_SERVERS {
            get {
                return ResourceManager.GetString("DISCONNECTED_SERVERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add Virtual Disk ähnelt.
        /// </summary>
        public static string DISK_ADD {
            get {
                return ResourceManager.GetString("DISK_ADD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attach Disk ähnelt.
        /// </summary>
        public static string DISK_ATTACH {
            get {
                return ResourceManager.GetString("DISK_ATTACH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}% ({1} used) ähnelt.
        /// </summary>
        public static string DISK_PERCENT_USED {
            get {
                return ResourceManager.GetString("DISK_PERCENT_USED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There is not enough available space for this disk ähnelt.
        /// </summary>
        public static string DISK_TOO_BIG {
            get {
                return ResourceManager.GetString("DISK_TOO_BIG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disk size needs to be at least {0} {1} ähnelt.
        /// </summary>
        public static string DISK_TOO_SMALL {
            get {
                return ResourceManager.GetString("DISK_TOO_SMALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disk and memory snapshots ähnelt.
        /// </summary>
        public static string DISKMEMORY_SNAPSHOTS {
            get {
                return ResourceManager.GetString("DISKMEMORY_SNAPSHOTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disks ähnelt.
        /// </summary>
        public static string DISKS {
            get {
                return ResourceManager.GetString("DISKS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disks and memory ähnelt.
        /// </summary>
        public static string DISKS_AND_MEMORY {
            get {
                return ResourceManager.GetString("DISKS_AND_MEMORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disks only ähnelt.
        /// </summary>
        public static string DISKS_ONLY {
            get {
                return ResourceManager.GetString("DISKS_ONLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dismiss &amp;all ähnelt.
        /// </summary>
        public static string DISMISS_ALL_CONFIRM_BUTTON {
            get {
                return ResourceManager.GetString("DISMISS_ALL_CONFIRM_BUTTON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Yes, Dismiss &amp;all ähnelt.
        /// </summary>
        public static string DISMISS_ALL_YES_CONFIRM_BUTTON {
            get {
                return ResourceManager.GetString("DISMISS_ALL_YES_CONFIRM_BUTTON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only dismiss &amp;visible ähnelt.
        /// </summary>
        public static string DISMISS_FILTERED_CONFIRM_BUTTON {
            get {
                return ResourceManager.GetString("DISMISS_FILTERED_CONFIRM_BUTTON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display ähnelt.
        /// </summary>
        public static string DISPLAY {
            get {
                return ResourceManager.GetString("DISPLAY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display options ähnelt.
        /// </summary>
        public static string DISPLAY_DETAILS {
            get {
                return ResourceManager.GetString("DISPLAY_DETAILS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display 2 ähnelt.
        /// </summary>
        public static string DISPLAY2 {
            get {
                return ResourceManager.GetString("DISPLAY2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display options 2 ähnelt.
        /// </summary>
        public static string DISPLAY2_DETAILS {
            get {
                return ResourceManager.GetString("DISPLAY2_DETAILS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A memory range cannot be set because I/O drivers are not installed on this VM. ähnelt.
        /// </summary>
        public static string DMC_UNAVAILABLE_NO_IO_NO_MGMNT {
            get {
                return ResourceManager.GetString("DMC_UNAVAILABLE_NO_IO_NO_MGMNT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A memory range cannot be set because I/O drivers are not installed on these VMs. ähnelt.
        /// </summary>
        public static string DMC_UNAVAILABLE_NO_IO_NO_MGMNT_PLURAL {
            get {
                return ResourceManager.GetString("DMC_UNAVAILABLE_NO_IO_NO_MGMNT_PLURAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A memory range cannot be set because [XenServer product] Tools are not installed on this VM. ähnelt.
        /// </summary>
        public static string DMC_UNAVAILABLE_NOTOOLS {
            get {
                return ResourceManager.GetString("DMC_UNAVAILABLE_NOTOOLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A memory range cannot be set because [XenServer product] Tools are not installed on these VMs. ähnelt.
        /// </summary>
        public static string DMC_UNAVAILABLE_NOTOOLS_PLURAL {
            get {
                return ResourceManager.GetString("DMC_UNAVAILABLE_NOTOOLS_PLURAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A memory range cannot be set because the operating system on this VM does not support it. ähnelt.
        /// </summary>
        public static string DMC_UNAVAILABLE_NOTSUPPORTED {
            get {
                return ResourceManager.GetString("DMC_UNAVAILABLE_NOTSUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A memory range cannot be set because the operating systems on these VMs do not support it. ähnelt.
        /// </summary>
        public static string DMC_UNAVAILABLE_NOTSUPPORTED_PLURAL {
            get {
                return ResourceManager.GetString("DMC_UNAVAILABLE_NOTSUPPORTED_PLURAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A memory range cannot be set because [XenServer product] Tools are out of date on this VM. ähnelt.
        /// </summary>
        public static string DMC_UNAVAILABLE_OLDTOOLS {
            get {
                return ResourceManager.GetString("DMC_UNAVAILABLE_OLDTOOLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A memory range cannot be set because [XenServer product] Tools are out of date on these VMs. ähnelt.
        /// </summary>
        public static string DMC_UNAVAILABLE_OLDTOOLS_PLURAL {
            get {
                return ResourceManager.GetString("DMC_UNAVAILABLE_OLDTOOLS_PLURAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A memory range cannot be set for this template. ähnelt.
        /// </summary>
        public static string DMC_UNAVAILABLE_TEMPLATE {
            get {
                return ResourceManager.GetString("DMC_UNAVAILABLE_TEMPLATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A memory range cannot be set for this VM. ähnelt.
        /// </summary>
        public static string DMC_UNAVAILABLE_VM {
            get {
                return ResourceManager.GetString("DMC_UNAVAILABLE_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A memory range cannot be set for these VMs. ähnelt.
        /// </summary>
        public static string DMC_UNAVAILABLE_VMS {
            get {
                return ResourceManager.GetString("DMC_UNAVAILABLE_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Don&apos;t show this message again ähnelt.
        /// </summary>
        public static string DO_NOT_SHOW_THIS_MESSAGE {
            get {
                return ResourceManager.GetString("DO_NOT_SHOW_THIS_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Container Details ähnelt.
        /// </summary>
        public static string DOCKER_DETAIL_TAB_TITLE {
            get {
                return ResourceManager.GetString("DOCKER_DETAIL_TAB_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die API Version ähnelt.
        /// </summary>
        public static string DOCKER_INFO_API_VERSION {
            get {
                return ResourceManager.GetString("DOCKER_INFO_API_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Arch ähnelt.
        /// </summary>
        public static string DOCKER_INFO_ARCH {
            get {
                return ResourceManager.GetString("DOCKER_INFO_ARCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Debug ähnelt.
        /// </summary>
        public static string DOCKER_INFO_DEBUG {
            get {
                return ResourceManager.GetString("DOCKER_INFO_DEBUG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Driver ähnelt.
        /// </summary>
        public static string DOCKER_INFO_DRIVER {
            get {
                return ResourceManager.GetString("DOCKER_INFO_DRIVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Driver Status ähnelt.
        /// </summary>
        public static string DOCKER_INFO_DRIVER_STATUS {
            get {
                return ResourceManager.GetString("DOCKER_INFO_DRIVER_STATUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Execution Driver ähnelt.
        /// </summary>
        public static string DOCKER_INFO_EXECUTION_DRIVER {
            get {
                return ResourceManager.GetString("DOCKER_INFO_EXECUTION_DRIVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Git Commit ähnelt.
        /// </summary>
        public static string DOCKER_INFO_GIT_COMMIT {
            get {
                return ResourceManager.GetString("DOCKER_INFO_GIT_COMMIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Go Version ähnelt.
        /// </summary>
        public static string DOCKER_INFO_GO_VERSION {
            get {
                return ResourceManager.GetString("DOCKER_INFO_GO_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index Server Address ähnelt.
        /// </summary>
        public static string DOCKER_INFO_INDEX_SERVER_ADDRESS {
            get {
                return ResourceManager.GetString("DOCKER_INFO_INDEX_SERVER_ADDRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initiate Path ähnelt.
        /// </summary>
        public static string DOCKER_INFO_INITIATE_PATH {
            get {
                return ResourceManager.GetString("DOCKER_INFO_INITIATE_PATH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initiate Sha1 ähnelt.
        /// </summary>
        public static string DOCKER_INFO_INITIATE_SHA1 {
            get {
                return ResourceManager.GetString("DOCKER_INFO_INITIATE_SHA1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IPv4 Forwarding ähnelt.
        /// </summary>
        public static string DOCKER_INFO_IPV4_FORWARDING {
            get {
                return ResourceManager.GetString("DOCKER_INFO_IPV4_FORWARDING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Kernel Version ähnelt.
        /// </summary>
        public static string DOCKER_INFO_KERNEL_VERSION {
            get {
                return ResourceManager.GetString("DOCKER_INFO_KERNEL_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Labels ähnelt.
        /// </summary>
        public static string DOCKER_INFO_LABELS {
            get {
                return ResourceManager.GetString("DOCKER_INFO_LABELS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Memory Limit ähnelt.
        /// </summary>
        public static string DOCKER_INFO_MEMORY_LIMIT {
            get {
                return ResourceManager.GetString("DOCKER_INFO_MEMORY_LIMIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NCPU ähnelt.
        /// </summary>
        public static string DOCKER_INFO_NCPU {
            get {
                return ResourceManager.GetString("DOCKER_INFO_NCPU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NEvents Listener ähnelt.
        /// </summary>
        public static string DOCKER_INFO_NEVENT_LISTENER {
            get {
                return ResourceManager.GetString("DOCKER_INFO_NEVENT_LISTENER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NFd ähnelt.
        /// </summary>
        public static string DOCKER_INFO_NFD {
            get {
                return ResourceManager.GetString("DOCKER_INFO_NFD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NGoroutines ähnelt.
        /// </summary>
        public static string DOCKER_INFO_NGOROUTINES {
            get {
                return ResourceManager.GetString("DOCKER_INFO_NGOROUTINES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Root Directory ähnelt.
        /// </summary>
        public static string DOCKER_INFO_ROOT_DIR {
            get {
                return ResourceManager.GetString("DOCKER_INFO_ROOT_DIR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Swap Limit ähnelt.
        /// </summary>
        public static string DOCKER_INFO_SWAP_LIMIT {
            get {
                return ResourceManager.GetString("DOCKER_INFO_SWAP_LIMIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Version ähnelt.
        /// </summary>
        public static string DOCKER_INFO_VERSION {
            get {
                return ResourceManager.GetString("DOCKER_INFO_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Container Processes ähnelt.
        /// </summary>
        public static string DOCKER_PROCESS_TAB_TITLE {
            get {
                return ResourceManager.GetString("DOCKER_PROCESS_TAB_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die does not use ähnelt.
        /// </summary>
        public static string DOES_NOT_USE {
            get {
                return ResourceManager.GetString("DOES_NOT_USE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die done. ähnelt.
        /// </summary>
        public static string DONE {
            get {
                return ResourceManager.GetString("DONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Don&apos;t select a target server ähnelt.
        /// </summary>
        public static string DONT_SELECT_TARGET_SERVER {
            get {
                return ResourceManager.GetString("DONT_SELECT_TARGET_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} is now available ähnelt.
        /// </summary>
        public static string DOWLOAD_LATEST_XS_TITLE {
            get {
                return ResourceManager.GetString("DOWLOAD_LATEST_XS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Download canceled ähnelt.
        /// </summary>
        public static string DOWNLOAD_AND_EXTRACT_ACTION_DOWNLOAD_CANCELLED_DESC {
            get {
                return ResourceManager.GetString("DOWNLOAD_AND_EXTRACT_ACTION_DOWNLOAD_CANCELLED_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Downloading update {0} ähnelt.
        /// </summary>
        public static string DOWNLOAD_AND_EXTRACT_ACTION_DOWNLOADING_DESC {
            get {
                return ResourceManager.GetString("DOWNLOAD_AND_EXTRACT_ACTION_DOWNLOADING_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Downloading update {0} ({1} of {2}) ähnelt.
        /// </summary>
        public static string DOWNLOAD_AND_EXTRACT_ACTION_DOWNLOADING_DETAILS_DESC {
            get {
                return ResourceManager.GetString("DOWNLOAD_AND_EXTRACT_ACTION_DOWNLOADING_DETAILS_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Extracting update {0} ähnelt.
        /// </summary>
        public static string DOWNLOAD_AND_EXTRACT_ACTION_EXTRACTING_DESC {
            get {
                return ResourceManager.GetString("DOWNLOAD_AND_EXTRACT_ACTION_EXTRACTING_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot extract the update file from downloaded archive. Please see application logs for more details. ähnelt.
        /// </summary>
        public static string DOWNLOAD_AND_EXTRACT_ACTION_EXTRACTING_ERROR {
            get {
                return ResourceManager.GetString("DOWNLOAD_AND_EXTRACT_ACTION_EXTRACTING_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Update file could not be located. Please see application logs for more details. ähnelt.
        /// </summary>
        public static string DOWNLOAD_AND_EXTRACT_ACTION_FILE_NOT_FOUND {
            get {
                return ResourceManager.GetString("DOWNLOAD_AND_EXTRACT_ACTION_FILE_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Download and extract update {0} ähnelt.
        /// </summary>
        public static string DOWNLOAD_AND_EXTRACT_ACTION_TITLE {
            get {
                return ResourceManager.GetString("DOWNLOAD_AND_EXTRACT_ACTION_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Download... ähnelt.
        /// </summary>
        public static string DOWNLOAD_ELLIPSES {
            get {
                return ResourceManager.GetString("DOWNLOAD_ELLIPSES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} is now available. Download the latest at the [Citrix] website. ähnelt.
        /// </summary>
        public static string DOWNLOAD_LATEST_XS_BODY {
            get {
                return ResourceManager.GetString("DOWNLOAD_LATEST_XS_BODY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Downloading update from &apos;{0}&apos;... ähnelt.
        /// </summary>
        public static string DOWNLOADING_PATCH_FROM {
            get {
                return ResourceManager.GetString("DOWNLOADING_PATCH_FROM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Configure... ähnelt.
        /// </summary>
        public static string DR_CONFIGURE_AMP {
            get {
                return ResourceManager.GetString("DR_CONFIGURE_AMP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure DR on &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string DR_CONFIGURE_TITLE {
            get {
                return ResourceManager.GetString("DR_CONFIGURE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dr&amp;y-run... ähnelt.
        /// </summary>
        public static string DR_DRYRUN_AMP {
            get {
                return ResourceManager.GetString("DR_DRYRUN_AMP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fail &amp;back... ähnelt.
        /// </summary>
        public static string DR_FAILBACK_AMP {
            get {
                return ResourceManager.GetString("DR_FAILBACK_AMP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fail &amp;over... ähnelt.
        /// </summary>
        public static string DR_FAILOVER_AMP {
            get {
                return ResourceManager.GetString("DR_FAILOVER_AMP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die HA on pool {0} ähnelt.
        /// </summary>
        public static string DR_HA_CHECK_DESCRIPTION {
            get {
                return ResourceManager.GetString("DR_HA_CHECK_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Disaster Recovery Wizard... ähnelt.
        /// </summary>
        public static string DR_WIZARD_AMP {
            get {
                return ResourceManager.GetString("DR_WIZARD_AMP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die vApp &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string DR_WIZARD_APPLIANCE_CHECK_DESCRIPTION {
            get {
                return ResourceManager.GetString("DR_WIZARD_APPLIANCE_CHECK_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current pool ähnelt.
        /// </summary>
        public static string DR_WIZARD_APPLIANCESPAGE_CURRENT_POOL {
            get {
                return ResourceManager.GetString("DR_WIZARD_APPLIANCESPAGE_CURRENT_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the vApps and individual VMs you want to fail back and specify the required power state for them after they have been recovered to pool ‘{0}’. ähnelt.
        /// </summary>
        public static string DR_WIZARD_APPLIANCESPAGE_DESCRIPTION_FAILBACK {
            get {
                return ResourceManager.GetString("DR_WIZARD_APPLIANCESPAGE_DESCRIPTION_FAILBACK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the vApps and individual VMs you want to recover and specify the required power state for them after they have been recovered. ähnelt.
        /// </summary>
        public static string DR_WIZARD_APPLIANCESPAGE_DESCRIPTION_FAILOVER {
            get {
                return ResourceManager.GetString("DR_WIZARD_APPLIANCESPAGE_DESCRIPTION_FAILOVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Do not start up failed back vApps and VMs ähnelt.
        /// </summary>
        public static string DR_WIZARD_APPLIANCESPAGE_FAILBACK_DONOTSTART {
            get {
                return ResourceManager.GetString("DR_WIZARD_APPLIANCESPAGE_FAILBACK_DONOTSTART", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do not start up failed back vApps and VMs ähnelt.
        /// </summary>
        public static string DR_WIZARD_APPLIANCESPAGE_FAILBACK_DONOTSTART_NOAMP {
            get {
                return ResourceManager.GetString("DR_WIZARD_APPLIANCESPAGE_FAILBACK_DONOTSTART_NOAMP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die S&amp;tart up all failed back vApps and VMs immediately ähnelt.
        /// </summary>
        public static string DR_WIZARD_APPLIANCESPAGE_FAILBACK_START {
            get {
                return ResourceManager.GetString("DR_WIZARD_APPLIANCESPAGE_FAILBACK_START", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start up all failed back vApps and VMs immediately ähnelt.
        /// </summary>
        public static string DR_WIZARD_APPLIANCESPAGE_FAILBACK_START_NOAMP {
            get {
                return ResourceManager.GetString("DR_WIZARD_APPLIANCESPAGE_FAILBACK_START_NOAMP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sta&amp;rt up failed back vApps and VMs in a paused state ähnelt.
        /// </summary>
        public static string DR_WIZARD_APPLIANCESPAGE_FAILBACK_STARTPAUSED {
            get {
                return ResourceManager.GetString("DR_WIZARD_APPLIANCESPAGE_FAILBACK_STARTPAUSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start up failed back vApps and VMs in a paused state ähnelt.
        /// </summary>
        public static string DR_WIZARD_APPLIANCESPAGE_FAILBACK_STARTPAUSED_NOAMP {
            get {
                return ResourceManager.GetString("DR_WIZARD_APPLIANCESPAGE_FAILBACK_STARTPAUSED_NOAMP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Do not start up recovered vApps and VMs ähnelt.
        /// </summary>
        public static string DR_WIZARD_APPLIANCESPAGE_FAILOVER_DONOTSTART {
            get {
                return ResourceManager.GetString("DR_WIZARD_APPLIANCESPAGE_FAILOVER_DONOTSTART", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do not start up recovered vApps and VMs ähnelt.
        /// </summary>
        public static string DR_WIZARD_APPLIANCESPAGE_FAILOVER_DONOTSTART_NOAMP {
            get {
                return ResourceManager.GetString("DR_WIZARD_APPLIANCESPAGE_FAILOVER_DONOTSTART_NOAMP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die S&amp;tart up all recovered vApps and VMs immediately ähnelt.
        /// </summary>
        public static string DR_WIZARD_APPLIANCESPAGE_FAILOVER_START {
            get {
                return ResourceManager.GetString("DR_WIZARD_APPLIANCESPAGE_FAILOVER_START", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start up all recovered vApps and VMs immediately ähnelt.
        /// </summary>
        public static string DR_WIZARD_APPLIANCESPAGE_FAILOVER_START_NOAMP {
            get {
                return ResourceManager.GetString("DR_WIZARD_APPLIANCESPAGE_FAILOVER_START_NOAMP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sta&amp;rt up recovered vApps and VMs in a paused state ähnelt.
        /// </summary>
        public static string DR_WIZARD_APPLIANCESPAGE_FAILOVER_STARTPAUSED {
            get {
                return ResourceManager.GetString("DR_WIZARD_APPLIANCESPAGE_FAILOVER_STARTPAUSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start up recovered vApps and VMs in a paused state ähnelt.
        /// </summary>
        public static string DR_WIZARD_APPLIANCESPAGE_FAILOVER_STARTPAUSED_NOAMP {
            get {
                return ResourceManager.GetString("DR_WIZARD_APPLIANCESPAGE_FAILOVER_STARTPAUSED_NOAMP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select vApps &amp;&amp; VMs ähnelt.
        /// </summary>
        public static string DR_WIZARD_APPLIANCESPAGE_TEXT {
            get {
                return ResourceManager.GetString("DR_WIZARD_APPLIANCESPAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the vApps or individual virtual machines to fail back to the target pool ähnelt.
        /// </summary>
        public static string DR_WIZARD_APPLIANCESPAGE_TITLE_FAILBACK {
            get {
                return ResourceManager.GetString("DR_WIZARD_APPLIANCESPAGE_TITLE_FAILBACK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the vApps or individual virtual machines to fail over to the target pool ähnelt.
        /// </summary>
        public static string DR_WIZARD_APPLIANCESPAGE_TITLE_FAILOVER {
            get {
                return ResourceManager.GetString("DR_WIZARD_APPLIANCESPAGE_TITLE_FAILOVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [{0} on {1}] ähnelt.
        /// </summary>
        public static string DR_WIZARD_APPPLIANCESPAGE_POOL_DESCRIPTION {
            get {
                return ResourceManager.GetString("DR_WIZARD_APPPLIANCESPAGE_POOL_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking for existing vApps and VMs in &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string DR_WIZARD_CHECKING_EXISTING_APPLIANCES_AND_VMS {
            get {
                return ResourceManager.GetString("DR_WIZARD_CHECKING_EXISTING_APPLIANCES_AND_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking HA status ähnelt.
        /// </summary>
        public static string DR_WIZARD_CHECKING_HA_STATUS {
            get {
                return ResourceManager.GetString("DR_WIZARD_CHECKING_HA_STATUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking power state in source pools ähnelt.
        /// </summary>
        public static string DR_WIZARD_CHECKING_POWER_STATE_IN_SOURCE_POOLS {
            get {
                return ResourceManager.GetString("DR_WIZARD_CHECKING_POWER_STATE_IN_SOURCE_POOLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking storage availability in &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string DR_WIZARD_CHECKING_VMS_CAN_BE_RECOVERED {
            get {
                return ResourceManager.GetString("DR_WIZARD_CHECKING_VMS_CAN_BE_RECOVERED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disaster Recovery - Test Failover to pool &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string DR_WIZARD_DRYRUN_TITLE {
            get {
                return ResourceManager.GetString("DR_WIZARD_DRYRUN_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disaster Recovery - Failback to pool &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string DR_WIZARD_FAILBACK_TITLE {
            get {
                return ResourceManager.GetString("DR_WIZARD_FAILBACK_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disaster Recovery - Failover to pool &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string DR_WIZARD_FAILOVER_TITLE {
            get {
                return ResourceManager.GetString("DR_WIZARD_FAILOVER_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This wizard will take you through the steps needed to perform a test failover of your critical vApps and VMs. The vApps and VMs you select will be recovered to pool ‘{0}’ on the DR site but will not be started up. ähnelt.
        /// </summary>
        public static string DR_WIZARD_FIRSTPAGE_DRYRUN_LINE1 {
            get {
                return ResourceManager.GetString("DR_WIZARD_FIRSTPAGE_DRYRUN_LINE1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configuration information for the vApps and VMs to be failed over will be retrieved from remote storage mirrors. Before test failover begins, the wizard will run a number of checks to ensure that the selected vApps and VMs can be recovered to your DR site. ähnelt.
        /// </summary>
        public static string DR_WIZARD_FIRSTPAGE_DRYRUN_LINE2 {
            get {
                return ResourceManager.GetString("DR_WIZARD_FIRSTPAGE_DRYRUN_LINE2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You will need to provide information about the following as you step through this wizard:
        ///
        ///*  The storage mirrors where the vApp and VM configuration data is currently stored.
        ///*  Which vApps and VMs you want to fail over to the DR site. ähnelt.
        /// </summary>
        public static string DR_WIZARD_FIRSTPAGE_DRYRUN_LINE3 {
            get {
                return ResourceManager.GetString("DR_WIZARD_FIRSTPAGE_DRYRUN_LINE3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This wizard will take you through the steps needed to fail back vApps and VMs to your primary data site. ähnelt.
        /// </summary>
        public static string DR_WIZARD_FIRSTPAGE_FAILBACK_LINE1 {
            get {
                return ResourceManager.GetString("DR_WIZARD_FIRSTPAGE_FAILBACK_LINE1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configuration information for the vApps and VMs to be failed back will be retrieved from remote storage mirrors. Before failback begins, the wizard will run a number of checks to ensure that the selected vApps and VMs can be recovered to your primary data site. ähnelt.
        /// </summary>
        public static string DR_WIZARD_FIRSTPAGE_FAILBACK_LINE2 {
            get {
                return ResourceManager.GetString("DR_WIZARD_FIRSTPAGE_FAILBACK_LINE2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You will need to provide information about the following as you step through this wizard:
        ///
        ///*  The storage mirrors where the vApp and VM configuration data is currently stored.
        ///*  Which vApps and VMs you want to fail back. ähnelt.
        /// </summary>
        public static string DR_WIZARD_FIRSTPAGE_FAILBACK_LINE3 {
            get {
                return ResourceManager.GetString("DR_WIZARD_FIRSTPAGE_FAILBACK_LINE3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Before failback can take place, storage mirroring – remote replication of your VM data – must be halted. ähnelt.
        /// </summary>
        public static string DR_WIZARD_FIRSTPAGE_FAILBACK_LINE4 {
            get {
                return ResourceManager.GetString("DR_WIZARD_FIRSTPAGE_FAILBACK_LINE4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This wizard will take you through the steps needed to fail over your critical vApps and VMs in the event of a site/datacenter failure at your primary data site. ähnelt.
        /// </summary>
        public static string DR_WIZARD_FIRSTPAGE_FAILOVER_LINE1 {
            get {
                return ResourceManager.GetString("DR_WIZARD_FIRSTPAGE_FAILOVER_LINE1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configuration information for the vApps and VMs to be recovered will be retrieved from remote storage mirrors. Before failover begins, the wizard will run a number of checks to ensure that the selected vApps and VMs can be brought back up on your DR site. ähnelt.
        /// </summary>
        public static string DR_WIZARD_FIRSTPAGE_FAILOVER_LINE2 {
            get {
                return ResourceManager.GetString("DR_WIZARD_FIRSTPAGE_FAILOVER_LINE2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You will need to provide information about the following as you step though this wizard:
        ///
        ///*  The storage mirrors where the vApp and VM configuration data is currently stored.
        ///*  Which vApps and VMs you want to fail over to the DR site. ähnelt.
        /// </summary>
        public static string DR_WIZARD_FIRSTPAGE_FAILOVER_LINE3 {
            get {
                return ResourceManager.GetString("DR_WIZARD_FIRSTPAGE_FAILOVER_LINE3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Before failover can take place, storage mirroring – remote replication of your VM data – must be halted. ähnelt.
        /// </summary>
        public static string DR_WIZARD_FIRSTPAGE_FAILOVER_LINE4 {
            get {
                return ResourceManager.GetString("DR_WIZARD_FIRSTPAGE_FAILOVER_LINE4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Before You Start ähnelt.
        /// </summary>
        public static string DR_WIZARD_FIRSTPAGE_TEXT {
            get {
                return ResourceManager.GetString("DR_WIZARD_FIRSTPAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Test failover prerequisites ähnelt.
        /// </summary>
        public static string DR_WIZARD_FIRSTPAGE_TITLE_DRYRUN {
            get {
                return ResourceManager.GetString("DR_WIZARD_FIRSTPAGE_TITLE_DRYRUN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failback prerequisites ähnelt.
        /// </summary>
        public static string DR_WIZARD_FIRSTPAGE_TITLE_FAILBACK {
            get {
                return ResourceManager.GetString("DR_WIZARD_FIRSTPAGE_TITLE_FAILBACK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failover prerequisites ähnelt.
        /// </summary>
        public static string DR_WIZARD_FIRSTPAGE_TITLE_FAILOVER {
            get {
                return ResourceManager.GetString("DR_WIZARD_FIRSTPAGE_TITLE_FAILOVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Click Fail Over to begin the test recovery of the selected vApps and VMs. ähnelt.
        /// </summary>
        public static string DR_WIZARD_PRECHECKPAGE_CONTINUE_DRYRUN {
            get {
                return ResourceManager.GetString("DR_WIZARD_PRECHECKPAGE_CONTINUE_DRYRUN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Click Fail Back to begin recovery of the selected vApps and VMs to your primary data site. ähnelt.
        /// </summary>
        public static string DR_WIZARD_PRECHECKPAGE_CONTINUE_FAILBACK {
            get {
                return ResourceManager.GetString("DR_WIZARD_PRECHECKPAGE_CONTINUE_FAILBACK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Click Fail Over to begin recovery of the selected vApps and VMs. ähnelt.
        /// </summary>
        public static string DR_WIZARD_PRECHECKPAGE_CONTINUE_FAILOVER {
            get {
                return ResourceManager.GetString("DR_WIZARD_PRECHECKPAGE_CONTINUE_FAILOVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failover pre-checks are performed to ensure that the selected vApps and VMs can be failed back to the selected pool. Please take appropriate action to resolve any issues. ähnelt.
        /// </summary>
        public static string DR_WIZARD_PRECHECKPAGE_DESCRIPTION_FAILBACK {
            get {
                return ResourceManager.GetString("DR_WIZARD_PRECHECKPAGE_DESCRIPTION_FAILBACK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pre-checks are performed to ensure that the selected vApps and VMs can be failed over. Please take appropriate action to resolve any issues. ähnelt.
        /// </summary>
        public static string DR_WIZARD_PRECHECKPAGE_DESCRIPTION_FAILOVER {
            get {
                return ResourceManager.GetString("DR_WIZARD_PRECHECKPAGE_DESCRIPTION_FAILOVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deselect ähnelt.
        /// </summary>
        public static string DR_WIZARD_PRECHECKPAGE_DESELECT {
            get {
                return ResourceManager.GetString("DR_WIZARD_PRECHECKPAGE_DESELECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} Failed ähnelt.
        /// </summary>
        public static string DR_WIZARD_PRECHECKPAGE_FAILED {
            get {
                return ResourceManager.GetString("DR_WIZARD_PRECHECKPAGE_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pre-check {0} of {1}: {2} ähnelt.
        /// </summary>
        public static string DR_WIZARD_PRECHECKPAGE_HEADER {
            get {
                return ResourceManager.GetString("DR_WIZARD_PRECHECKPAGE_HEADER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die F&amp;ail Back ähnelt.
        /// </summary>
        public static string DR_WIZARD_PRECHECKPAGE_NEXT_FAILBACK {
            get {
                return ResourceManager.GetString("DR_WIZARD_PRECHECKPAGE_NEXT_FAILBACK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die F&amp;ail Over ähnelt.
        /// </summary>
        public static string DR_WIZARD_PRECHECKPAGE_NEXT_FAILOVER {
            get {
                return ResourceManager.GetString("DR_WIZARD_PRECHECKPAGE_NEXT_FAILOVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: OK ähnelt.
        /// </summary>
        public static string DR_WIZARD_PRECHECKPAGE_OK {
            get {
                return ResourceManager.GetString("DR_WIZARD_PRECHECKPAGE_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: {1} ähnelt.
        /// </summary>
        public static string DR_WIZARD_PRECHECKPAGE_PROBLEM {
            get {
                return ResourceManager.GetString("DR_WIZARD_PRECHECKPAGE_PROBLEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resolve ähnelt.
        /// </summary>
        public static string DR_WIZARD_PRECHECKPAGE_RESOLVE {
            get {
                return ResourceManager.GetString("DR_WIZARD_PRECHECKPAGE_RESOLVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failover prechecks completed: {0} issues found ähnelt.
        /// </summary>
        public static string DR_WIZARD_PRECHECKPAGE_STATUS_FAILURE {
            get {
                return ResourceManager.GetString("DR_WIZARD_PRECHECKPAGE_STATUS_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Running failover pre-checks: ähnelt.
        /// </summary>
        public static string DR_WIZARD_PRECHECKPAGE_STATUS_RUNNING {
            get {
                return ResourceManager.GetString("DR_WIZARD_PRECHECKPAGE_STATUS_RUNNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failover prechecks completed: No issues found ähnelt.
        /// </summary>
        public static string DR_WIZARD_PRECHECKPAGE_STATUS_SUCCESS {
            get {
                return ResourceManager.GetString("DR_WIZARD_PRECHECKPAGE_STATUS_SUCCESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pre-checks ähnelt.
        /// </summary>
        public static string DR_WIZARD_PRECHECKPAGE_TEXT {
            get {
                return ResourceManager.GetString("DR_WIZARD_PRECHECKPAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check that the selected vApps and VMs can be failed back ähnelt.
        /// </summary>
        public static string DR_WIZARD_PRECHECKPAGE_TITLE_FAILBACK {
            get {
                return ResourceManager.GetString("DR_WIZARD_PRECHECKPAGE_TITLE_FAILBACK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check that the selected vApps and VMs can be failed over ähnelt.
        /// </summary>
        public static string DR_WIZARD_PRECHECKPAGE_TITLE_FAILOVER {
            get {
                return ResourceManager.GetString("DR_WIZARD_PRECHECKPAGE_TITLE_FAILOVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Newer versions of its VMs already exist on pool {0} ähnelt.
        /// </summary>
        public static string DR_WIZARD_PROBLEM_EXISTING_APPLIANCE {
            get {
                return ResourceManager.GetString("DR_WIZARD_PROBLEM_EXISTING_APPLIANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete VMs... ähnelt.
        /// </summary>
        public static string DR_WIZARD_PROBLEM_EXISTING_APPLIANCE_HELPMESSAGE {
            get {
                return ResourceManager.GetString("DR_WIZARD_PROBLEM_EXISTING_APPLIANCE_HELPMESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Newer version already exists on pool {0} ähnelt.
        /// </summary>
        public static string DR_WIZARD_PROBLEM_EXISTING_VM {
            get {
                return ResourceManager.GetString("DR_WIZARD_PROBLEM_EXISTING_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete VM ähnelt.
        /// </summary>
        public static string DR_WIZARD_PROBLEM_EXISTING_VM_HELPMESSAGE {
            get {
                return ResourceManager.GetString("DR_WIZARD_PROBLEM_EXISTING_VM_HELPMESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enabled ähnelt.
        /// </summary>
        public static string DR_WIZARD_PROBLEM_HA_ENABLED {
            get {
                return ResourceManager.GetString("DR_WIZARD_PROBLEM_HA_ENABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Uses local storage &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string DR_WIZARD_PROBLEM_LOCAL_STORAGE {
            get {
                return ResourceManager.GetString("DR_WIZARD_PROBLEM_LOCAL_STORAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Local storage ähnelt.
        /// </summary>
        public static string DR_WIZARD_PROBLEM_LOCAL_STORAGE_HELPMESSAGE {
            get {
                return ResourceManager.GetString("DR_WIZARD_PROBLEM_LOCAL_STORAGE_HELPMESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Missing {0} SRs ähnelt.
        /// </summary>
        public static string DR_WIZARD_PROBLEM_MISSING_MULTIPLE_SRS {
            get {
                return ResourceManager.GetString("DR_WIZARD_PROBLEM_MISSING_MULTIPLE_SRS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attach SRs ähnelt.
        /// </summary>
        public static string DR_WIZARD_PROBLEM_MISSING_MULTIPLE_SRS_HELPMESSAGE {
            get {
                return ResourceManager.GetString("DR_WIZARD_PROBLEM_MISSING_MULTIPLE_SRS_HELPMESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Missing SRs information not found ähnelt.
        /// </summary>
        public static string DR_WIZARD_PROBLEM_MISSING_MULTIPLE_SRS_NO_INFO {
            get {
                return ResourceManager.GetString("DR_WIZARD_PROBLEM_MISSING_MULTIPLE_SRS_NO_INFO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Missing SR &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string DR_WIZARD_PROBLEM_MISSING_SR {
            get {
                return ResourceManager.GetString("DR_WIZARD_PROBLEM_MISSING_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attach SR ähnelt.
        /// </summary>
        public static string DR_WIZARD_PROBLEM_MISSING_SR_HELPMESSAGE {
            get {
                return ResourceManager.GetString("DR_WIZARD_PROBLEM_MISSING_SR_HELPMESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Is running on pool &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string DR_WIZARD_PROBLEM_RUNNING_APPLIANCE {
            get {
                return ResourceManager.GetString("DR_WIZARD_PROBLEM_RUNNING_APPLIANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shut down vApp ähnelt.
        /// </summary>
        public static string DR_WIZARD_PROBLEM_RUNNING_APPLIANCE_HELPMESSAGE {
            get {
                return ResourceManager.GetString("DR_WIZARD_PROBLEM_RUNNING_APPLIANCE_HELPMESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Is running on pool &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string DR_WIZARD_PROBLEM_RUNNING_VM {
            get {
                return ResourceManager.GetString("DR_WIZARD_PROBLEM_RUNNING_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shut down VM ähnelt.
        /// </summary>
        public static string DR_WIZARD_PROBLEM_RUNNING_VM_HELPMESSAGE {
            get {
                return ResourceManager.GetString("DR_WIZARD_PROBLEM_RUNNING_VM_HELPMESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Test failover to pool &apos;{0}&apos; is complete. ähnelt.
        /// </summary>
        public static string DR_WIZARD_RECOVERPAGE_COMPLETE_DRYRUN {
            get {
                return ResourceManager.GetString("DR_WIZARD_RECOVERPAGE_COMPLETE_DRYRUN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failback to pool &apos;{0}&apos; is complete. ähnelt.
        /// </summary>
        public static string DR_WIZARD_RECOVERPAGE_COMPLETE_FAILBACK {
            get {
                return ResourceManager.GetString("DR_WIZARD_RECOVERPAGE_COMPLETE_FAILBACK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer] Disaster Recovery is complete. ähnelt.
        /// </summary>
        public static string DR_WIZARD_RECOVERPAGE_COMPLETE_FAILOVER {
            get {
                return ResourceManager.GetString("DR_WIZARD_RECOVERPAGE_COMPLETE_FAILOVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Click Next to remove the vApps and VMs that were failed over and to see the summary report. ähnelt.
        /// </summary>
        public static string DR_WIZARD_RECOVERPAGE_CONTINUE_DRYRUN {
            get {
                return ResourceManager.GetString("DR_WIZARD_RECOVERPAGE_CONTINUE_DRYRUN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Click Next to see the summary report. ähnelt.
        /// </summary>
        public static string DR_WIZARD_RECOVERPAGE_CONTINUE_FAILBACK {
            get {
                return ResourceManager.GetString("DR_WIZARD_RECOVERPAGE_CONTINUE_FAILBACK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Click Next to see the summary report. ähnelt.
        /// </summary>
        public static string DR_WIZARD_RECOVERPAGE_CONTINUE_FAILOVER {
            get {
                return ResourceManager.GetString("DR_WIZARD_RECOVERPAGE_CONTINUE_FAILOVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Test failover is in progress. This may take some time. ähnelt.
        /// </summary>
        public static string DR_WIZARD_RECOVERPAGE_IN_PROGRESS_DRYRUN {
            get {
                return ResourceManager.GetString("DR_WIZARD_RECOVERPAGE_IN_PROGRESS_DRYRUN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failback is in progress. This may take some time. ähnelt.
        /// </summary>
        public static string DR_WIZARD_RECOVERPAGE_IN_PROGRESS_FAILBACK {
            get {
                return ResourceManager.GetString("DR_WIZARD_RECOVERPAGE_IN_PROGRESS_FAILBACK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer] Disaster Recovery is in progress. This may take some time. ähnelt.
        /// </summary>
        public static string DR_WIZARD_RECOVERPAGE_IN_PROGRESS_FAILOVER {
            get {
                return ResourceManager.GetString("DR_WIZARD_RECOVERPAGE_IN_PROGRESS_FAILOVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Overall progress: {0} of {1} tasks completed ähnelt.
        /// </summary>
        public static string DR_WIZARD_RECOVERPAGE_OVERALL_PROGRESS {
            get {
                return ResourceManager.GetString("DR_WIZARD_RECOVERPAGE_OVERALL_PROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Recover from {0} ähnelt.
        /// </summary>
        public static string DR_WIZARD_RECOVERPAGE_RECOVER_FROM {
            get {
                return ResourceManager.GetString("DR_WIZARD_RECOVERPAGE_RECOVER_FROM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Recovering from {0} ähnelt.
        /// </summary>
        public static string DR_WIZARD_RECOVERPAGE_RECOVERING_FROM {
            get {
                return ResourceManager.GetString("DR_WIZARD_RECOVERPAGE_RECOVERING_FROM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Completed ähnelt.
        /// </summary>
        public static string DR_WIZARD_RECOVERPAGE_STATUS_COMPLETED {
            get {
                return ResourceManager.GetString("DR_WIZARD_RECOVERPAGE_STATUS_COMPLETED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed ähnelt.
        /// </summary>
        public static string DR_WIZARD_RECOVERPAGE_STATUS_FAILED {
            get {
                return ResourceManager.GetString("DR_WIZARD_RECOVERPAGE_STATUS_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pending ähnelt.
        /// </summary>
        public static string DR_WIZARD_RECOVERPAGE_STATUS_PENDING {
            get {
                return ResourceManager.GetString("DR_WIZARD_RECOVERPAGE_STATUS_PENDING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Working ähnelt.
        /// </summary>
        public static string DR_WIZARD_RECOVERPAGE_STATUS_WORKING {
            get {
                return ResourceManager.GetString("DR_WIZARD_RECOVERPAGE_STATUS_WORKING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Progress ähnelt.
        /// </summary>
        public static string DR_WIZARD_RECOVERPAGE_TEXT {
            get {
                return ResourceManager.GetString("DR_WIZARD_RECOVERPAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Progress of test failover to pool &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string DR_WIZARD_RECOVERPAGE_TITLE_DRYRUN {
            get {
                return ResourceManager.GetString("DR_WIZARD_RECOVERPAGE_TITLE_DRYRUN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Progress of failback to pool &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string DR_WIZARD_RECOVERPAGE_TITLE_FAILBACK {
            get {
                return ResourceManager.GetString("DR_WIZARD_RECOVERPAGE_TITLE_FAILBACK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer] Disaster Recovery progress ähnelt.
        /// </summary>
        public static string DR_WIZARD_RECOVERPAGE_TITLE_FAILOVER {
            get {
                return ResourceManager.GetString("DR_WIZARD_RECOVERPAGE_TITLE_FAILOVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} - Failed: {1} ähnelt.
        /// </summary>
        public static string DR_WIZARD_REPORT_ACTION_FAILED {
            get {
                return ResourceManager.GetString("DR_WIZARD_REPORT_ACTION_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} - Succeeded ähnelt.
        /// </summary>
        public static string DR_WIZARD_REPORT_ACTION_SUCCEEDED {
            get {
                return ResourceManager.GetString("DR_WIZARD_REPORT_ACTION_SUCCEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DR cleanup ähnelt.
        /// </summary>
        public static string DR_WIZARD_REPORT_DR_CLEANUP {
            get {
                return ResourceManager.GetString("DR_WIZARD_REPORT_DR_CLEANUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Test Failover cleanup ähnelt.
        /// </summary>
        public static string DR_WIZARD_REPORT_DRYRUN_CLEANUP {
            get {
                return ResourceManager.GetString("DR_WIZARD_REPORT_DRYRUN_CLEANUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SRs introduced during this wizard: {0} ähnelt.
        /// </summary>
        public static string DR_WIZARD_REPORT_INTRODUCED_SRS {
            get {
                return ResourceManager.GetString("DR_WIZARD_REPORT_INTRODUCED_SRS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SRs introduced during this wizard: None ähnelt.
        /// </summary>
        public static string DR_WIZARD_REPORT_INTRODUCED_SRS_NONE {
            get {
                return ResourceManager.GetString("DR_WIZARD_REPORT_INTRODUCED_SRS_NONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Warnings:  ähnelt.
        /// </summary>
        public static string DR_WIZARD_REPORT_PRECHECK_WARNINGS {
            get {
                return ResourceManager.GetString("DR_WIZARD_REPORT_PRECHECK_WARNINGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Warnings: None ähnelt.
        /// </summary>
        public static string DR_WIZARD_REPORT_PRECHECK_WARNINGS_NONE {
            get {
                return ResourceManager.GetString("DR_WIZARD_REPORT_PRECHECK_WARNINGS_NONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Recovery process started ähnelt.
        /// </summary>
        public static string DR_WIZARD_REPORT_RECOVERY_STARTED {
            get {
                return ResourceManager.GetString("DR_WIZARD_REPORT_RECOVERY_STARTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Selected VMs and vApps, grouped by pool:  ähnelt.
        /// </summary>
        public static string DR_WIZARD_REPORT_SELECTED_METADATA {
            get {
                return ResourceManager.GetString("DR_WIZARD_REPORT_SELECTED_METADATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Power state after recovery: {0} ähnelt.
        /// </summary>
        public static string DR_WIZARD_REPORT_SELECTED_POWER_STATE {
            get {
                return ResourceManager.GetString("DR_WIZARD_REPORT_SELECTED_POWER_STATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Selected SRs:  ähnelt.
        /// </summary>
        public static string DR_WIZARD_REPORT_SELECTED_SRS {
            get {
                return ResourceManager.GetString("DR_WIZARD_REPORT_SELECTED_SRS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Summary ähnelt.
        /// </summary>
        public static string DR_WIZARD_REPORTPAGE_TEXT {
            get {
                return ResourceManager.GetString("DR_WIZARD_REPORTPAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Summary of test failover to pool &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string DR_WIZARD_REPORTPAGE_TITLE_DRYRUN {
            get {
                return ResourceManager.GetString("DR_WIZARD_REPORTPAGE_TITLE_DRYRUN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Summary of failback to pool &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string DR_WIZARD_REPORTPAGE_TITLE_FAILBACK {
            get {
                return ResourceManager.GetString("DR_WIZARD_REPORTPAGE_TITLE_FAILBACK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Summary of failover to pool &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string DR_WIZARD_REPORTPAGE_TITLE_FAILOVER {
            get {
                return ResourceManager.GetString("DR_WIZARD_REPORTPAGE_TITLE_FAILOVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the storage repositories (SRs) containing the configuration data for the VMs and vApps that you want to fail back. If you know which SRs contain your VMs&apos; disks, you can also include them now. ähnelt.
        /// </summary>
        public static string DR_WIZARD_STORAGEPAGE_DESCRIPTION_FAILBACK {
            get {
                return ResourceManager.GetString("DR_WIZARD_STORAGEPAGE_DESCRIPTION_FAILBACK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the storage repositories (SRs) containing the VM configuration data for the VMs and vApps that you want to fail over. If you know which SRs contain your VMs&apos; disks, you can also include them now. ähnelt.
        /// </summary>
        public static string DR_WIZARD_STORAGEPAGE_DESCRIPTION_FAILOVER {
            get {
                return ResourceManager.GetString("DR_WIZARD_STORAGEPAGE_DESCRIPTION_FAILOVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No Storage Repositories were found ähnelt.
        /// </summary>
        public static string DR_WIZARD_STORAGEPAGE_SCAN_RESULT_NONE {
            get {
                return ResourceManager.GetString("DR_WIZARD_STORAGEPAGE_SCAN_RESULT_NONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The following Storage Repositories were found: 
        /// ähnelt.
        /// </summary>
        public static string DR_WIZARD_STORAGEPAGE_SCAN_RESULT_TITLE {
            get {
                return ResourceManager.GetString("DR_WIZARD_STORAGEPAGE_SCAN_RESULT_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Locate Mirrored SRs ähnelt.
        /// </summary>
        public static string DR_WIZARD_STORAGEPAGE_TEXT {
            get {
                return ResourceManager.GetString("DR_WIZARD_STORAGEPAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Locate the storage repositories where your recovery data is stored ähnelt.
        /// </summary>
        public static string DR_WIZARD_STORAGEPAGE_TITLE {
            get {
                return ResourceManager.GetString("DR_WIZARD_STORAGEPAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VM &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string DR_WIZARD_VM_CHECK_DESCRIPTION {
            get {
                return ResourceManager.GetString("DR_WIZARD_VM_CHECK_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Already exists on pool {0}. It will be replaced. ähnelt.
        /// </summary>
        public static string DR_WIZARD_WARNING_EXISTING_VM {
            get {
                return ResourceManager.GetString("DR_WIZARD_WARNING_EXISTING_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Welcome ähnelt.
        /// </summary>
        public static string DR_WIZARD_WELCOMEPAGE_TEXT {
            get {
                return ResourceManager.GetString("DR_WIZARD_WELCOMEPAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die What do you want to do? ähnelt.
        /// </summary>
        public static string DR_WIZARD_WELCOMEPAGE_TITLE {
            get {
                return ResourceManager.GetString("DR_WIZARD_WELCOMEPAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dell supplemental pack is not installed. ähnelt.
        /// </summary>
        public static string DRAC_NO_SUPP_PACK {
            get {
                return ResourceManager.GetString("DRAC_NO_SUPP_PACK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DRAC power on failed. Check your credentials and connectivity. ähnelt.
        /// </summary>
        public static string DRAC_POWERON_FAILED {
            get {
                return ResourceManager.GetString("DRAC_POWERON_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot migrate this VM while a local CD is loaded.
        ///Eject the CD and try again. ähnelt.
        /// </summary>
        public static string DRAG_DROP_LOCAL_CD_LOADED {
            get {
                return ResourceManager.GetString("DRAG_DROP_LOCAL_CD_LOADED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot Migrate VM ähnelt.
        /// </summary>
        public static string DRAG_DROP_LOCAL_CD_LOADED_TITLE {
            get {
                return ResourceManager.GetString("DRAG_DROP_LOCAL_CD_LOADED_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Duplex ähnelt.
        /// </summary>
        public static string DUPLEX {
            get {
                return ResourceManager.GetString("DUPLEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DVD drive ähnelt.
        /// </summary>
        public static string DVD_DRIVE {
            get {
                return ResourceManager.GetString("DVD_DRIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DVD Drive {0}: ähnelt.
        /// </summary>
        public static string DVD_DRIVE_LABEL_NUMBERED {
            get {
                return ResourceManager.GetString("DVD_DRIVE_LABEL_NUMBERED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum memory ähnelt.
        /// </summary>
        public static string DYNAMIC_MAX {
            get {
                return ResourceManager.GetString("DYNAMIC_MAX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ma&amp;ximum memory ähnelt.
        /// </summary>
        public static string DYNAMIC_MAX_AMP {
            get {
                return ResourceManager.GetString("DYNAMIC_MAX_AMP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ma&amp;ximum memory: ähnelt.
        /// </summary>
        public static string DYNAMIC_MAX_COLON {
            get {
                return ResourceManager.GetString("DYNAMIC_MAX_COLON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Memory ähnelt.
        /// </summary>
        public static string DYNAMIC_MEMORY_CONTROL {
            get {
                return ResourceManager.GetString("DYNAMIC_MEMORY_CONTROL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;{0}   {1} ähnelt.
        /// </summary>
        public static string DYNAMIC_MENUITEM_WITH_ACCESS_KEY {
            get {
                return ResourceManager.GetString("DYNAMIC_MENUITEM_WITH_ACCESS_KEY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die      {0} ähnelt.
        /// </summary>
        public static string DYNAMIC_MENUITEM_WITHOUT_ACCESS_KEY {
            get {
                return ResourceManager.GetString("DYNAMIC_MENUITEM_WITHOUT_ACCESS_KEY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Minimum memory ähnelt.
        /// </summary>
        public static string DYNAMIC_MIN {
            get {
                return ResourceManager.GetString("DYNAMIC_MIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Minimum memory ähnelt.
        /// </summary>
        public static string DYNAMIC_MIN_AMP {
            get {
                return ResourceManager.GetString("DYNAMIC_MIN_AMP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Minimum memory: ähnelt.
        /// </summary>
        public static string DYNAMIC_MIN_COLON {
            get {
                return ResourceManager.GetString("DYNAMIC_MIN_COLON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die P&amp;roperties ähnelt.
        /// </summary>
        public static string EDIT {
            get {
                return ResourceManager.GetString("EDIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Edit Disk ähnelt.
        /// </summary>
        public static string EDIT_DISK {
            get {
                return ResourceManager.GetString("EDIT_DISK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die If you want this network to be automatically added to new VMs, check the box below. ähnelt.
        /// </summary>
        public static string EDIT_NETWORK_BLURB_PHYSICAL {
            get {
                return ResourceManager.GetString("EDIT_NETWORK_BLURB_PHYSICAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die If you want this network to be automatically added to new VMs, check the box below. You can also set whether you want the network to be internal only, or assign it a VLAN and NIC. ähnelt.
        /// </summary>
        public static string EDIT_NETWORK_BLURB_VIRTUAL {
            get {
                return ResourceManager.GetString("EDIT_NETWORK_BLURB_VIRTUAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This will change the device position of one of this VM&apos;s system disks and may leave the VM unbootable. Are you sure you want to continue? ähnelt.
        /// </summary>
        public static string EDIT_SYS_DISK_WARNING {
            get {
                return ResourceManager.GetString("EDIT_SYS_DISK_WARNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Edit Storage Settings ähnelt.
        /// </summary>
        public static string EDIT_SYS_DISK_WARNING_TITLE {
            get {
                return ResourceManager.GetString("EDIT_SYS_DISK_WARNING_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die It may not be possible to start the selected VMs as they are using ISOs from an SR which is unavailable.
        ///
        ///Would you like to eject these ISOs before continuing? ähnelt.
        /// </summary>
        public static string EJECT_BEFORE_VM_START_MESSAGE_BOX {
            get {
                return ResourceManager.GetString("EJECT_BEFORE_VM_START_MESSAGE_BOX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Eject ähnelt.
        /// </summary>
        public static string EJECT_BUTTON_LABEL {
            get {
                return ResourceManager.GetString("EJECT_BUTTON_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Eject CD ähnelt.
        /// </summary>
        public static string EJECT_CD {
            get {
                return ResourceManager.GetString("EJECT_CD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please eject your CD ähnelt.
        /// </summary>
        public static string EJECT_YOUR_CD {
            get {
                return ResourceManager.GetString("EJECT_YOUR_CD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ... ähnelt.
        /// </summary>
        public static string ELLIPSIS {
            get {
                return ResourceManager.GetString("ELLIPSIS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Email Alerts ähnelt.
        /// </summary>
        public static string EMAIL_ALERTS {
            get {
                return ResourceManager.GetString("EMAIL_ALERTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure email notification for policy alerts ähnelt.
        /// </summary>
        public static string EMAIL_ALERTS_TITLE {
            get {
                return ResourceManager.GetString("EMAIL_ALERTS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Email Options ähnelt.
        /// </summary>
        public static string EMAIL_OPTIONS {
            get {
                return ResourceManager.GetString("EMAIL_OPTIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;empty&gt; ähnelt.
        /// </summary>
        public static string EMPTY {
            get {
                return ResourceManager.GetString("EMPTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There are no associated virtual disks or snapshots ähnelt.
        /// </summary>
        public static string EMPTY_LIST_DISK_SNAPSHOTS {
            get {
                return ResourceManager.GetString("EMPTY_LIST_DISK_SNAPSHOTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ena&amp;ble ähnelt.
        /// </summary>
        public static string ENABLE {
            get {
                return ResourceManager.GetString("ENABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Enable HA... ähnelt.
        /// </summary>
        public static string ENABLE_HA_ELLIPSIS {
            get {
                return ResourceManager.GetString("ENABLE_HA_ELLIPSIS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enable ähnelt.
        /// </summary>
        public static string ENABLE_PLAIN {
            get {
                return ResourceManager.GetString("ENABLE_PLAIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die E&amp;nable PVS-Accelerator... ähnelt.
        /// </summary>
        public static string ENABLE_PVS_READ_CACHING_BUTTON {
            get {
                return ResourceManager.GetString("ENABLE_PVS_READ_CACHING_BUTTON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ena&amp;ble PVS-Accelerator... ähnelt.
        /// </summary>
        public static string ENABLE_PVS_READ_CACHING_MENU {
            get {
                return ResourceManager.GetString("ENABLE_PVS_READ_CACHING_MENU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose the PVS site from which the selected VMs are streamed. ähnelt.
        /// </summary>
        public static string ENABLE_PVS_READ_CACHING_RUBRIC_MULTIPLE {
            get {
                return ResourceManager.GetString("ENABLE_PVS_READ_CACHING_RUBRIC_MULTIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose the PVS site from which the selected VM is streamed. ähnelt.
        /// </summary>
        public static string ENABLE_PVS_READ_CACHING_RUBRIC_SINGLE {
            get {
                return ResourceManager.GetString("ENABLE_PVS_READ_CACHING_RUBRIC_SINGLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Res&amp;ume ähnelt.
        /// </summary>
        public static string ENABLE_WLB_ELLIPSIS {
            get {
                return ResourceManager.GetString("ENABLE_WLB_ELLIPSIS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enabled ähnelt.
        /// </summary>
        public static string ENABLED {
            get {
                return ResourceManager.GetString("ENABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Snapshot schedule &apos;{0}&apos; enabled. ähnelt.
        /// </summary>
        public static string ENABLED_VMSS {
            get {
                return ResourceManager.GetString("ENABLED_VMSS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enabling ähnelt.
        /// </summary>
        public static string ENABLING {
            get {
                return ResourceManager.GetString("ENABLING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enabling Active Directory Authentication ähnelt.
        /// </summary>
        public static string ENABLING_AD {
            get {
                return ResourceManager.GetString("ENABLING_AD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enabling Active Directory Authentication on pool &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ENABLING_AD_ON {
            get {
                return ResourceManager.GetString("ENABLING_AD_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enabling HA ähnelt.
        /// </summary>
        public static string ENABLING_HA {
            get {
                return ResourceManager.GetString("ENABLING_HA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enabling HA on pool &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ENABLING_HA_ON {
            get {
                return ResourceManager.GetString("ENABLING_HA_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enabling snapshot schedule &apos;{0}&apos;... ähnelt.
        /// </summary>
        public static string ENABLING_VMSS {
            get {
                return ResourceManager.GetString("ENABLING_VMSS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resuming Workload Balancing  ähnelt.
        /// </summary>
        public static string ENABLING_WLB {
            get {
                return ResourceManager.GetString("ENABLING_WLB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resuming Workload Balancing on pool &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ENABLING_WLB_ON {
            get {
                return ResourceManager.GetString("ENABLING_WLB_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encrypting appliance files... ähnelt.
        /// </summary>
        public static string ENCRYPTING_FILES {
            get {
                return ResourceManager.GetString("ENCRYPTING_FILES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ends with ähnelt.
        /// </summary>
        public static string ENDS_WITH {
            get {
                return ResourceManager.GetString("ENDS_WITH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter &amp;Maintenance Mode... ähnelt.
        /// </summary>
        public static string ENTER_MAINTENANCE_MODE {
            get {
                return ResourceManager.GetString("ENTER_MAINTENANCE_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Enter Maintenance Mode... ähnelt.
        /// </summary>
        public static string ENTER_MAINTENANCE_MODE_CONTEXT_MENU {
            get {
                return ResourceManager.GetString("ENTER_MAINTENANCE_MODE_CONTEXT_MENU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die To access your saved session it is required that you enter the master password when starting [XenCenter] ähnelt.
        /// </summary>
        public static string ENTER_MASTER_PASSWORD_TO_ACCESS_SETTINGS_TT {
            get {
                return ResourceManager.GetString("ENTER_MASTER_PASSWORD_TO_ACCESS_SETTINGS_TT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The value for your QoS limit needs to be greater than zero ähnelt.
        /// </summary>
        public static string ENTER_VALID_QOS {
            get {
                return ResourceManager.GetString("ENTER_VALID_QOS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer] &amp;Enterprise Per-Socket ({0} required) ähnelt.
        /// </summary>
        public static string ENTERPRISE_PERSOCKET_LICENSES_X_REQUIRED {
            get {
                return ResourceManager.GetString("ENTERPRISE_PERSOCKET_LICENSES_X_REQUIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Members ähnelt.
        /// </summary>
        public static string EQUALLOGICS_MEMBERS {
            get {
                return ResourceManager.GetString("EQUALLOGICS_MEMBERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error importing server list. Check that the xml format in the file is correct. ähnelt.
        /// </summary>
        public static string ERRO_IMPORTING_SERVER_LIST {
            get {
                return ResourceManager.GetString("ERRO_IMPORTING_SERVER_LIST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error ähnelt.
        /// </summary>
        public static string ERROR {
            get {
                return ResourceManager.GetString("ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The following virtual disks could not be activated: ähnelt.
        /// </summary>
        public static string ERROR_ACTIVATING_VDIS_MESSAGE {
            get {
                return ResourceManager.GetString("ERROR_ACTIVATING_VDIS_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error Activating Virtual Disks ähnelt.
        /// </summary>
        public static string ERROR_ACTIVATING_VDIS_TITLE {
            get {
                return ResourceManager.GetString("ERROR_ACTIVATING_VDIS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die User name and password mismatch. ähnelt.
        /// </summary>
        public static string ERROR_AUTHENTICATION {
            get {
                return ResourceManager.GetString("ERROR_AUTHENTICATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenCenter] has encountered a problem connecting to this server. ähnelt.
        /// </summary>
        public static string ERROR_CONNECTING_BLURB {
            get {
                return ResourceManager.GetString("ERROR_CONNECTING_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The following virtual disks could not be deactivated: ähnelt.
        /// </summary>
        public static string ERROR_DEACTIVATING_MULTIPLE_VDIS_MESSAGE {
            get {
                return ResourceManager.GetString("ERROR_DEACTIVATING_MULTIPLE_VDIS_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error Deactivating Virtual Disks ähnelt.
        /// </summary>
        public static string ERROR_DEACTIVATING_MULTIPLE_VDIS_TITLE {
            get {
                return ResourceManager.GetString("ERROR_DEACTIVATING_MULTIPLE_VDIS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The following storage could not be destroyed: ähnelt.
        /// </summary>
        public static string ERROR_DESTROYING_STORAGE_ITEMS_MESSAGE {
            get {
                return ResourceManager.GetString("ERROR_DESTROYING_STORAGE_ITEMS_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error Destroying Storage Items ähnelt.
        /// </summary>
        public static string ERROR_DESTROYING_STORAGE_ITEMS_TITLE {
            get {
                return ResourceManager.GetString("ERROR_DESTROYING_STORAGE_ITEMS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The following virtual disks could not be detached: ähnelt.
        /// </summary>
        public static string ERROR_DETACHING_VDIS_MESSAGE {
            get {
                return ResourceManager.GetString("ERROR_DETACHING_VDIS_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error Detaching Virtual Disks ähnelt.
        /// </summary>
        public static string ERROR_DETACHING_VDIS_TITLE {
            get {
                return ResourceManager.GetString("ERROR_DETACHING_VDIS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The following servers could not be added to the pool &apos;{0}&apos;: ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_ADD_TO_POOL_TEXT {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_ADD_TO_POOL_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error Adding Server to Pool ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_ADD_TO_POOL_TITLE {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_ADD_TO_POOL_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The following templates could not be deleted: ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_DELETE_TEMPLATE_TEXT {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_DELETE_TEMPLATE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error Deleting Template ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_DELETE_TEMPLATE_TITLE {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_DELETE_TEMPLATE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The following items could not be deleted: ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_DELETE_VM_OR_TEMPLATE_TEXT {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_DELETE_VM_OR_TEMPLATE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error Deleting Items ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_DELETE_VM_OR_TEMPLATE_TITLE {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_DELETE_VM_OR_TEMPLATE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The following VMs could not be deleted: ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_DELETE_VM_TEXT {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_DELETE_VM_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error Deleting VM ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_DELETE_VM_TITLE {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_DELETE_VM_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The following storage repositories could not be destroyed: ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_DESTROY_SR_TEXT {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_DESTROY_SR_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error Destroying Storage Repository ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_DESTROY_SR_TITLE {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_DESTROY_SR_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The following storage repositories could not be detached: ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_DETACH_SR_TEXT {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_DETACH_SR_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error Detaching Storage Repository ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_DETACH_SR_TITLE {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_DETACH_SR_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The following VMs could not be forced to reboot: ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_FORCE_REBOOT_VM_TEXT {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_FORCE_REBOOT_VM_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error Forcing VM Reboot ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_FORCE_REBOOT_VM_TITLE {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_FORCE_REBOOT_VM_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The following VMs could not be forced to shut down: ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_FORCE_SHUTDOWN_VM_TEXT {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_FORCE_SHUTDOWN_VM_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error Shutting Down VM ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_FORCE_SHUTDOWN_VM_TITLE {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_FORCE_SHUTDOWN_VM_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There were errors while forgetting the following storage repositories: ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_FORGET_SR_TEXT {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_FORGET_SR_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error Forgetting Storage Repository ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_FORGET_SR_TITLE {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_FORGET_SR_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The following VMs could not be migrated to the selected server: ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_MIGRATE_TEXT {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_MIGRATE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error Migrating VM to Server ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_MIGRATE_TITLE {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_MIGRATE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The following servers could not be powered on: ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_POWER_ON_HOST_TEXT {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_POWER_ON_HOST_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error Powering On Server ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_POWER_ON_HOST_TITLE {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_POWER_ON_HOST_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The following servers could not be rebooted: ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_REBOOT_HOST_TEXT {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_REBOOT_HOST_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error Rebooting Server ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_REBOOT_HOST_TITLE {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_REBOOT_HOST_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The following VMs could not be rebooted: ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_REBOOT_VM_TEXT {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_REBOOT_VM_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error Rebooting VM ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_REBOOT_VM_TITLE {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_REBOOT_VM_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The following VMs could not be resumed on the selected server: ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_RESUME_ON_TEXT {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_RESUME_ON_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error Resuming VM on Server ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_RESUME_ON_TITLE {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_RESUME_ON_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The following Vms could not be resumed: ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_RESUME_VM_TEXT {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_RESUME_VM_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error Resuming VM ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_RESUME_VM_TITLE {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_RESUME_VM_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The following servers could not be shut down: ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_SHUTDOWN_HOST_TEXT {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_SHUTDOWN_HOST_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error Shutting Down Server ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_SHUTDOWN_HOST_TITLE {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_SHUTDOWN_HOST_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error Shutting Down VM ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_SHUTDOWN_VM_TITLE {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_SHUTDOWN_VM_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The following VMs could not be shut down: ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_SHUTDOWN_VMS_TITLE {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_SHUTDOWN_VMS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The following VMs could not be started on the selected server: ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_START_ON_TEXT {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_START_ON_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error Starting VM on Server ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_START_ON_TITLE {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_START_ON_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There were no servers available to start VM &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_START_VM_TEXT {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_START_VM_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error Starting VM ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_START_VM_TITLE {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_START_VM_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The following VMs could not be suspended: ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_SUSPEND_VM_TEXT {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_SUSPEND_VM_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error Suspending VM ähnelt.
        /// </summary>
        public static string ERROR_DIALOG_SUSPEND_VM_TITLE {
            get {
                return ResourceManager.GetString("ERROR_DIALOG_SUSPEND_VM_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die File {0} not found ähnelt.
        /// </summary>
        public static string ERROR_FILE_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_FILE_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer] is still booting. ähnelt.
        /// </summary>
        public static string ERROR_HOST_STILL_BOOTING {
            get {
                return ResourceManager.GetString("ERROR_HOST_STILL_BOOTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Gateway is invalid. ähnelt.
        /// </summary>
        public static string ERROR_INVALID_GATEWAY {
            get {
                return ResourceManager.GetString("ERROR_INVALID_GATEWAY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IP address is invalid ähnelt.
        /// </summary>
        public static string ERROR_INVALID_IP {
            get {
                return ResourceManager.GetString("ERROR_INVALID_IP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Subnet mask is invalid. ähnelt.
        /// </summary>
        public static string ERROR_INVALID_MASK {
            get {
                return ResourceManager.GetString("ERROR_INVALID_MASK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; is not a valid URI ähnelt.
        /// </summary>
        public static string ERROR_INVALID_URI {
            get {
                return ResourceManager.GetString("ERROR_INVALID_URI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are not authorized to access this server. ähnelt.
        /// </summary>
        public static string ERROR_NO_PERMISSION {
            get {
                return ResourceManager.GetString("ERROR_NO_PERMISSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not find [XenServer] on &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string ERROR_NO_XENSERVER {
            get {
                return ResourceManager.GetString("ERROR_NO_XENSERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The server &apos;{0}&apos; could not be found. ähnelt.
        /// </summary>
        public static string ERROR_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error preparing host ähnelt.
        /// </summary>
        public static string ERROR_PREPARING_HOST {
            get {
                return ResourceManager.GetString("ERROR_PREPARING_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not authenticate to proxy server on &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string ERROR_PROXY_AUTHENTICATION {
            get {
                return ResourceManager.GetString("ERROR_PROXY_AUTHENTICATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenCenter] has encountered a problem launching PuTTY. ähnelt.
        /// </summary>
        public static string ERROR_PUTTY_LAUNCHING {
            get {
                return ResourceManager.GetString("ERROR_PUTTY_LAUNCHING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not create SSL/TLS secure channel. ähnelt.
        /// </summary>
        public static string ERROR_SECURE_CHANNEL_FAILURE {
            get {
                return ResourceManager.GetString("ERROR_SECURE_CHANNEL_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An unknown error occurred. ähnelt.
        /// </summary>
        public static string ERROR_UNKNOWN {
            get {
                return ResourceManager.GetString("ERROR_UNKNOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown file type. ähnelt.
        /// </summary>
        public static string ERROR_UNSUPPORTED_FILE_TYPE {
            get {
                return ResourceManager.GetString("ERROR_UNSUPPORTED_FILE_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die EULA ähnelt.
        /// </summary>
        public static string EULA {
            get {
                return ResourceManager.GetString("EULA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die EULAs ähnelt.
        /// </summary>
        public static string EULAS {
            get {
                return ResourceManager.GetString("EULAS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter Maintenance Mode - {0} ähnelt.
        /// </summary>
        public static string EVACUATE_HOST_DIALOG_TITLE {
            get {
                return ResourceManager.GetString("EVACUATE_HOST_DIALOG_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} Eject the CD ähnelt.
        /// </summary>
        public static string EVACUATE_HOST_EJECT_CD_PROMPT {
            get {
                return ResourceManager.GetString("EVACUATE_HOST_EJECT_CD_PROMPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} Install Management Agent ähnelt.
        /// </summary>
        public static string EVACUATE_HOST_INSTALL_MGMNT_PROMPT {
            get {
                return ResourceManager.GetString("EVACUATE_HOST_INSTALL_MGMNT_PROMPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} Install [XenServer product] Tools ähnelt.
        /// </summary>
        public static string EVACUATE_HOST_INSTALL_TOOLS_PROMPT {
            get {
                return ResourceManager.GetString("EVACUATE_HOST_INSTALL_TOOLS_PROMPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This VM uses a local CD. ähnelt.
        /// </summary>
        public static string EVACUATE_HOST_LOCAL_CD {
            get {
                return ResourceManager.GetString("EVACUATE_HOST_LOCAL_CD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This VM uses local storage. ähnelt.
        /// </summary>
        public static string EVACUATE_HOST_LOCAL_STORAGE {
            get {
                return ResourceManager.GetString("EVACUATE_HOST_LOCAL_STORAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There are no other servers available in the pool to migrate the running VMs to.  Please suspend the VMs instead. ähnelt.
        /// </summary>
        public static string EVACUATE_HOST_NO_OTHER_HOSTS {
            get {
                return ResourceManager.GetString("EVACUATE_HOST_NO_OTHER_HOSTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No servers available ähnelt.
        /// </summary>
        public static string EVACUATE_HOST_NO_OTHER_HOSTS_TITLE {
            get {
                return ResourceManager.GetString("EVACUATE_HOST_NO_OTHER_HOSTS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There is not enough free memory available on the other servers in the pool to migrate all the running VMs off this server. Please suspend some of the VMs ähnelt.
        /// </summary>
        public static string EVACUATE_HOST_NOT_ENOUGH_MEMORY {
            get {
                return ResourceManager.GetString("EVACUATE_HOST_NOT_ENOUGH_MEMORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not enough memory ähnelt.
        /// </summary>
        public static string EVACUATE_HOST_NOT_ENOUGH_MEMORY_TITLE {
            get {
                return ResourceManager.GetString("EVACUATE_HOST_NOT_ENOUGH_MEMORY_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} Shut down the VM ähnelt.
        /// </summary>
        public static string EVACUATE_HOST_SHUTDOWN_VM_PROMPT {
            get {
                return ResourceManager.GetString("EVACUATE_HOST_SHUTDOWN_VM_PROMPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} Suspend the VM ähnelt.
        /// </summary>
        public static string EVACUATE_HOST_SUSPEND_VM_PROMPT {
            get {
                return ResourceManager.GetString("EVACUATE_HOST_SUSPEND_VM_PROMPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Action in progress... ähnelt.
        /// </summary>
        public static string EVACUATE_SOLUTION_IN_PROGRESS {
            get {
                return ResourceManager.GetString("EVACUATE_SOLUTION_IN_PROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die exactly matches ähnelt.
        /// </summary>
        public static string EXACT_MATCH {
            get {
                return ResourceManager.GetString("EXACT_MATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example: {0} ähnelt.
        /// </summary>
        public static string EXAMPLE {
            get {
                return ResourceManager.GetString("EXAMPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A general exception has occurred. ähnelt.
        /// </summary>
        public static string EXCEPTION_GENERAL {
            get {
                return ResourceManager.GetString("EXCEPTION_GENERAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Canceled ähnelt.
        /// </summary>
        public static string EXCEPTION_USER_CANCELLED {
            get {
                return ResourceManager.GetString("EXCEPTION_USER_CANCELLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die User canceled. Master needs to be upgraded first. ähnelt.
        /// </summary>
        public static string EXCEPTION_USER_CANCELLED_MASTER {
            get {
                return ResourceManager.GetString("EXCEPTION_USER_CANCELLED_MASTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exit &amp;Maintenance Mode ähnelt.
        /// </summary>
        public static string EXIT_MAINTENANCE_MODE {
            get {
                return ResourceManager.GetString("EXIT_MAINTENANCE_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Exit Maintenance Mode ähnelt.
        /// </summary>
        public static string EXIT_MAINTENANCE_MODE_CONTEXT_MENU {
            get {
                return ResourceManager.GetString("EXIT_MAINTENANCE_MODE_CONTEXT_MENU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you want to have the following VMs automatically migrated back to, resumed on or started on this server?
        ///{0} ähnelt.
        /// </summary>
        public static string EXIT_MAINTENANCE_MODE_PROMPT {
            get {
                return ResourceManager.GetString("EXIT_MAINTENANCE_MODE_PROMPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exit {0} from maintenance mode ähnelt.
        /// </summary>
        public static string EXIT_SERVER_FROM_MAINTENANCE_MODE {
            get {
                return ResourceManager.GetString("EXIT_SERVER_FROM_MAINTENANCE_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die E&amp;xpand All ähnelt.
        /// </summary>
        public static string EXPAND_ALL {
            get {
                return ResourceManager.GetString("EXPAND_ALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export All ähnelt.
        /// </summary>
        public static string EXPORT_ALL {
            get {
                return ResourceManager.GetString("EXPORT_ALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export OVF/OVA Package ähnelt.
        /// </summary>
        public static string EXPORT_APPLIANCE {
            get {
                return ResourceManager.GetString("EXPORT_APPLIANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Appliance already exists, please select a new destination. ähnelt.
        /// </summary>
        public static string EXPORT_APPLIANCE_PAGE_ERROR_APP_EXISTS {
            get {
                return ResourceManager.GetString("EXPORT_APPLIANCE_PAGE_ERROR_APP_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Appliance name is invalid. ähnelt.
        /// </summary>
        public static string EXPORT_APPLIANCE_PAGE_ERROR_INALID_APP {
            get {
                return ResourceManager.GetString("EXPORT_APPLIANCE_PAGE_ERROR_INALID_APP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Destination directory is invalid. ähnelt.
        /// </summary>
        public static string EXPORT_APPLIANCE_PAGE_ERROR_INVALID_DIR {
            get {
                return ResourceManager.GetString("EXPORT_APPLIANCE_PAGE_ERROR_INVALID_DIR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Destination directory does not exist. ähnelt.
        /// </summary>
        public static string EXPORT_APPLIANCE_PAGE_ERROR_NON_EXIST_DIR {
            get {
                return ResourceManager.GetString("EXPORT_APPLIANCE_PAGE_ERROR_NON_EXIST_DIR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You do not have write permission on the destination directory. ähnelt.
        /// </summary>
        public static string EXPORT_APPLIANCE_PAGE_ERROR_PERMISSIONS {
            get {
                return ResourceManager.GetString("EXPORT_APPLIANCE_PAGE_ERROR_PERMISSIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die OVF/OVA Package (*.ovf, *.ova) ähnelt.
        /// </summary>
        public static string EXPORT_APPLIANCE_PAGE_FORMAT_OVFOVA {
            get {
                return ResourceManager.GetString("EXPORT_APPLIANCE_PAGE_FORMAT_OVFOVA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die XVA File (*.xva) ähnelt.
        /// </summary>
        public static string EXPORT_APPLIANCE_PAGE_FORMAT_XVA {
            get {
                return ResourceManager.GetString("EXPORT_APPLIANCE_PAGE_FORMAT_XVA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export File Details ähnelt.
        /// </summary>
        public static string EXPORT_APPLIANCE_PAGE_TEXT {
            get {
                return ResourceManager.GetString("EXPORT_APPLIANCE_PAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose the VM export format, location and filename. ähnelt.
        /// </summary>
        public static string EXPORT_APPLIANCE_PAGE_TITLE {
            get {
                return ResourceManager.GetString("EXPORT_APPLIANCE_PAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export to File... ähnelt.
        /// </summary>
        public static string EXPORT_AS_BACKUP {
            get {
                return ResourceManager.GetString("EXPORT_AS_BACKUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The maximum number of EULAs that can be included in the appliance is {0}. Selected EULA documents exceeding this number will not be added to the appliance. Click OK to proceed or Cancel to go back and change you selection. ähnelt.
        /// </summary>
        public static string EXPORT_EULA_PAGE_FILE_LIMIT_WARNING {
            get {
                return ResourceManager.GetString("EXPORT_EULA_PAGE_FILE_LIMIT_WARNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum number of EULAs exceeded ähnelt.
        /// </summary>
        public static string EXPORT_EULA_PAGE_FILE_LIMIT_WARNING_CAPTION {
            get {
                return ResourceManager.GetString("EXPORT_EULA_PAGE_FILE_LIMIT_WARNING_CAPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Normal text file (*.txt)|*.txt|Rich text file (*.rtf)|*.rtf ähnelt.
        /// </summary>
        public static string EXPORT_EULA_PAGE_FILETYPES {
            get {
                return ResourceManager.GetString("EXPORT_EULA_PAGE_FILETYPES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} is not a valid EULA document. ähnelt.
        /// </summary>
        public static string EXPORT_EULA_PAGE_INVALID_FILE {
            get {
                return ResourceManager.GetString("EXPORT_EULA_PAGE_INVALID_FILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Optionally, include EULAs in the OVF/OVA package ähnelt.
        /// </summary>
        public static string EXPORT_EULA_PAGE_TITLE {
            get {
                return ResourceManager.GetString("EXPORT_EULA_PAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum number of EULAs  ({0}) has been reached. ähnelt.
        /// </summary>
        public static string EXPORT_EULA_PAGE_TOOLTIP {
            get {
                return ResourceManager.GetString("EXPORT_EULA_PAGE_TOOLTIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Advanced Options ähnelt.
        /// </summary>
        public static string EXPORT_OPTIONS_PAGE_TEXT {
            get {
                return ResourceManager.GetString("EXPORT_OPTIONS_PAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the manifest, signing and output file format options you want ähnelt.
        /// </summary>
        public static string EXPORT_OPTIONS_PAGE_TITLE {
            get {
                return ResourceManager.GetString("EXPORT_OPTIONS_PAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export OVA package &apos;{0}&apos; from &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string EXPORT_OVA_PACKAGE {
            get {
                return ResourceManager.GetString("EXPORT_OVA_PACKAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export OVF package &apos;{0}&apos; from &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string EXPORT_OVF_PACKAGE {
            get {
                return ResourceManager.GetString("EXPORT_OVF_PACKAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Certificate file does not exist. ähnelt.
        /// </summary>
        public static string EXPORT_SECURITY_PAGE_ERROR_CERT_NON_EXIST {
            get {
                return ResourceManager.GetString("EXPORT_SECURITY_PAGE_ERROR_CERT_NON_EXIST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The certificate is invalid. ähnelt.
        /// </summary>
        public static string EXPORT_SECURITY_PAGE_ERROR_CERTIFICATE_INVALID {
            get {
                return ResourceManager.GetString("EXPORT_SECURITY_PAGE_ERROR_CERTIFICATE_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Certificate path is invalid. ähnelt.
        /// </summary>
        public static string EXPORT_SECURITY_PAGE_ERROR_INVALID_CERT {
            get {
                return ResourceManager.GetString("EXPORT_SECURITY_PAGE_ERROR_INVALID_CERT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The certificate is invalid or the private key&apos;s password is incorrect. ähnelt.
        /// </summary>
        public static string EXPORT_SECURITY_PAGE_ERROR_SIGN_INVALID {
            get {
                return ResourceManager.GetString("EXPORT_SECURITY_PAGE_ERROR_SIGN_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Personal Certificate Files (*.pfx) |*.pfx ähnelt.
        /// </summary>
        public static string EXPORT_SECURITY_PAGE_FILETYPES {
            get {
                return ResourceManager.GetString("EXPORT_SECURITY_PAGE_FILETYPES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Security ähnelt.
        /// </summary>
        public static string EXPORT_SECURITY_PAGE_TEXT {
            get {
                return ResourceManager.GetString("EXPORT_SECURITY_PAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select security options ähnelt.
        /// </summary>
        public static string EXPORT_SECURITY_PAGE_TITLE {
            get {
                return ResourceManager.GetString("EXPORT_SECURITY_PAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Target destination has only {0} of free space and you need at least {1} to export the selected VMs. ähnelt.
        /// </summary>
        public static string EXPORT_SELECTVMS_PAGE_ERROR_TARGET_SPACE_NOT_ENOUGH {
            get {
                return ResourceManager.GetString("EXPORT_SELECTVMS_PAGE_ERROR_TARGET_SPACE_NOT_ENOUGH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Virtual Machines ähnelt.
        /// </summary>
        public static string EXPORT_SELECTVMS_PAGE_TEXT {
            get {
                return ResourceManager.GetString("EXPORT_SELECTVMS_PAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Confirm which VMs to include in the OVF/OVA package ähnelt.
        /// </summary>
        public static string EXPORT_SELECTVMS_PAGE_TITLE_OVF {
            get {
                return ResourceManager.GetString("EXPORT_SELECTVMS_PAGE_TITLE_OVF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Confirm which VM to export ähnelt.
        /// </summary>
        public static string EXPORT_SELECTVMS_PAGE_TITLE_XVA {
            get {
                return ResourceManager.GetString("EXPORT_SELECTVMS_PAGE_TITLE_XVA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Export Snapshot As Template... ähnelt.
        /// </summary>
        public static string EXPORT_SNAPSHOT_AS_TEMPLATE_MENU_ITEM {
            get {
                return ResourceManager.GetString("EXPORT_SNAPSHOT_AS_TEMPLATE_MENU_ITEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export system alerts to {0} ähnelt.
        /// </summary>
        public static string EXPORT_SYSTEM_ALERTS {
            get {
                return ResourceManager.GetString("EXPORT_SYSTEM_ALERTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exported updates to {0} ähnelt.
        /// </summary>
        public static string EXPORT_UPDATES {
            get {
                return ResourceManager.GetString("EXPORT_UPDATES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export VM &apos;{0}&apos; from &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string EXPORT_VM_TITLE {
            get {
                return ResourceManager.GetString("EXPORT_VM_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Verify export on completion ähnelt.
        /// </summary>
        public static string EXPORT_VM_VERIFY_POST_INSTALL {
            get {
                return ResourceManager.GetString("EXPORT_VM_VERIFY_POST_INSTALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exported system alerts to {0} ähnelt.
        /// </summary>
        public static string EXPORTED_SYSTEM_ALERTS {
            get {
                return ResourceManager.GetString("EXPORTED_SYSTEM_ALERTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exported updates to {0}. ähnelt.
        /// </summary>
        public static string EXPORTED_UPDATES {
            get {
                return ResourceManager.GetString("EXPORTED_UPDATES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exporting ähnelt.
        /// </summary>
        public static string EXPORTING {
            get {
                return ResourceManager.GetString("EXPORTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exporting system alerts to {0}... ähnelt.
        /// </summary>
        public static string EXPORTING_SYSTEM_ALERTS {
            get {
                return ResourceManager.GetString("EXPORTING_SYSTEM_ALERTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exporting updates to {0}... ähnelt.
        /// </summary>
        public static string EXPORTING_UPDATES {
            get {
                return ResourceManager.GetString("EXPORTING_UPDATES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exporting VMs... ähnelt.
        /// </summary>
        public static string EXPORTING_VMS {
            get {
                return ResourceManager.GetString("EXPORTING_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Couldn&apos;t show file open dialog - {0} ähnelt.
        /// </summary>
        public static string EXPORTVM_COULD_NOT_SHOW {
            get {
                return ResourceManager.GetString("EXPORTVM_COULD_NOT_SHOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Should not happen ähnelt.
        /// </summary>
        public static string EXPORTVM_NOT_HAPPEN {
            get {
                return ResourceManager.GetString("EXPORTVM_NOT_HAPPEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die External network ähnelt.
        /// </summary>
        public static string EXTERNAL_NETWORK {
            get {
                return ResourceManager.GetString("EXTERNAL_NETWORK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die External command exited with Exit Code: {0} ähnelt.
        /// </summary>
        public static string EXTERNAL_PLUGIN_BAD_EXIT {
            get {
                return ResourceManager.GetString("EXTERNAL_PLUGIN_BAD_EXIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Plugin finished running ähnelt.
        /// </summary>
        public static string EXTERNAL_PLUGIN_FINISHED {
            get {
                return ResourceManager.GetString("EXTERNAL_PLUGIN_FINISHED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Running &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string EXTERNAL_PLUGIN_RUNNING {
            get {
                return ResourceManager.GetString("EXTERNAL_PLUGIN_RUNNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Run &apos;{0}&apos; from plugin &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string EXTERNAL_PLUGIN_TITLE {
            get {
                return ResourceManager.GetString("EXTERNAL_PLUGIN_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed to run plugin executable. Please see the client log for details. ähnelt.
        /// </summary>
        public static string EXTERNAL_PLUGIN_WIN32 {
            get {
                return ResourceManager.GetString("EXTERNAL_PLUGIN_WIN32", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed ähnelt.
        /// </summary>
        public static string FAILED {
            get {
                return ResourceManager.GetString("FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed to add to access list ähnelt.
        /// </summary>
        public static string FAILED_TO_ADD_TO_ACCESS_LIST {
            get {
                return ResourceManager.GetString("FAILED_TO_ADD_TO_ACCESS_LIST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Max failover capacity: {0} ähnelt.
        /// </summary>
        public static string FAILOVER_MAX_CAPACITY {
            get {
                return ResourceManager.GetString("FAILOVER_MAX_CAPACITY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server failure limit: {0} ähnelt.
        /// </summary>
        public static string FAILOVER_TOLERANCE {
            get {
                return ResourceManager.GetString("FAILOVER_TOLERANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die False ähnelt.
        /// </summary>
        public static string FALSE {
            get {
                return ResourceManager.GetString("FALSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fast clone is not supported by this storage type ähnelt.
        /// </summary>
        public static string FAST_CLONE_UNAVAILABLE {
            get {
                return ResourceManager.GetString("FAST_CLONE_UNAVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Feature disabled in the registry ähnelt.
        /// </summary>
        public static string FEATURE_DISABLED_IN_REGISTER {
            get {
                return ResourceManager.GetString("FEATURE_DISABLED_IN_REGISTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Next Section ähnelt.
        /// </summary>
        public static string FETCH_EARLIER_DATA {
            get {
                return ResourceManager.GetString("FETCH_EARLIER_DATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fetch possible hosts of VM {0} ähnelt.
        /// </summary>
        public static string FETCH_POSSIBLE_HOSTS {
            get {
                return ResourceManager.GetString("FETCH_POSSIBLE_HOSTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fetched possible hosts of VM {0} ähnelt.
        /// </summary>
        public static string FETCHED_POSSIBLE_HOSTS {
            get {
                return ResourceManager.GetString("FETCHED_POSSIBLE_HOSTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fetching possible hosts of VM {0} ähnelt.
        /// </summary>
        public static string FETCHING_POSSIBLE_HOSTS {
            get {
                return ResourceManager.GetString("FETCHING_POSSIBLE_HOSTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No LUNs were found.  Please verify your hardware configuration. ähnelt.
        /// </summary>
        public static string FIBRECHANNEL_NO_RESULTS {
            get {
                return ResourceManager.GetString("FIBRECHANNEL_NO_RESULTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The scan failed. Please try again. ähnelt.
        /// </summary>
        public static string FIBRECHANNEL_XML_ERROR {
            get {
                return ResourceManager.GetString("FIBRECHANNEL_XML_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This feature is disabled due to license restrictions on the server. ähnelt.
        /// </summary>
        public static string FIELD_DISABLED {
            get {
                return ResourceManager.GetString("FIELD_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All files ähnelt.
        /// </summary>
        public static string FILE_ALL {
            get {
                return ResourceManager.GetString("FILE_ALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Acrobat (PDF) file ähnelt.
        /// </summary>
        public static string FILE_PDF {
            get {
                return ResourceManager.GetString("FILE_PDF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die File {0} already exists. Overwrite? ähnelt.
        /// </summary>
        public static string FILE_X_EXISTS_OVERWRITE {
            get {
                return ResourceManager.GetString("FILE_X_EXISTS_OVERWRITE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Excel file ähnelt.
        /// </summary>
        public static string FILE_XLS {
            get {
                return ResourceManager.GetString("FILE_XLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You entered an invalid character in one of the filer parameters. ähnelt.
        /// </summary>
        public static string FILER_PARAM_INVALID_CHAR {
            get {
                return ResourceManager.GetString("FILER_PARAM_INVALID_CHAR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show &amp;All ähnelt.
        /// </summary>
        public static string FILTER_SHOW_ALL {
            get {
                return ResourceManager.GetString("FILTER_SHOW_ALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Filters are OFF ähnelt.
        /// </summary>
        public static string FILTERS_OFF {
            get {
                return ResourceManager.GetString("FILTERS_OFF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Filters are ON ähnelt.
        /// </summary>
        public static string FILTERS_ON {
            get {
                return ResourceManager.GetString("FILTERS_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Finish ähnelt.
        /// </summary>
        public static string FINISH {
            get {
                return ResourceManager.GetString("FINISH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Additional space: ähnelt.
        /// </summary>
        public static string FINISH_PAGE_ADDSPACE {
            get {
                return ResourceManager.GetString("FINISH_PAGE_ADDSPACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Files will be compressed: ähnelt.
        /// </summary>
        public static string FINISH_PAGE_COMPRESS {
            get {
                return ResourceManager.GetString("FINISH_PAGE_COMPRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die CPU count: ähnelt.
        /// </summary>
        public static string FINISH_PAGE_CPUCOUNT {
            get {
                return ResourceManager.GetString("FINISH_PAGE_CPUCOUNT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A manifest will be created: ähnelt.
        /// </summary>
        public static string FINISH_PAGE_CREATE_MANIFEST {
            get {
                return ResourceManager.GetString("FINISH_PAGE_CREATE_MANIFEST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An OVA package will be created: ähnelt.
        /// </summary>
        public static string FINISH_PAGE_CREATE_OVA {
            get {
                return ResourceManager.GetString("FINISH_PAGE_CREATE_OVA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The package will be digitally signed: ähnelt.
        /// </summary>
        public static string FINISH_PAGE_DIGITAL_SIGNATURE {
            get {
                return ResourceManager.GetString("FINISH_PAGE_DIGITAL_SIGNATURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Appliance files will be encrypted: {0} ähnelt.
        /// </summary>
        public static string FINISH_PAGE_ENCRYPT {
            get {
                return ResourceManager.GetString("FINISH_PAGE_ENCRYPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Virtual Hard Disk image: ähnelt.
        /// </summary>
        public static string FINISH_PAGE_IMAGEPATH {
            get {
                return ResourceManager.GetString("FINISH_PAGE_IMAGEPATH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Selected ISO SR: ähnelt.
        /// </summary>
        public static string FINISH_PAGE_ISOSR {
            get {
                return ResourceManager.GetString("FINISH_PAGE_ISOSR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Memory: ähnelt.
        /// </summary>
        public static string FINISH_PAGE_MEMORY {
            get {
                return ResourceManager.GetString("FINISH_PAGE_MEMORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network: ähnelt.
        /// </summary>
        public static string FINISH_PAGE_NETWORK {
            get {
                return ResourceManager.GetString("FINISH_PAGE_NETWORK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} network: ähnelt.
        /// </summary>
        public static string FINISH_PAGE_NETWORK_FOR_VM {
            get {
                return ResourceManager.GetString("FINISH_PAGE_NETWORK_FOR_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Package name: ähnelt.
        /// </summary>
        public static string FINISH_PAGE_REVIEW_APPLIANCE {
            get {
                return ResourceManager.GetString("FINISH_PAGE_REVIEW_APPLIANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Destination path: ähnelt.
        /// </summary>
        public static string FINISH_PAGE_REVIEW_DESTINATION {
            get {
                return ResourceManager.GetString("FINISH_PAGE_REVIEW_DESTINATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Selected EULA files: ähnelt.
        /// </summary>
        public static string FINISH_PAGE_REVIEW_EULA {
            get {
                return ResourceManager.GetString("FINISH_PAGE_REVIEW_EULA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Selected VMs: ähnelt.
        /// </summary>
        public static string FINISH_PAGE_REVIEW_VMS {
            get {
                return ResourceManager.GetString("FINISH_PAGE_REVIEW_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use OS Fixup: ähnelt.
        /// </summary>
        public static string FINISH_PAGE_RUN_FIXUPS {
            get {
                return ResourceManager.GetString("FINISH_PAGE_RUN_FIXUPS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Storage: ähnelt.
        /// </summary>
        public static string FINISH_PAGE_STORAGE {
            get {
                return ResourceManager.GetString("FINISH_PAGE_STORAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} storage: ähnelt.
        /// </summary>
        public static string FINISH_PAGE_STORAGE_FOR_VM {
            get {
                return ResourceManager.GetString("FINISH_PAGE_STORAGE_FOR_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Target: ähnelt.
        /// </summary>
        public static string FINISH_PAGE_TARGET {
            get {
                return ResourceManager.GetString("FINISH_PAGE_TARGET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} target: ähnelt.
        /// </summary>
        public static string FINISH_PAGE_TARGET_FOR_VM {
            get {
                return ResourceManager.GetString("FINISH_PAGE_TARGET_FOR_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Finish ähnelt.
        /// </summary>
        public static string FINISH_PAGE_TEXT {
            get {
                return ResourceManager.GetString("FINISH_PAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Review the export settings ähnelt.
        /// </summary>
        public static string FINISH_PAGE_TITLE_EXPORT {
            get {
                return ResourceManager.GetString("FINISH_PAGE_TITLE_EXPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Review the import settings ähnelt.
        /// </summary>
        public static string FINISH_PAGE_TITLE_IMPORT {
            get {
                return ResourceManager.GetString("FINISH_PAGE_TITLE_IMPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Obtain automatically through DHCP ähnelt.
        /// </summary>
        public static string FINISH_PAGE_TVM_DHCP {
            get {
                return ResourceManager.GetString("FINISH_PAGE_TVM_DHCP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Transfer VM gateway: ähnelt.
        /// </summary>
        public static string FINISH_PAGE_TVM_GATEWAY {
            get {
                return ResourceManager.GetString("FINISH_PAGE_TVM_GATEWAY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Transfer VM IP address: ähnelt.
        /// </summary>
        public static string FINISH_PAGE_TVM_IP {
            get {
                return ResourceManager.GetString("FINISH_PAGE_TVM_IP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Transfer VM subnet mask: ähnelt.
        /// </summary>
        public static string FINISH_PAGE_TVM_MASK {
            get {
                return ResourceManager.GetString("FINISH_PAGE_TVM_MASK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Transfer VM network interface: ähnelt.
        /// </summary>
        public static string FINISH_PAGE_TVM_NETWORK {
            get {
                return ResourceManager.GetString("FINISH_PAGE_TVM_NETWORK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Verify manifest content: ähnelt.
        /// </summary>
        public static string FINISH_PAGE_VERIFY_MANIFEST {
            get {
                return ResourceManager.GetString("FINISH_PAGE_VERIFY_MANIFEST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Verify digital signature: ähnelt.
        /// </summary>
        public static string FINISH_PAGE_VERIFY_SIGNATURE {
            get {
                return ResourceManager.GetString("FINISH_PAGE_VERIFY_SIGNATURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VM name: ähnelt.
        /// </summary>
        public static string FINISH_PAGE_VMNAME {
            get {
                return ResourceManager.GetString("FINISH_PAGE_VMNAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Floppy Drive {0}: ähnelt.
        /// </summary>
        public static string FLOPPY_DRIVE_LABEL_NUMBERED {
            get {
                return ResourceManager.GetString("FLOPPY_DRIVE_LABEL_NUMBERED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Folder ähnelt.
        /// </summary>
        public static string FOLDER {
            get {
                return ResourceManager.GetString("FOLDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Folder with this name already exists ähnelt.
        /// </summary>
        public static string FOLDER_ALREADY_EXISTS {
            get {
                return ResourceManager.GetString("FOLDER_ALREADY_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Specify the folder where your report will be saved. ähnelt.
        /// </summary>
        public static string FOLDER_BROWSER_BUG_TOOL {
            get {
                return ResourceManager.GetString("FOLDER_BROWSER_BUG_TOOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Specify the folder where the files will be downloaded. ähnelt.
        /// </summary>
        public static string FOLDER_BROWSER_DOWNLOAD_APPLIANCE {
            get {
                return ResourceManager.GetString("FOLDER_BROWSER_DOWNLOAD_APPLIANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Specify the folder where the exported file(s) will be saved. ähnelt.
        /// </summary>
        public static string FOLDER_BROWSER_EXPORT_APPLIANCE {
            get {
                return ResourceManager.GetString("FOLDER_BROWSER_EXPORT_APPLIANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connect to a server to create your folder ähnelt.
        /// </summary>
        public static string FOLDER_NO_CONNECTION {
            get {
                return ResourceManager.GetString("FOLDER_NO_CONNECTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Folders ähnelt.
        /// </summary>
        public static string FOLDERS {
            get {
                return ResourceManager.GetString("FOLDERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Force close ähnelt.
        /// </summary>
        public static string FORCE_CLOSE {
            get {
                return ResourceManager.GetString("FORCE_CLOSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Plugin {0} has not yet responded to your cancel request. Would you like to force close the process or allow it to continue to run in the background? ähnelt.
        /// </summary>
        public static string FORCE_CLOSE_PLUGIN_PROMPT {
            get {
                return ResourceManager.GetString("FORCE_CLOSE_PLUGIN_PROMPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Would you like to configure this VM to accept Remote Desktop connections, and then connect to it over Remote Desktop? ähnelt.
        /// </summary>
        public static string FORCE_ENABLE_RDP {
            get {
                return ResourceManager.GetString("FORCE_ENABLE_RDP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Force Reboot ähnelt.
        /// </summary>
        public static string FORCE_REBOOT {
            get {
                return ResourceManager.GetString("FORCE_REBOOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Forget ähnelt.
        /// </summary>
        public static string FORGET_SR {
            get {
                return ResourceManager.GetString("FORGET_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Forgetting SR {0} ähnelt.
        /// </summary>
        public static string FORGETTING_SR_0 {
            get {
                return ResourceManager.GetString("FORGETTING_SR_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Forgetting SRs ähnelt.
        /// </summary>
        public static string FORGETTING_SRS {
            get {
                return ResourceManager.GetString("FORGETTING_SRS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Free memory ähnelt.
        /// </summary>
        public static string FREE_MEMORY {
            get {
                return ResourceManager.GetString("FREE_MEMORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Free Space ähnelt.
        /// </summary>
        public static string FREESPACE {
            get {
                return ResourceManager.GetString("FREESPACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Friday ähnelt.
        /// </summary>
        public static string FRIDAY_LONG {
            get {
                return ResourceManager.GetString("FRIDAY_LONG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fri ähnelt.
        /// </summary>
        public static string FRIDAY_SHORT {
            get {
                return ResourceManager.GetString("FRIDAY_SHORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fully applied ähnelt.
        /// </summary>
        public static string FULLY_APPLIED {
            get {
                return ResourceManager.GetString("FULLY_APPLIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} matches ähnelt.
        /// </summary>
        public static string GALLERYSEARCHBAR_MATCHES {
            get {
                return ResourceManager.GetString("GALLERYSEARCHBAR_MATCHES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Model: {0} ähnelt.
        /// </summary>
        public static string GENERAL_CPU_MODEL {
            get {
                return ResourceManager.GetString("GENERAL_CPU_MODEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Speed: {0} MHz ähnelt.
        /// </summary>
        public static string GENERAL_CPU_SPEED {
            get {
                return ResourceManager.GetString("GENERAL_CPU_SPEED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Vendor: {0} ähnelt.
        /// </summary>
        public static string GENERAL_CPU_VENDOR {
            get {
                return ResourceManager.GetString("GENERAL_CPU_VENDOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die CPU {0} ähnelt.
        /// </summary>
        public static string GENERAL_DETAILS_CPU_NUMBER {
            get {
                return ResourceManager.GetString("GENERAL_DETAILS_CPU_NUMBER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You must give a valid server name. ähnelt.
        /// </summary>
        public static string GENERAL_EDIT_INVALID_HOSTNAME {
            get {
                return ResourceManager.GetString("GENERAL_EDIT_INVALID_HOSTNAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You must give a valid IQN, e.g. iqn.2007-11.com.example.subdomain:optional-domain-specific-string ähnelt.
        /// </summary>
        public static string GENERAL_EDIT_INVALID_IQN {
            get {
                return ResourceManager.GetString("GENERAL_EDIT_INVALID_IQN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You must give a valid name. ähnelt.
        /// </summary>
        public static string GENERAL_EDIT_INVALID_NAME {
            get {
                return ResourceManager.GetString("GENERAL_EDIT_INVALID_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Boot Options ähnelt.
        /// </summary>
        public static string GENERAL_HEADING_BOOT_OPTIONS {
            get {
                return ResourceManager.GetString("GENERAL_HEADING_BOOT_OPTIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die CPUs ähnelt.
        /// </summary>
        public static string GENERAL_HEADING_CPUS {
            get {
                return ResourceManager.GetString("GENERAL_HEADING_CPUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die License Details ähnelt.
        /// </summary>
        public static string GENERAL_HEADING_LICENSE_DETAILS {
            get {
                return ResourceManager.GetString("GENERAL_HEADING_LICENSE_DETAILS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Memory ähnelt.
        /// </summary>
        public static string GENERAL_HEADING_MEMORY {
            get {
                return ResourceManager.GetString("GENERAL_HEADING_MEMORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Memory and VCPUs ähnelt.
        /// </summary>
        public static string GENERAL_HEADING_MEMORY_VCPUS {
            get {
                return ResourceManager.GetString("GENERAL_HEADING_MEMORY_VCPUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Status ähnelt.
        /// </summary>
        public static string GENERAL_HEADING_STATUS {
            get {
                return ResourceManager.GetString("GENERAL_HEADING_STATUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Updates ähnelt.
        /// </summary>
        public static string GENERAL_HEADING_UPDATES {
            get {
                return ResourceManager.GetString("GENERAL_HEADING_UPDATES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Version Details ähnelt.
        /// </summary>
        public static string GENERAL_HEADING_VERSION_DETAILS {
            get {
                return ResourceManager.GetString("GENERAL_HEADING_VERSION_DETAILS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Memory: ähnelt.
        /// </summary>
        public static string GENERAL_MEMORY {
            get {
                return ResourceManager.GetString("GENERAL_MEMORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server: ähnelt.
        /// </summary>
        public static string GENERAL_MEMORY_SERVER {
            get {
                return ResourceManager.GetString("GENERAL_MEMORY_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} RAM available ({1} total) ähnelt.
        /// </summary>
        public static string GENERAL_MEMORY_SERVER_FREE {
            get {
                return ResourceManager.GetString("GENERAL_MEMORY_SERVER_FREE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VMs: ähnelt.
        /// </summary>
        public static string GENERAL_MEMORY_VM {
            get {
                return ResourceManager.GetString("GENERAL_MEMORY_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: using {1} ähnelt.
        /// </summary>
        public static string GENERAL_MEMORY_VM_USED {
            get {
                return ResourceManager.GetString("GENERAL_MEMORY_VM_USED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: using {1} + {2} overhead ähnelt.
        /// </summary>
        public static string GENERAL_MEMORY_VM_USED_PLUS_OVERHEAD {
            get {
                return ResourceManager.GetString("GENERAL_MEMORY_VM_USED_PLUS_OVERHEAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Multipath Failure ähnelt.
        /// </summary>
        public static string GENERAL_MULTIPATH_FAILURE {
            get {
                return ResourceManager.GetString("GENERAL_MULTIPATH_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die :  ähnelt.
        /// </summary>
        public static string GENERAL_PAGE_KVP_SEPARATOR {
            get {
                return ResourceManager.GetString("GENERAL_PAGE_KVP_SEPARATOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter the vApp name and an optional description. ähnelt.
        /// </summary>
        public static string GENERAL_PAGE_VM_APPLIANCE_SETTINGS {
            get {
                return ResourceManager.GetString("GENERAL_PAGE_VM_APPLIANCE_SETTINGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter the snapshot schedule name and an optional description. ähnelt.
        /// </summary>
        public static string GENERAL_PAGE_VMSS_SETTINGS {
            get {
                return ResourceManager.GetString("GENERAL_PAGE_VMSS_SETTINGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} on {1} ähnelt.
        /// </summary>
        public static string GENERAL_PANEL_UPDATE_KEY {
            get {
                return ResourceManager.GetString("GENERAL_PANEL_UPDATE_KEY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The server &apos;{0}&apos; needs to be rebooted for update &apos;{1}&apos; to take effect ähnelt.
        /// </summary>
        public static string GENERAL_PANEL_UPDATE_REBOOT_WARNING {
            get {
                return ResourceManager.GetString("GENERAL_PANEL_UPDATE_REBOOT_WARNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The toolstack on server &apos;{0}&apos; needs to be restarted for update &apos;{1}&apos; to take effect ähnelt.
        /// </summary>
        public static string GENERAL_PANEL_UPDATE_RESTART_TOOLSTACK_WARNING {
            get {
                return ResourceManager.GetString("GENERAL_PANEL_UPDATE_RESTART_TOOLSTACK_WARNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Repair ähnelt.
        /// </summary>
        public static string GENERAL_SR_CONTEXT_REPAIR {
            get {
                return ResourceManager.GetString("GENERAL_SR_CONTEXT_REPAIR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Broken ähnelt.
        /// </summary>
        public static string GENERAL_SR_STATE_BROKEN {
            get {
                return ResourceManager.GetString("GENERAL_SR_STATE_BROKEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die OK ähnelt.
        /// </summary>
        public static string GENERAL_STATE_OK {
            get {
                return ResourceManager.GetString("GENERAL_STATE_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not Found ähnelt.
        /// </summary>
        public static string GENERAL_UNKNOWN {
            get {
                return ResourceManager.GetString("GENERAL_UNKNOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Get Password ähnelt.
        /// </summary>
        public static string GETPASSWORD {
            get {
                return ResourceManager.GetString("GETPASSWORD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die GPU ähnelt.
        /// </summary>
        public static string GPU {
            get {
                return ResourceManager.GetString("GPU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Edit Selected GPUs... ähnelt.
        /// </summary>
        public static string GPU_EDIT_ALLOWED_TYPES_MULTIPLE {
            get {
                return ResourceManager.GetString("GPU_EDIT_ALLOWED_TYPES_MULTIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Edit... ähnelt.
        /// </summary>
        public static string GPU_EDIT_ALLOWED_TYPES_SINGLE {
            get {
                return ResourceManager.GetString("GPU_EDIT_ALLOWED_TYPES_SINGLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} ({1} GPUs) ähnelt.
        /// </summary>
        public static string GPU_GROUP_NAME_AND_NO_OF_GPUS {
            get {
                return ResourceManager.GetString("GPU_GROUP_NAME_AND_NO_OF_GPUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} (1 GPU) ähnelt.
        /// </summary>
        public static string GPU_GROUP_NAME_AND_NO_OF_GPUS_ONE {
            get {
                return ResourceManager.GetString("GPU_GROUP_NAME_AND_NO_OF_GPUS_ONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die None ähnelt.
        /// </summary>
        public static string GPU_NONE {
            get {
                return ResourceManager.GetString("GPU_NONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die On {0}: ähnelt.
        /// </summary>
        public static string GPU_ON_HOST_LABEL {
            get {
                return ResourceManager.GetString("GPU_ON_HOST_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Placement policy: {0} ähnelt.
        /// </summary>
        public static string GPU_PLACEMENT_POLICY_DESCRIPTION {
            get {
                return ResourceManager.GetString("GPU_PLACEMENT_POLICY_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum density ähnelt.
        /// </summary>
        public static string GPU_PLACEMENT_POLICY_MAX_DENSITY {
            get {
                return ResourceManager.GetString("GPU_PLACEMENT_POLICY_MAX_DENSITY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum density: put as many VMs as possible on the same GPU ähnelt.
        /// </summary>
        public static string GPU_PLACEMENT_POLICY_MAX_DENSITY_DESCRIPTION {
            get {
                return ResourceManager.GetString("GPU_PLACEMENT_POLICY_MAX_DENSITY_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum performance ähnelt.
        /// </summary>
        public static string GPU_PLACEMENT_POLICY_MAX_PERFORMANCE {
            get {
                return ResourceManager.GetString("GPU_PLACEMENT_POLICY_MAX_PERFORMANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum performance: put VMs on as many GPUs as possible ähnelt.
        /// </summary>
        public static string GPU_PLACEMENT_POLICY_MAX_PERFORMANCE_DESCRIPTION {
            get {
                return ResourceManager.GetString("GPU_PLACEMENT_POLICY_MAX_PERFORMANCE_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mixed ähnelt.
        /// </summary>
        public static string GPU_PLACEMENT_POLICY_MIXED {
            get {
                return ResourceManager.GetString("GPU_PLACEMENT_POLICY_MIXED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mixed: different settings for different GPU groups ähnelt.
        /// </summary>
        public static string GPU_PLACEMENT_POLICY_MIXED_DESCRIPTION {
            get {
                return ResourceManager.GetString("GPU_PLACEMENT_POLICY_MIXED_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You can improve graphics performance by assigning a dedicated graphics processing unit (GPU) to a VM. However, no GPUs have been detected in this pool, so this option is not currently available. ähnelt.
        /// </summary>
        public static string GPU_RUBRIC_NO_GPUS_POOL {
            get {
                return ResourceManager.GetString("GPU_RUBRIC_NO_GPUS_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You can improve graphics performance by assigning a dedicated graphics processing unit (GPU) to a VM. However, no GPUs have been detected in this server, so this option is not currently available. ähnelt.
        /// </summary>
        public static string GPU_RUBRIC_NO_GPUS_SERVER {
            get {
                return ResourceManager.GetString("GPU_RUBRIC_NO_GPUS_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select which virtual GPU types are allowed on these GPUs: ähnelt.
        /// </summary>
        public static string GPU_RUBRIC_PLEASE_SELECT_WHICH_GPU_MULTIPLE {
            get {
                return ResourceManager.GetString("GPU_RUBRIC_PLEASE_SELECT_WHICH_GPU_MULTIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select which virtual GPU types are allowed on this GPU: ähnelt.
        /// </summary>
        public static string GPU_RUBRIC_PLEASE_SELECT_WHICH_GPU_ONE {
            get {
                return ResourceManager.GetString("GPU_RUBRIC_PLEASE_SELECT_WHICH_GPU_ONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not available ähnelt.
        /// </summary>
        public static string GPU_UNAVAILABLE {
            get {
                return ResourceManager.GetString("GPU_UNAVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Loading Data... ähnelt.
        /// </summary>
        public static string GRAPH_LOADING {
            get {
                return ResourceManager.GetString("GRAPH_LOADING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Performance Graph ähnelt.
        /// </summary>
        public static string GRAPH_NAME {
            get {
                return ResourceManager.GetString("GRAPH_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die To view memory data for this VM, you need to install [XenServer product] Tools ähnelt.
        /// </summary>
        public static string GRAPH_NEEDS_TOOLS {
            get {
                return ResourceManager.GetString("GRAPH_NEEDS_TOOLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die It is not possible to add new performance graphs on VM &apos;{0}&apos; because the VM is not running. ähnelt.
        /// </summary>
        public static string GRAPHS_CANNOT_ADD_VM_HALTED {
            get {
                return ResourceManager.GetString("GRAPHS_CANNOT_ADD_VM_HALTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die It is not possible to edit performance graphs on VM &apos;{0}&apos; because the VM is not running. ähnelt.
        /// </summary>
        public static string GRAPHS_CANNOT_EDIT_VM_HALTED {
            get {
                return ResourceManager.GetString("GRAPHS_CANNOT_EDIT_VM_HALTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die CPU Performance ähnelt.
        /// </summary>
        public static string GRAPHS_DEFAULT_NAME_CPU {
            get {
                return ResourceManager.GetString("GRAPHS_DEFAULT_NAME_CPU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disk Performance ähnelt.
        /// </summary>
        public static string GRAPHS_DEFAULT_NAME_DISK {
            get {
                return ResourceManager.GetString("GRAPHS_DEFAULT_NAME_DISK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Memory Performance ähnelt.
        /// </summary>
        public static string GRAPHS_DEFAULT_NAME_MEMORY {
            get {
                return ResourceManager.GetString("GRAPHS_DEFAULT_NAME_MEMORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network Performance ähnelt.
        /// </summary>
        public static string GRAPHS_DEFAULT_NAME_NETWORK {
            get {
                return ResourceManager.GetString("GRAPHS_DEFAULT_NAME_NETWORK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; Details ähnelt.
        /// </summary>
        public static string GRAPHS_DETAILS_TITLE {
            get {
                return ResourceManager.GetString("GRAPHS_DETAILS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Edit Graph... ähnelt.
        /// </summary>
        public static string GRAPHS_EDIT {
            get {
                return ResourceManager.GetString("GRAPHS_EDIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New Graph... ähnelt.
        /// </summary>
        public static string GRAPHS_NEW {
            get {
                return ResourceManager.GetString("GRAPHS_NEW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New Graph ähnelt.
        /// </summary>
        public static string GRAPHS_NEW_TITLE {
            get {
                return ResourceManager.GetString("GRAPHS_NEW_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die no data ähnelt.
        /// </summary>
        public static string GRAPHS_NO_DATA {
            get {
                return ResourceManager.GetString("GRAPHS_NO_DATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to restore the default graphs?  This operation will delete existing graphs and cannot be undone.
        ///
        ///Note: Any custom color selections will remain unchanged ähnelt.
        /// </summary>
        public static string GRAPHS_RESTORE_DEFAULT_MESSAGE {
            get {
                return ResourceManager.GetString("GRAPHS_RESTORE_DEFAULT_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &gt; {0} ähnelt.
        /// </summary>
        public static string GREATER_THAN {
            get {
                return ResourceManager.GetString("GREATER_THAN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Group ähnelt.
        /// </summary>
        public static string GROUP {
            get {
                return ResourceManager.GetString("GROUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Group Roles ähnelt.
        /// </summary>
        public static string GROUP_ROLES {
            get {
                return ResourceManager.GetString("GROUP_ROLES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This version of [XenCenter] is out of date and cannot connect to {0}. ähnelt.
        /// </summary>
        public static string GUI_OUT_OF_DATE {
            get {
                return ResourceManager.GetString("GUI_OUT_OF_DATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 
        ///
        ///You can get a compatible version of [XenCenter] from the following location: ähnelt.
        /// </summary>
        public static string GUI_OUT_OF_DATE_MORE {
            get {
                return ResourceManager.GetString("GUI_OUT_OF_DATE_MORE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die HA ähnelt.
        /// </summary>
        public static string HA {
            get {
                return ResourceManager.GetString("HA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (Multiple values) ähnelt.
        /// </summary>
        public static string HA_ASSIGN_PRIORITIES_MIXED_PROTECTION_LEVELS {
            get {
                return ResourceManager.GetString("HA_ASSIGN_PRIORITIES_MIXED_PROTECTION_LEVELS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No VMs selected. ähnelt.
        /// </summary>
        public static string HA_ASSIGN_PRIORITIES_NO_VMS_SELECTED {
            get {
                return ResourceManager.GetString("HA_ASSIGN_PRIORITIES_NO_VMS_SELECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please wait while the HA wizard determines the agility of your VMs ähnelt.
        /// </summary>
        public static string HA_BUTTON_TOOLTIP_STILL_CALCULATING {
            get {
                return ResourceManager.GetString("HA_BUTTON_TOOLTIP_STILL_CALCULATING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Calculating... ähnelt.
        /// </summary>
        public static string HA_CALCULATING_AGILITY {
            get {
                return ResourceManager.GetString("HA_CALCULATING_AGILITY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die In order to edit the HA restart priorities of your virtual machines, all servers in the pool must be live. The following servers are not currently live:
        ///
        ///{0} ähnelt.
        /// </summary>
        public static string HA_CANNOT_EDIT_WITH_DEAD_HOSTS {
            get {
                return ResourceManager.GetString("HA_CANNOT_EDIT_WITH_DEAD_HOSTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die HA is currently enabled for pool {0}. To edit VM restart priorities, all servers in the pool must be reachable. ähnelt.
        /// </summary>
        public static string HA_CANNOT_EDIT_WITH_DEAD_HOSTS_SHORT {
            get {
                return ResourceManager.GetString("HA_CANNOT_EDIT_WITH_DEAD_HOSTS_SHORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die In order to edit the HA restart priorities of your virtual machine,
        ///all servers in the pool must be live. The following servers are
        ///not currently live:
        ///
        ///{0} ähnelt.
        /// </summary>
        public static string HA_CANNOT_EDIT_WITH_DEAD_HOSTS_WRAPPED {
            get {
                return ResourceManager.GetString("HA_CANNOT_EDIT_WITH_DEAD_HOSTS_WRAPPED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server &apos;{0}&apos; can not be placed in Maintenance Mode because it is the master of an HA-enabled pool. ähnelt.
        /// </summary>
        public static string HA_CANNOT_EVACUATE_MASTER {
            get {
                return ResourceManager.GetString("HA_CANNOT_EVACUATE_MASTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die HA and WLB check ähnelt.
        /// </summary>
        public static string HA_CHECK_DESCRIPTION {
            get {
                return ResourceManager.GetString("HA_CHECK_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose a heartbeat SR ähnelt.
        /// </summary>
        public static string HA_CHOOSESR_PAGE_PAGETITLE {
            get {
                return ResourceManager.GetString("HA_CHOOSESR_PAGE_PAGETITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Heartbeat SR ähnelt.
        /// </summary>
        public static string HA_CHOOSESR_PAGE_TEXT {
            get {
                return ResourceManager.GetString("HA_CHOOSESR_PAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configuration ähnelt.
        /// </summary>
        public static string HA_CONFIGURATION_TITLE {
            get {
                return ResourceManager.GetString("HA_CONFIGURATION_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure HA now... ähnelt.
        /// </summary>
        public static string HA_CONFIGURE_NOW {
            get {
                return ResourceManager.GetString("HA_CONFIGURE_NOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die HA is currently configured on pool &apos;{0}&apos; with these settings: ähnelt.
        /// </summary>
        public static string HA_CONFIGURED {
            get {
                return ResourceManager.GetString("HA_CONFIGURED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configured failure capacity: ähnelt.
        /// </summary>
        public static string HA_CONFIGURED_CAPACITY {
            get {
                return ResourceManager.GetString("HA_CONFIGURED_CAPACITY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The selected VM is currently protected by HA. Are you sure you want to force the shut down of this VM? This operation will cancel all running tasks for the VM and can result in data loss. ähnelt.
        /// </summary>
        public static string HA_CONFIRM_FORCESHUTDOWN_VM {
            get {
                return ResourceManager.GetString("HA_CONFIRM_FORCESHUTDOWN_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The selected VM is currently protected by HA. Are you sure you want to force the shut down of this VM? This operation can result in data loss. ähnelt.
        /// </summary>
        public static string HA_CONFIRM_FORCESHUTDOWN_VM_NO_CANCEL_TASKS {
            get {
                return ResourceManager.GetString("HA_CONFIRM_FORCESHUTDOWN_VM_NO_CANCEL_TASKS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die At least one of the selected VMs is currently protected by HA. Are you sure you want to forcibly shut down the selected VMs? This operation will cancel all running tasks for each of the selected VMs and can result in data loss. ähnelt.
        /// </summary>
        public static string HA_CONFIRM_FORCESHUTDOWN_VMS {
            get {
                return ResourceManager.GetString("HA_CONFIRM_FORCESHUTDOWN_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die At least one of the selected VMs is currently protected by HA. Are you sure you want to forcibly shut down the selected VMs? This operation can result in data loss. ähnelt.
        /// </summary>
        public static string HA_CONFIRM_FORCESHUTDOWN_VMS_NO_CANCEL_TASKS {
            get {
                return ResourceManager.GetString("HA_CONFIRM_FORCESHUTDOWN_VMS_NO_CANCEL_TASKS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The selected VM is currently protected by HA. Are you sure you want to shut it down? ähnelt.
        /// </summary>
        public static string HA_CONFIRM_SHUTDOWN_VM {
            get {
                return ResourceManager.GetString("HA_CONFIRM_SHUTDOWN_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The selected VM is currently protected by HA. Are you sure you want to suspend it? ähnelt.
        /// </summary>
        public static string HA_CONFIRM_SUSPEND_VM {
            get {
                return ResourceManager.GetString("HA_CONFIRM_SUSPEND_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current failure capacity: ähnelt.
        /// </summary>
        public static string HA_CURRENT_CAPACITY {
            get {
                return ResourceManager.GetString("HA_CURRENT_CAPACITY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to disable HA for pool &apos;{0}&apos;? ähnelt.
        /// </summary>
        public static string HA_DISABLE_QUERY {
            get {
                return ResourceManager.GetString("HA_DISABLE_QUERY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer] High Availability (HA) allows virtual machines to automatically be restarted in the event of an underlying hardware failure or loss of an individual server. HA is enabled for &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string HA_EDIT_DIALOG_BLURB {
            get {
                return ResourceManager.GetString("HA_EDIT_DIALOG_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change these HA settings now... ähnelt.
        /// </summary>
        public static string HA_EDIT_NOW {
            get {
                return ResourceManager.GetString("HA_EDIT_NOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die HA is guaranteed. The maximum number of server failures that HA can protect against is {0}. ähnelt.
        /// </summary>
        public static string HA_GUARANTEED_MESSAGE {
            get {
                return ResourceManager.GetString("HA_GUARANTEED_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Healthy ähnelt.
        /// </summary>
        public static string HA_HEARTBEAT_HEALTHY {
            get {
                return ResourceManager.GetString("HA_HEARTBEAT_HEALTHY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} out of {1} servers ähnelt.
        /// </summary>
        public static string HA_HEARTBEAT_SERVERS {
            get {
                return ResourceManager.GetString("HA_HEARTBEAT_SERVERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initializing... ähnelt.
        /// </summary>
        public static string HA_HEARTBEAT_SERVERS_INITIALISING {
            get {
                return ResourceManager.GetString("HA_HEARTBEAT_SERVERS_INITIALISING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die HA Heartbeat SR ähnelt.
        /// </summary>
        public static string HA_HEARTBEAT_SR {
            get {
                return ResourceManager.GetString("HA_HEARTBEAT_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error ähnelt.
        /// </summary>
        public static string HA_HEARTBEAT_UNHEALTHY {
            get {
                return ResourceManager.GetString("HA_HEARTBEAT_UNHEALTHY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool &apos;{0}&apos; has HA enabled, and failover tolerance is currently {1}.  You cannot put server &apos;{2}&apos; into maintenance mode
        ///and keep this configuration. Do you want to reduce the failover tolerance to {3} and continue? ähnelt.
        /// </summary>
        public static string HA_HOST_DISABLE_NTOL_DROP {
            get {
                return ResourceManager.GetString("HA_HOST_DISABLE_NTOL_DROP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool &apos;{0}&apos; has HA enabled. If you put server &apos;{1}&apos; into maintenance mode, HA would no longer be guaranteed for this pool.
        ///Are you sure you want to continue? ähnelt.
        /// </summary>
        public static string HA_HOST_DISABLE_NTOL_ZERO {
            get {
                return ResourceManager.GetString("HA_HOST_DISABLE_NTOL_ZERO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool &apos;{0}&apos; has HA enabled. You have just taken server &apos;{1}&apos; out of maintenance mode, and may now increase the pool&apos;s failover tolerance from {2} to {3}. Would you like to do this? ähnelt.
        /// </summary>
        public static string HA_HOST_ENABLE_NTOL_RAISE_QUERY {
            get {
                return ResourceManager.GetString("HA_HOST_ENABLE_NTOL_RAISE_QUERY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool &apos;{0}&apos; has HA enabled, and failover tolerance is currently {1}. You cannot reboot server &apos;{2}&apos; and keep this configuration.
        ///Do you want to reduce the failover tolerance to {3} and continue? ähnelt.
        /// </summary>
        public static string HA_HOST_REBOOT_NTOL_DROP {
            get {
                return ResourceManager.GetString("HA_HOST_REBOOT_NTOL_DROP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool &apos;{0}&apos; has HA enabled. If you reboot server &apos;{1}&apos;, HA will no longer be guaranteed.
        ///Are you sure you want to continue? ähnelt.
        /// </summary>
        public static string HA_HOST_REBOOT_NTOL_ZERO {
            get {
                return ResourceManager.GetString("HA_HOST_REBOOT_NTOL_ZERO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool &apos;{0}&apos; has HA enabled, and failover tolerance is currently {1}. You cannot shut down server &apos;{2}&apos; and keep this configuration.
        ///Do you want to reduce the failover tolerance to {3} and continue? ähnelt.
        /// </summary>
        public static string HA_HOST_SHUTDOWN_NTOL_DROP {
            get {
                return ResourceManager.GetString("HA_HOST_SHUTDOWN_NTOL_DROP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool &apos;{0}&apos; has HA enabled. If you shut down server &apos;{1}&apos;, HA will no longer be guaranteed.
        ///Are you sure you want to continue? ähnelt.
        /// </summary>
        public static string HA_HOST_SHUTDOWN_NTOL_ZERO {
            get {
                return ResourceManager.GetString("HA_HOST_SHUTDOWN_NTOL_ZERO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The following servers do not have a license that permits HA:
        ///
        ///{0} ähnelt.
        /// </summary>
        public static string HA_HOSTS_LACK_LICENSE {
            get {
                return ResourceManager.GetString("HA_HOSTS_LACK_LICENSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die HA configuration prerequisites ähnelt.
        /// </summary>
        public static string HA_INTRO_PAGE_TITLE {
            get {
                return ResourceManager.GetString("HA_INTRO_PAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Prerequisites ähnelt.
        /// </summary>
        public static string HA_INTRO_TEXT {
            get {
                return ResourceManager.GetString("HA_INTRO_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VM &apos;{0}&apos; has an invalid HA configuration that prevents it from being resumed. It is necessary to clear the VM&apos;s HA configuration to proceed.
        ///
        ///Would you like to clear the VM&apos;s HA restart priority? ähnelt.
        /// </summary>
        public static string HA_INVALID_CONFIG_RESUME {
            get {
                return ResourceManager.GetString("HA_INVALID_CONFIG_RESUME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VM &apos;{0}&apos; has an invalid HA configuration that prevents it from starting. It is necessary to clear the VM&apos;s HA configuration to proceed.
        ///
        ///Would you like to clear the VM&apos;s HA restart priority? ähnelt.
        /// </summary>
        public static string HA_INVALID_CONFIG_START {
            get {
                return ResourceManager.GetString("HA_INVALID_CONFIG_START", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The server does not have a license permitting HA. ähnelt.
        /// </summary>
        public static string HA_LICENSE_DISABLED {
            get {
                return ResourceManager.GetString("HA_LICENSE_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Lowering failover tolerance and retrying ähnelt.
        /// </summary>
        public static string HA_LOWERING_NTOL {
            get {
                return ResourceManager.GetString("HA_LOWERING_NTOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You have no shared SRs. ähnelt.
        /// </summary>
        public static string HA_NO_SHARED_SRS {
            get {
                return ResourceManager.GetString("HA_NO_SHARED_SRS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die HA is not currently configured on pool &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string HA_NOT_CONFIGURED {
            get {
                return ResourceManager.GetString("HA_NOT_CONFIGURED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The number of server failures that could be tolerated in this pool given these HA restart priorities is {0}.
        ///
        ///Increasing the slack allows other users to start or reconfigure VMs without affecting the plan. ähnelt.
        /// </summary>
        public static string HA_NTOL_BLURB {
            get {
                return ResourceManager.GetString("HA_NTOL_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The number of server failures that can be tolerated could not be determined. Check the logs for more information. ähnelt.
        /// </summary>
        public static string HA_NTOL_UNKNOWN {
            get {
                return ResourceManager.GetString("HA_NTOL_UNKNOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This pool cannot support the specified HA restart priorities and tolerate any server failures. ähnelt.
        /// </summary>
        public static string HA_NTOL_ZERO {
            get {
                return ResourceManager.GetString("HA_NTOL_ZERO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 0 - HA cannot guarantee to restart your protected VMs after server failure ähnelt.
        /// </summary>
        public static string HA_NTOL_ZERO_HAPAGE {
            get {
                return ResourceManager.GetString("HA_NTOL_ZERO_HAPAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Under this HA configuration, the failover tolerance of your pool would be 0 (zero) and it may not be possible to restart your virtual machines in the event of a server failure.
        ///
        ///Do you want to apply this HA configuration anyway? ähnelt.
        /// </summary>
        public static string HA_NTOL_ZERO_QUERY {
            get {
                return ResourceManager.GetString("HA_NTOL_ZERO_QUERY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool &apos;{0}&apos; has HA enabled, and is currently configured to tolerate {1} server failures. You cannot relocate VM &apos;{2}&apos; and still tolerate this number of failures. Do you want to reduce the number of tolerable failures to {3} and try again? ähnelt.
        /// </summary>
        public static string HA_OPT_DISABLE_NTOL_DROP {
            get {
                return ResourceManager.GetString("HA_OPT_DISABLE_NTOL_DROP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool &apos;{0}&apos; has HA enabled. The pool optimization has been stopped. You may now increase the pool&apos;s failover tolerance from {1} to {2}. Would you like to do this? ähnelt.
        /// </summary>
        public static string HA_OPT_ENABLE_NTOL_RAISE_QUERY {
            get {
                return ResourceManager.GetString("HA_OPT_ENABLE_NTOL_RAISE_QUERY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool &apos;{0}&apos; has HA enabled. If you relocate VM &apos;{1}&apos;, the pool will not be able to tolerate any further server failures, and your HA configuration would no longer be able to restart your protected VMs. To perform the action anyway, turn off HA. ähnelt.
        /// </summary>
        public static string HA_OPT_VM_RELOCATE_NTOL_ZERO {
            get {
                return ResourceManager.GetString("HA_OPT_VM_RELOCATE_NTOL_ZERO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do not restart ähnelt.
        /// </summary>
        public static string HA_OPTION_DO_NOT_RESTART {
            get {
                return ResourceManager.GetString("HA_OPTION_DO_NOT_RESTART", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restart if possible ähnelt.
        /// </summary>
        public static string HA_OPTION_RESTART_IF_POSS {
            get {
                return ResourceManager.GetString("HA_OPTION_RESTART_IF_POSS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die When overcommited the pool cannot guarantee to tolerate the number of server failures specified.
        ///
        ///Reduce protection levels, or bring more servers online to increase the maximum supported capacity. ähnelt.
        /// </summary>
        public static string HA_OVERCOMMIT_BLURB {
            get {
                return ResourceManager.GetString("HA_OVERCOMMIT_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die HA cannot be guaranteed with the specified settings and the current pool resources. ähnelt.
        /// </summary>
        public static string HA_OVERCOMMIT_MESSAGE {
            get {
                return ResourceManager.GetString("HA_OVERCOMMIT_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The number of servers you specified is greater than the maximum failover capacity ({0}). HA cannot be guaranteed if you allow this many server failures, given the specified VM restart priorities and the current pool configuration (number of servers and their CPU and memory capacity). ähnelt.
        /// </summary>
        public static string HA_OVERCOMMIT_WARNING {
            get {
                return ResourceManager.GetString("HA_OVERCOMMIT_WARNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum failover capacity is 0: HA cannot be guaranteed with the specified VM restart priorities and the current pool configuration (number of servers and their CPU and memory capacity). ähnelt.
        /// </summary>
        public static string HA_OVERCOMMIT_WARNING_NONE {
            get {
                return ResourceManager.GetString("HA_OVERCOMMIT_WARNING_NONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} - pool is overcommitted ähnelt.
        /// </summary>
        public static string HA_OVERCOMMITTED_NTOL {
            get {
                return ResourceManager.GetString("HA_OVERCOMMITTED_NTOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die HA is currently being disabled for &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string HA_PAGE_DISABLING {
            get {
                return ResourceManager.GetString("HA_PAGE_DISABLING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die HA is currently being enabled for &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string HA_PAGE_ENABLING {
            get {
                return ResourceManager.GetString("HA_PAGE_ENABLING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die HA restart priority ähnelt.
        /// </summary>
        public static string HA_RESTART_PRIORITY {
            get {
                return ResourceManager.GetString("HA_RESTART_PRIORITY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your changes to HA settings for pool &apos;{0}&apos; may not take effect because not all servers in the pool are reachable. Ensure that all servers in the pool are reachable and then apply the changes again. ähnelt.
        /// </summary>
        public static string HA_SAVE_SETTINGS_FAILED_DEAD_HOSTS {
            get {
                return ResourceManager.GetString("HA_SAVE_SETTINGS_FAILED_DEAD_HOSTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scanning for HA heartbeat SRs on {0} ähnelt.
        /// </summary>
        public static string HA_SCANNING_SRS {
            get {
                return ResourceManager.GetString("HA_SCANNING_SRS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Setting HA protection levels ähnelt.
        /// </summary>
        public static string HA_SETTING_PRIORITIES {
            get {
                return ResourceManager.GetString("HA_SETTING_PRIORITIES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Setting HA restart priority on {0} ähnelt.
        /// </summary>
        public static string HA_SETTING_PRIORITY_ON_X {
            get {
                return ResourceManager.GetString("HA_SETTING_PRIORITY_ON_X", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The following SRs are broken. It is recommended you fix them before enabling HA.
        ///
        ///{0} ähnelt.
        /// </summary>
        public static string HA_SRS_BROKEN_WARNING {
            get {
                return ResourceManager.GetString("HA_SRS_BROKEN_WARNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die HA is not available on standalone servers. ähnelt.
        /// </summary>
        public static string HA_STANDALONE_SERVER {
            get {
                return ResourceManager.GetString("HA_STANDALONE_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die HA is currently enabled for pool &apos;{0}&apos;.
        ///
        ///Click Configure HA to alter the settings displayed below. ähnelt.
        /// </summary>
        public static string HA_TAB_CONFIGURED_BLURB {
            get {
                return ResourceManager.GetString("HA_TAB_CONFIGURED_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die HA is currently enabled for pool &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string HA_TAB_CONFIGURED_UNLICENSED {
            get {
                return ResourceManager.GetString("HA_TAB_CONFIGURED_UNLICENSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unable to calculate maximum pool failure capacity. ähnelt.
        /// </summary>
        public static string HA_UNABLE_TO_CALCULATE_MESSAGE {
            get {
                return ResourceManager.GetString("HA_UNABLE_TO_CALCULATE_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool &apos;{0}&apos; has HA enabled, and is currently configured to tolerate {1} server failures. You cannot resume VM &apos;{2}&apos; and still tolerate this number of failures. Do you want to reduce the number of tolerable failures to {3} and try again? ähnelt.
        /// </summary>
        public static string HA_VM_RESUME_NTOL_DROP {
            get {
                return ResourceManager.GetString("HA_VM_RESUME_NTOL_DROP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool &apos;{0}&apos; has HA enabled. If you resume VM &apos;{1}&apos;, the pool will not be able to tolerate any further server failures, and your HA configuration would no longer be able to restart your protected VMs. To perform the action anyway, turn off HA. ähnelt.
        /// </summary>
        public static string HA_VM_RESUME_NTOL_ZERO {
            get {
                return ResourceManager.GetString("HA_VM_RESUME_NTOL_ZERO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool &apos;{0}&apos; has HA enabled, and is currently configured to tolerate {1} server failures. You cannot start VM &apos;{2}&apos; and still tolerate this number of failures. Do you want to reduce the number of tolerable failures to {3} and try again? ähnelt.
        /// </summary>
        public static string HA_VM_START_NTOL_DROP {
            get {
                return ResourceManager.GetString("HA_VM_START_NTOL_DROP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool &apos;{0}&apos; has HA enabled. If you start VM &apos;{1}&apos;, the pool will not be able to tolerate any further server failures, and your HA configuration would no longer be able to restart your protected VMs. To perform the action anyway, turn off HA. ähnelt.
        /// </summary>
        public static string HA_VM_START_NTOL_ZERO {
            get {
                return ResourceManager.GetString("HA_VM_START_NTOL_ZERO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die HA has been disabled on pool &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string HA_WAS_DISABLED {
            get {
                return ResourceManager.GetString("HA_WAS_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Review configuration and activate HA ähnelt.
        /// </summary>
        public static string HA_WIZARD_FINISH_PAGE_TITLE {
            get {
                return ResourceManager.GetString("HA_WIZARD_FINISH_PAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die HA is not currently enabled for pool &apos;{0}&apos;.
        ///
        ///Click Configure HA to enable HA for this pool and allow your virtual machines to be automatically restarted in the event of unexpected server failure. ähnelt.
        /// </summary>
        public static string HAPANEL_BLURB {
            get {
                return ResourceManager.GetString("HAPANEL_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Has any custom field ähnelt.
        /// </summary>
        public static string HAS_CUSTOM_FIELDS {
            get {
                return ResourceManager.GetString("HAS_CUSTOM_FIELDS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die HA Plan ähnelt.
        /// </summary>
        public static string HAWIZARD_ASSIGNPRIORITIESPAGE_TEXT {
            get {
                return ResourceManager.GetString("HAWIZARD_ASSIGNPRIORITIESPAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure the HA restart priority, restart order and delay interval for the VMs in this pool ähnelt.
        /// </summary>
        public static string HAWIZARD_ASSIGNPRIORITIESPAGE_TITLE {
            get {
                return ResourceManager.GetString("HAWIZARD_ASSIGNPRIORITIESPAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die HealthCheck ähnelt.
        /// </summary>
        public static string HEALTH_CHECK {
            get {
                return ResourceManager.GetString("HEALTH_CHECK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Authentication with [Citrix] Insight Services failed. See the application log files for more information. ähnelt.
        /// </summary>
        public static string HEALTH_CHECK_AUTHENTICATION_FAILED {
            get {
                return ResourceManager.GetString("HEALTH_CHECK_AUTHENTICATION_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid user name or password. Please try again. ähnelt.
        /// </summary>
        public static string HEALTH_CHECK_AUTHENTICATION_INVALID_CREDENTIALS {
            get {
                return ResourceManager.GetString("HEALTH_CHECK_AUTHENTICATION_INVALID_CREDENTIALS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die https://cis.citrix.com/legal/ ähnelt.
        /// </summary>
        public static string HEALTH_CHECK_CIS_POLICY_URL {
            get {
                return ResourceManager.GetString("HEALTH_CHECK_CIS_POLICY_URL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die http://www.citrix.com/about/legal/privacy.html ähnelt.
        /// </summary>
        public static string HEALTH_CHECK_CITRIX_POLICY_URL {
            get {
                return ResourceManager.GetString("HEALTH_CHECK_CITRIX_POLICY_URL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The information that Health Check uploads to [Citrix] Insight Services will be used for troubleshooting and diagnostics support purposes, as well as to improve the quality, reliability, and performance of our products subject to the [Citrix] Insight Services Policy at {0} and [Citrix] Privacy Policy at {1}. ähnelt.
        /// </summary>
        public static string HEALTH_CHECK_PRIVACY_POLICY {
            get {
                return ResourceManager.GetString("HEALTH_CHECK_PRIVACY_POLICY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This user is not authorized to access this server. ähnelt.
        /// </summary>
        public static string HEALTH_CHECK_USER_HAS_NO_PERMISSION_TO_CONNECT {
            get {
                return ResourceManager.GetString("HEALTH_CHECK_USER_HAS_NO_PERMISSION_TO_CONNECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This user is not authorized to perform Health Check operations. ähnelt.
        /// </summary>
        public static string HEALTH_CHECK_USER_NOT_AUTHORIZED {
            get {
                return ResourceManager.GetString("HEALTH_CHECK_USER_NOT_AUTHORIZED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Authentication with [Citrix] Insight Services is required in order to enable this feature. [XenCenter] detected a previous successful authentication for one of other connected pools. You can choose to re-use it or authenticate again. ähnelt.
        /// </summary>
        public static string HEALTHCHECK_AUTHENTICATION_RUBRIC_EXISTING_TOKEN {
            get {
                return ResourceManager.GetString("HEALTHCHECK_AUTHENTICATION_RUBRIC_EXISTING_TOKEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Authentication with [Citrix] Insight Services is required in order to enable this feature. Please register by providing MyCitrix credentials (see {0}). These credentials will only be used to obtain an upload token and will not be stored on this machine or on your server. ähnelt.
        /// </summary>
        public static string HEALTHCHECK_AUTHENTICATION_RUBRIC_NO_TOKEN {
            get {
                return ResourceManager.GetString("HEALTHCHECK_AUTHENTICATION_RUBRIC_NO_TOKEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die OK, Enable Health Check ähnelt.
        /// </summary>
        public static string HEALTHCHECK_ENROLLMENT_CONFIRMATION_BUTTON_LABEL {
            get {
                return ResourceManager.GetString("HEALTHCHECK_ENROLLMENT_CONFIRMATION_BUTTON_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Health Check Enrollment - {0} ähnelt.
        /// </summary>
        public static string HEALTHCHECK_ENROLLMENT_TITLE {
            get {
                return ResourceManager.GetString("HEALTHCHECK_ENROLLMENT_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Request an additional upload now ähnelt.
        /// </summary>
        public static string HEALTHCHECK_ON_DEMAND_REQUEST {
            get {
                return ResourceManager.GetString("HEALTHCHECK_ON_DEMAND_REQUEST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Additional upload requested at {0} ähnelt.
        /// </summary>
        public static string HEALTHCHECK_ON_DEMAND_REQUESTED_AT {
            get {
                return ResourceManager.GetString("HEALTHCHECK_ON_DEMAND_REQUESTED_AT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upload a Health Check report every {0} weeks on {1} starting at {2} ähnelt.
        /// </summary>
        public static string HEALTHCHECK_SCHEDULE_DESCRIPTION {
            get {
                return ResourceManager.GetString("HEALTHCHECK_SCHEDULE_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} issues detected ähnelt.
        /// </summary>
        public static string HEALTHCHECK_STATUS_ISSUES_FOUND {
            get {
                return ResourceManager.GetString("HEALTHCHECK_STATUS_ISSUES_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No issues detected ähnelt.
        /// </summary>
        public static string HEALTHCHECK_STATUS_NO_ISSUES_FOUND {
            get {
                return ResourceManager.GetString("HEALTHCHECK_STATUS_NO_ISSUES_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No report uploaded yet ähnelt.
        /// </summary>
        public static string HEALTHCHECK_STATUS_NO_UPLOAD_YET {
            get {
                return ResourceManager.GetString("HEALTHCHECK_STATUS_NO_UPLOAD_YET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Analysis not yet available ähnelt.
        /// </summary>
        public static string HEALTHCHECK_STATUS_NOT_AVAILABLE_YET {
            get {
                return ResourceManager.GetString("HEALTHCHECK_STATUS_NOT_AVAILABLE_YET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Health Check not enabled ähnelt.
        /// </summary>
        public static string HEALTHCHECK_STATUS_NOT_ENROLLED {
            get {
                return ResourceManager.GetString("HEALTHCHECK_STATUS_NOT_ENROLLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 1 issue detected ähnelt.
        /// </summary>
        public static string HEALTHCHECK_STATUS_ONE_ISSUE_FOUND {
            get {
                return ResourceManager.GetString("HEALTHCHECK_STATUS_ONE_ISSUE_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Heartbeating status ähnelt.
        /// </summary>
        public static string HEARTBEATING_STATUS {
            get {
                return ResourceManager.GetString("HEARTBEATING_STATUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Help ähnelt.
        /// </summary>
        public static string HELP {
            get {
                return ResourceManager.GetString("HELP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pause WLB ähnelt.
        /// </summary>
        public static string HELP_MESSAGE_DISABLE_WLB {
            get {
                return ResourceManager.GetString("HELP_MESSAGE_DISABLE_WLB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hide Details ähnelt.
        /// </summary>
        public static string HIDE_DETAILS {
            get {
                return ResourceManager.GetString("HIDE_DETAILS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hide Run History ähnelt.
        /// </summary>
        public static string HIDE_RUN_HISTORY {
            get {
                return ResourceManager.GetString("HIDE_RUN_HISTORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die High Availability ähnelt.
        /// </summary>
        public static string HIGH_AVAILABILITY {
            get {
                return ResourceManager.GetString("HIGH_AVAILABILITY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Run history for policy &apos;{0}&apos;: ähnelt.
        /// </summary>
        public static string HISTORY_FOR_POLICY {
            get {
                return ResourceManager.GetString("HISTORY_FOR_POLICY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Go to... ähnelt.
        /// </summary>
        public static string HISTORYPAGE_GOTO {
            get {
                return ResourceManager.GetString("HISTORYPAGE_GOTO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {3} {0}: {1} - {2} ähnelt.
        /// </summary>
        public static string HISTORYPANEL_COPY_FORMAT {
            get {
                return ResourceManager.GetString("HISTORYPANEL_COPY_FORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Details:  ähnelt.
        /// </summary>
        public static string HISTORYROW_DETAILS {
            get {
                return ResourceManager.GetString("HISTORYROW_DETAILS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error:  ähnelt.
        /// </summary>
        public static string HISTORYROW_ERROR {
            get {
                return ResourceManager.GetString("HISTORYROW_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die On {0}, {1} ähnelt.
        /// </summary>
        public static string HISTORYROW_ON {
            get {
                return ResourceManager.GetString("HISTORYROW_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die On {0}, with {1}, {2} ähnelt.
        /// </summary>
        public static string HISTORYROW_ON_WITH {
            get {
                return ResourceManager.GetString("HISTORYROW_ON_WITH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Progress: ähnelt.
        /// </summary>
        public static string HISTORYROW_PROGRESS {
            get {
                return ResourceManager.GetString("HISTORYROW_PROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Time: ähnelt.
        /// </summary>
        public static string HISTORYROW_TIME {
            get {
                return ResourceManager.GetString("HISTORYROW_TIME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die With {0}, {1} ähnelt.
        /// </summary>
        public static string HISTORYROW_WITH {
            get {
                return ResourceManager.GetString("HISTORYROW_WITH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Home Server ähnelt.
        /// </summary>
        public static string HOME_SERVER {
            get {
                return ResourceManager.GetString("HOME_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Home Server ähnelt.
        /// </summary>
        public static string HOME_SERVER_MENU_ITEM {
            get {
                return ResourceManager.GetString("HOME_SERVER_MENU_ITEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The default web browser could not be started. ähnelt.
        /// </summary>
        public static string HOMEPAGE_ERROR_MESSAGE {
            get {
                return ResourceManager.GetString("HOMEPAGE_ERROR_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This server cannot be contacted ähnelt.
        /// </summary>
        public static string HOMESERVER_PICKER_HOST_NOT_LIVE {
            get {
                return ResourceManager.GetString("HOMESERVER_PICKER_HOST_NOT_LIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This server has an operation in progress. ähnelt.
        /// </summary>
        public static string HOST_ACTION_IN_PROGRESS {
            get {
                return ResourceManager.GetString("HOST_ACTION_IN_PROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot add server {0} to pool {1}: server is already in pool {2}. ähnelt.
        /// </summary>
        public static string HOST_ALREADY_IN_POOL {
            get {
                return ResourceManager.GetString("HOST_ALREADY_IN_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This server is already powered on. ähnelt.
        /// </summary>
        public static string HOST_ALREADY_POWERED_ON {
            get {
                return ResourceManager.GetString("HOST_ALREADY_POWERED_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This server is already shut down. ähnelt.
        /// </summary>
        public static string HOST_ALREADY_SHUT_DOWN {
            get {
                return ResourceManager.GetString("HOST_ALREADY_SHUT_DOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server &apos;{0}&apos; backed up. ähnelt.
        /// </summary>
        public static string HOST_BACKEDUP {
            get {
                return ResourceManager.GetString("HOST_BACKEDUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server entering maintenance mode ähnelt.
        /// </summary>
        public static string HOST_DISABLE {
            get {
                return ResourceManager.GetString("HOST_DISABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server exiting maintenance mode ähnelt.
        /// </summary>
        public static string HOST_ENABLE {
            get {
                return ResourceManager.GetString("HOST_ENABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server entering maintenance mode ähnelt.
        /// </summary>
        public static string HOST_EVACUATE {
            get {
                return ResourceManager.GetString("HOST_EVACUATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server General Properties ähnelt.
        /// </summary>
        public static string HOST_GENERAL_TAB_TITLE {
            get {
                return ResourceManager.GetString("HOST_GENERAL_TAB_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die In maintenance mode ähnelt.
        /// </summary>
        public static string HOST_IN_MAINTENANCE_MODE {
            get {
                return ResourceManager.GetString("HOST_IN_MAINTENANCE_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Host internal management network ähnelt.
        /// </summary>
        public static string HOST_INTERNAL_MANAGEMENT_NETWORK {
            get {
                return ResourceManager.GetString("HOST_INTERNAL_MANAGEMENT_NETWORK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Host liveness check ähnelt.
        /// </summary>
        public static string HOST_LIVENESS_CHECK_DESCRIPTION {
            get {
                return ResourceManager.GetString("HOST_LIVENESS_CHECK_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Local ähnelt.
        /// </summary>
        public static string HOST_LOG_DESTINATION_LOCAL {
            get {
                return ResourceManager.GetString("HOST_LOG_DESTINATION_LOCAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} (License restriction) ähnelt.
        /// </summary>
        public static string HOST_MENU_ADD_SERVER {
            get {
                return ResourceManager.GetString("HOST_MENU_ADD_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add to &amp;Pool ähnelt.
        /// </summary>
        public static string HOST_MENU_ADD_TO_POOL {
            get {
                return ResourceManager.GetString("HOST_MENU_ADD_TO_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add to P&amp;ool ähnelt.
        /// </summary>
        public static string HOST_MENU_ADD_TO_POOL_CONTEXT_MENU {
            get {
                return ResourceManager.GetString("HOST_MENU_ADD_TO_POOL_CONTEXT_MENU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add to &amp;Pool (License restriction) ähnelt.
        /// </summary>
        public static string HOST_MENU_ADD_TO_POOL_LICENSE_RESTRICTION {
            get {
                return ResourceManager.GetString("HOST_MENU_ADD_TO_POOL_LICENSE_RESTRICTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (Error generating menu) ähnelt.
        /// </summary>
        public static string HOST_MENU_COMPLETE_FAILURE {
            get {
                return ResourceManager.GetString("HOST_MENU_COMPLETE_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Control &amp;Domain Memory... ähnelt.
        /// </summary>
        public static string HOST_MENU_CONTROL_DOMAIN_MEMORY {
            get {
                return ResourceManager.GetString("HOST_MENU_CONTROL_DOMAIN_MEMORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Migrate VM wizard... ähnelt.
        /// </summary>
        public static string HOST_MENU_CPM_TEXT {
            get {
                return ResourceManager.GetString("HOST_MENU_CPM_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current server ähnelt.
        /// </summary>
        public static string HOST_MENU_CURRENT_SERVER {
            get {
                return ResourceManager.GetString("HOST_MENU_CURRENT_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (empty) ähnelt.
        /// </summary>
        public static string HOST_MENU_EMPTY {
            get {
                return ResourceManager.GetString("HOST_MENU_EMPTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Import... ähnelt.
        /// </summary>
        public static string HOST_MENU_IMPORT_VM_TEXT {
            get {
                return ResourceManager.GetString("HOST_MENU_IMPORT_VM_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown error ähnelt.
        /// </summary>
        public static string HOST_MENU_UNKNOWN_ERROR {
            get {
                return ResourceManager.GetString("HOST_MENU_UNKNOWN_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Live patching status ähnelt.
        /// </summary>
        public static string HOST_NEEDS_REBOOT_CHECK_DESCRIPTION {
            get {
                return ResourceManager.GetString("HOST_NEEDS_REBOOT_CHECK_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Add Network... ähnelt.
        /// </summary>
        public static string HOST_NETWORK_TAB_ADD_BUTTON_LABEL {
            get {
                return ResourceManager.GetString("HOST_NETWORK_TAB_ADD_BUTTON_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die P&amp;roperties ähnelt.
        /// </summary>
        public static string HOST_NETWORK_TAB_EDIT_BUTTON_LABEL {
            get {
                return ResourceManager.GetString("HOST_NETWORK_TAB_EDIT_BUTTON_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die R&amp;emove Network ähnelt.
        /// </summary>
        public static string HOST_NETWORK_TAB_REMOVE_BUTTON_LABEL {
            get {
                return ResourceManager.GetString("HOST_NETWORK_TAB_REMOVE_BUTTON_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server Networks ähnelt.
        /// </summary>
        public static string HOST_NETWORK_TAB_TITLE {
            get {
                return ResourceManager.GetString("HOST_NETWORK_TAB_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No crashdumps to remove ähnelt.
        /// </summary>
        public static string HOST_NO_CRASHDUMPS {
            get {
                return ResourceManager.GetString("HOST_NO_CRASHDUMPS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server is not reachable ähnelt.
        /// </summary>
        public static string HOST_NOT_LIVE {
            get {
                return ResourceManager.GetString("HOST_NOT_LIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server power on ähnelt.
        /// </summary>
        public static string HOST_POWER_ON {
            get {
                return ResourceManager.GetString("HOST_POWER_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This host does not have its Power On mode set. ähnelt.
        /// </summary>
        public static string HOST_POWER_ON_MODE_NOT_SET {
            get {
                return ResourceManager.GetString("HOST_POWER_ON_MODE_NOT_SET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You must reboot your server &apos;{0}&apos; to complete the restore process. ähnelt.
        /// </summary>
        public static string HOST_REBOOT_REQUIRED {
            get {
                return ResourceManager.GetString("HOST_REBOOT_REQUIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upgrade failed. The server rebooted with the same version. ähnelt.
        /// </summary>
        public static string HOST_REBOOTED_SAME_VERSION {
            get {
                return ResourceManager.GetString("HOST_REBOOTED_SAME_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rebooting server ähnelt.
        /// </summary>
        public static string HOST_REBOOTING {
            get {
                return ResourceManager.GetString("HOST_REBOOTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Removed {0} crashdumps from {1} ähnelt.
        /// </summary>
        public static string HOST_REMOVED_MANY_CRASHDUMPS {
            get {
                return ResourceManager.GetString("HOST_REMOVED_MANY_CRASHDUMPS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Removed 1 crashdump from {0} ähnelt.
        /// </summary>
        public static string HOST_REMOVED_ONE_CRASHDUMP {
            get {
                return ResourceManager.GetString("HOST_REMOVED_ONE_CRASHDUMP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Removing crashdump {0} of {1} from {2} ähnelt.
        /// </summary>
        public static string HOST_REMOVING_CRASHDUMP {
            get {
                return ResourceManager.GetString("HOST_REMOVING_CRASHDUMP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Removing crashdumps from {0} ähnelt.
        /// </summary>
        public static string HOST_REMOVING_CRASHDUMPS_TITLE {
            get {
                return ResourceManager.GetString("HOST_REMOVING_CRASHDUMPS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server &apos;{0}&apos; restored. ähnelt.
        /// </summary>
        public static string HOST_RESTORED {
            get {
                return ResourceManager.GetString("HOST_RESTORED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This server cannot see any storage ähnelt.
        /// </summary>
        public static string HOST_SEES_NO_STORAGE {
            get {
                return ResourceManager.GetString("HOST_SEES_NO_STORAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shut down server ähnelt.
        /// </summary>
        public static string HOST_SHUTDOWN {
            get {
                return ResourceManager.GetString("HOST_SHUTDOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Host &apos;{0}&apos;: ähnelt.
        /// </summary>
        public static string HOST_X {
            get {
                return ResourceManager.GetString("HOST_X", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server &apos;{0}&apos; entered maintenance mode ähnelt.
        /// </summary>
        public static string HOSTACTION_EVACUATED {
            get {
                return ResourceManager.GetString("HOSTACTION_EVACUATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server &apos;{0}&apos; entering maintenance mode... ähnelt.
        /// </summary>
        public static string HOSTACTION_EVACUATING {
            get {
                return ResourceManager.GetString("HOSTACTION_EVACUATING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server &apos;{0}&apos; exited maintenance mode ähnelt.
        /// </summary>
        public static string HOSTACTION_EXITED_MAINTENANCE_MODE {
            get {
                return ResourceManager.GetString("HOSTACTION_EXITED_MAINTENANCE_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server &apos;{0}&apos; exiting maintenance mode... ähnelt.
        /// </summary>
        public static string HOSTACTION_EXITING_MAINTENANCE_MODE {
            get {
                return ResourceManager.GetString("HOSTACTION_EXITING_MAINTENANCE_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Preparing to reboot server: shutting down {0} ({1} of {2}) ähnelt.
        /// </summary>
        public static string HOSTACTION_REBOOT_VM_SHUTDOWN {
            get {
                return ResourceManager.GetString("HOSTACTION_REBOOT_VM_SHUTDOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Preparing to shut down server: shutting down {0} ({1} of {2}) ähnelt.
        /// </summary>
        public static string HOSTACTION_SHUTDOWN_VM_SHUTDOWN {
            get {
                return ResourceManager.GetString("HOSTACTION_SHUTDOWN_VM_SHUTDOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Nominated server {0} as new master ähnelt.
        /// </summary>
        public static string HOSTACTION_TRANSITIONED_NEW_MASTER {
            get {
                return ResourceManager.GetString("HOSTACTION_TRANSITIONED_NEW_MASTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Nominating server {0} as new master... ähnelt.
        /// </summary>
        public static string HOSTACTION_TRANSITIONING_NEW_MASTER {
            get {
                return ResourceManager.GetString("HOSTACTION_TRANSITIONING_NEW_MASTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hotfix check ähnelt.
        /// </summary>
        public static string HOTFIX_CHECK {
            get {
                return ResourceManager.GetString("HOTFIX_CHECK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hourly; at {0} minutes past each hour ähnelt.
        /// </summary>
        public static string HOURLY_SCHEDULE_FORMAT {
            get {
                return ResourceManager.GetString("HOURLY_SCHEDULE_FORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die - ähnelt.
        /// </summary>
        public static string HYPHEN {
            get {
                return ResourceManager.GetString("HYPHEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ID ähnelt.
        /// </summary>
        public static string ID {
            get {
                return ResourceManager.GetString("ID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Ignore ähnelt.
        /// </summary>
        public static string IGNORE_BUTTON_LABEL {
            get {
                return ResourceManager.GetString("IGNORE_BUTTON_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die It is not possible to connect to the iLO service. Please review your configuration. ähnelt.
        /// </summary>
        public static string ILO_CONNECTION_ERROR {
            get {
                return ResourceManager.GetString("ILO_CONNECTION_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The iLO power-on request failed ähnelt.
        /// </summary>
        public static string ILO_POWERON_FAILED {
            get {
                return ResourceManager.GetString("ILO_POWERON_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VM Definition ähnelt.
        /// </summary>
        public static string IMAGE_DEFINITION_PAGE_TEXT {
            get {
                return ResourceManager.GetString("IMAGE_DEFINITION_PAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Define Virtual Machine ähnelt.
        /// </summary>
        public static string IMAGE_DEFINITION_PAGE_TITLE {
            get {
                return ResourceManager.GetString("IMAGE_DEFINITION_PAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The selected virtual hard disk image file is corrupt. ähnelt.
        /// </summary>
        public static string IMAGE_SELECTION_PAGE_ERROR_CORRUPT_FILE {
            get {
                return ResourceManager.GetString("IMAGE_SELECTION_PAGE_ERROR_CORRUPT_FILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The selected file is not a valid virtual hard disk image file. ähnelt.
        /// </summary>
        public static string IMAGE_SELECTION_PAGE_ERROR_INVALID_FILE_TYPE {
            get {
                return ResourceManager.GetString("IMAGE_SELECTION_PAGE_ERROR_INVALID_FILE_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The selected file is a VMDK data file. Please select a VMDK descriptor file instead. ähnelt.
        /// </summary>
        public static string IMAGE_SELECTION_PAGE_ERROR_INVALID_VMDK_DESCRIPTOR {
            get {
                return ResourceManager.GetString("IMAGE_SELECTION_PAGE_ERROR_INVALID_VMDK_DESCRIPTOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Import Appliance &apos;{0}&apos; to &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string IMPORT_APPLIANCE {
            get {
                return ResourceManager.GetString("IMPORT_APPLIANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Import VM &apos;{0}&apos; from Disk Image to &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string IMPORT_DISK_IMAGE {
            get {
                return ResourceManager.GetString("IMPORT_DISK_IMAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error downloading file &apos;{0}&apos;. {1} ähnelt.
        /// </summary>
        public static string IMPORT_DOWNLOAD_ERROR {
            get {
                return ResourceManager.GetString("IMPORT_DOWNLOAD_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Too many EULAs to display, cannot continue. ähnelt.
        /// </summary>
        public static string IMPORT_EULA_PAGE_MAX_TABS {
            get {
                return ResourceManager.GetString("IMPORT_EULA_PAGE_MAX_TABS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Review End User License Agreement (EULA) ähnelt.
        /// </summary>
        public static string IMPORT_EULA_PAGE_TITLE {
            get {
                return ResourceManager.GetString("IMPORT_EULA_PAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The server could not complete the import due to an unkown error. ähnelt.
        /// </summary>
        public static string IMPORT_GENERIC_FAIL {
            get {
                return ResourceManager.GetString("IMPORT_GENERIC_FAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The exported files are incomplete or in an unrecognised format. ähnelt.
        /// </summary>
        public static string IMPORT_INCOMPLETE_FILES {
            get {
                return ResourceManager.GetString("IMPORT_INCOMPLETE_FILES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [Choose an ISO SR] ähnelt.
        /// </summary>
        public static string IMPORT_OPTIONS_PAGE_CHOOSE_ISO_SR {
            get {
                return ResourceManager.GetString("IMPORT_OPTIONS_PAGE_CHOOSE_ISO_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not locate the Fixup ISO ähnelt.
        /// </summary>
        public static string IMPORT_OPTIONS_PAGE_ERROR_NO_FIXUP_ISO_INSTALLED {
            get {
                return ResourceManager.GetString("IMPORT_OPTIONS_PAGE_ERROR_NO_FIXUP_ISO_INSTALLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not locate an appropriate ISO SR. Please review the configuration requirements for performing fix-up and try again. ähnelt.
        /// </summary>
        public static string IMPORT_OPTIONS_PAGE_ERROR_NO_ISO_SR_AVAILABLE {
            get {
                return ResourceManager.GetString("IMPORT_OPTIONS_PAGE_ERROR_NO_ISO_SR_AVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Fixup ISO in the SR above will be used to perform fixups ähnelt.
        /// </summary>
        public static string IMPORT_OPTIONS_PAGE_FOUND_EXISTING_ISO {
            get {
                return ResourceManager.GetString("IMPORT_OPTIONS_PAGE_FOUND_EXISTING_ISO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New ISO library... ähnelt.
        /// </summary>
        public static string IMPORT_OPTIONS_PAGE_NEW_ISO_LIBRARY {
            get {
                return ResourceManager.GetString("IMPORT_OPTIONS_PAGE_NEW_ISO_LIBRARY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die OS Fixup Settings ähnelt.
        /// </summary>
        public static string IMPORT_OPTIONS_PAGE_TEXT {
            get {
                return ResourceManager.GetString("IMPORT_OPTIONS_PAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use Operating System Fixup to ensure hypervisor interoperability ähnelt.
        /// </summary>
        public static string IMPORT_OPTIONS_PAGE_TITLE {
            get {
                return ResourceManager.GetString("IMPORT_OPTIONS_PAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Fixup ISO will be automatically copied to the selected SR ähnelt.
        /// </summary>
        public static string IMPORT_OPTIONS_PAGE_USE_SELECTED_ISO_LIBRARY {
            get {
                return ResourceManager.GetString("IMPORT_OPTIONS_PAGE_USE_SELECTED_ISO_LIBRARY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not find the appliance certificate. The file is missing. ähnelt.
        /// </summary>
        public static string IMPORT_SECURITY_PAGE_ERROR_MISSING_CERTIFICATE {
            get {
                return ResourceManager.GetString("IMPORT_SECURITY_PAGE_ERROR_MISSING_CERTIFICATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not find the appliance manifest. The file is missing. ähnelt.
        /// </summary>
        public static string IMPORT_SECURITY_PAGE_ERROR_MISSING_MANIFEST {
            get {
                return ResourceManager.GetString("IMPORT_SECURITY_PAGE_ERROR_MISSING_MANIFEST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Security ähnelt.
        /// </summary>
        public static string IMPORT_SECURITY_PAGE_TEXT {
            get {
                return ResourceManager.GetString("IMPORT_SECURITY_PAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select your import security settings ähnelt.
        /// </summary>
        public static string IMPORT_SECURITY_PAGE_TITLE {
            get {
                return ResourceManager.GetString("IMPORT_SECURITY_PAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Verify manifest content ähnelt.
        /// </summary>
        public static string IMPORT_SECURITY_PAGE_VERIFY_CONTENT {
            get {
                return ResourceManager.GetString("IMPORT_SECURITY_PAGE_VERIFY_CONTENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Verify the manifest matches the appliance files. This option will only activate if the appliance has a manifest file. ähnelt.
        /// </summary>
        public static string IMPORT_SECURITY_PAGE_VERIFY_CONTENT_DESCRIPTION {
            get {
                return ResourceManager.GetString("IMPORT_SECURITY_PAGE_VERIFY_CONTENT_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Verify digital signature ähnelt.
        /// </summary>
        public static string IMPORT_SECURITY_PAGE_VERIFY_PRODUCER {
            get {
                return ResourceManager.GetString("IMPORT_SECURITY_PAGE_VERIFY_PRODUCER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Verify the digital signature of the appliance is valid. This option will activate only if the appliance has been digitally signed. ähnelt.
        /// </summary>
        public static string IMPORT_SECURITY_PAGE_VERIFY_PRODUCER_DESCRIPTION {
            get {
                return ResourceManager.GetString("IMPORT_SECURITY_PAGE_VERIFY_PRODUCER_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die OVA file is corrupt or contains invalid data. ähnelt.
        /// </summary>
        public static string IMPORT_SELECT_APPLIANCE_PAGE_ERROR_CORRUPT_OVA {
            get {
                return ResourceManager.GetString("IMPORT_SELECT_APPLIANCE_PAGE_ERROR_CORRUPT_OVA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Path contains invalid characters. ähnelt.
        /// </summary>
        public static string IMPORT_SELECT_APPLIANCE_PAGE_ERROR_INVALID_PATH {
            get {
                return ResourceManager.GetString("IMPORT_SELECT_APPLIANCE_PAGE_ERROR_INVALID_PATH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please specify a valid URI. ähnelt.
        /// </summary>
        public static string IMPORT_SELECT_APPLIANCE_PAGE_ERROR_INVALID_URI {
            get {
                return ResourceManager.GetString("IMPORT_SELECT_APPLIANCE_PAGE_ERROR_INVALID_URI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Path does not exist. ähnelt.
        /// </summary>
        public static string IMPORT_SELECT_APPLIANCE_PAGE_ERROR_NONE_EXIST_PATH {
            get {
                return ResourceManager.GetString("IMPORT_SELECT_APPLIANCE_PAGE_ERROR_NONE_EXIST_PATH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The selected file is not a valid appliance file. ähnelt.
        /// </summary>
        public static string IMPORT_SELECT_APPLIANCE_PAGE_ERROR_NOT_SUPPORTED {
            get {
                return ResourceManager.GetString("IMPORT_SELECT_APPLIANCE_PAGE_ERROR_NOT_SUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You do not have write permission on the location provided. Read-write access is required to import this type of file. ähnelt.
        /// </summary>
        public static string IMPORT_SELECT_APPLIANCE_PAGE_ERROR_SOURCE_IS_READONLY {
            get {
                return ResourceManager.GetString("IMPORT_SELECT_APPLIANCE_PAGE_ERROR_SOURCE_IS_READONLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the location where the imported VM will be placed ähnelt.
        /// </summary>
        public static string IMPORT_SELECT_HOST_PAGE_TITLE {
            get {
                return ResourceManager.GetString("IMPORT_SELECT_HOST_PAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;
        ///&lt;ArrayOfString xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
        ///  &lt;string&gt;Guest installer network&lt;/string&gt;
        ///&lt;/ArrayOfString&gt; ähnelt.
        /// </summary>
        public static string IMPORT_SELECT_NETWORK_PAGE_NETWORK_FILTER {
            get {
                return ResourceManager.GetString("IMPORT_SELECT_NETWORK_PAGE_NETWORK_FILTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No available networks to connect. ähnelt.
        /// </summary>
        public static string IMPORT_SELECT_NETWORK_PAGE_NO_AVAIL_NETWORKS {
            get {
                return ResourceManager.GetString("IMPORT_SELECT_NETWORK_PAGE_NO_AVAIL_NETWORKS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Networking ähnelt.
        /// </summary>
        public static string IMPORT_SELECT_NETWORK_PAGE_TEXT {
            get {
                return ResourceManager.GetString("IMPORT_SELECT_NETWORK_PAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select network to connect VM ähnelt.
        /// </summary>
        public static string IMPORT_SELECT_NETWORK_PAGE_TITLE {
            get {
                return ResourceManager.GetString("IMPORT_SELECT_NETWORK_PAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No SR available with enough free space for all VMs. ähnelt.
        /// </summary>
        public static string IMPORT_SELECT_STORAGE_PAGE_ERROR_NO_COMMON_SR_AVAILABLE {
            get {
                return ResourceManager.GetString("IMPORT_SELECT_STORAGE_PAGE_ERROR_NO_COMMON_SR_AVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No SR available with enough free space. ähnelt.
        /// </summary>
        public static string IMPORT_SELECT_STORAGE_PAGE_ERROR_NO_SR_AVAILABLE {
            get {
                return ResourceManager.GetString("IMPORT_SELECT_STORAGE_PAGE_ERROR_NO_SR_AVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There is not enough available space on SR {0}. Please review your SR selections. ähnelt.
        /// </summary>
        public static string IMPORT_SELECT_STORAGE_PAGE_ERROR_SPACE_LIMITATION {
            get {
                return ResourceManager.GetString("IMPORT_SELECT_STORAGE_PAGE_ERROR_SPACE_LIMITATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There is not enough available space on SR {0} for all the VMs. Please consider importing the VMs on different target SRs. ähnelt.
        /// </summary>
        public static string IMPORT_SELECT_STORAGE_PAGE_ERROR_SPACE_LIMITATION_COMMON {
            get {
                return ResourceManager.GetString("IMPORT_SELECT_STORAGE_PAGE_ERROR_SPACE_LIMITATION_COMMON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Storage ähnelt.
        /// </summary>
        public static string IMPORT_SELECT_STORAGE_PAGE_TEXT {
            get {
                return ResourceManager.GetString("IMPORT_SELECT_STORAGE_PAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select target storage ähnelt.
        /// </summary>
        public static string IMPORT_SELECT_STORAGE_PAGE_TITLE {
            get {
                return ResourceManager.GetString("IMPORT_SELECT_STORAGE_PAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only OVF/OVA packages can be imported as vApps. ähnelt.
        /// </summary>
        public static string IMPORT_SOURCE_PAGE_ERROR_OVF_ONLY {
            get {
                return ResourceManager.GetString("IMPORT_SOURCE_PAGE_ERROR_OVF_ONLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All import options (*.ovf;*.ova;*.ova.gz;*.vhd;*.vmdk;*.xva;ova.xml)|*.ovf;*.ova;*.ova.gz;*.vhd;*.vmdk;*.xva;ova.xml|OVF/OVA Package files (*.ovf;*.ova;*.ova.gz)|*.ovf;*.ova*;*.ova.gz|Virtual Hard Disk images (*.vhd;*.vmdk;)|*.vhd;*.vmdk;|XVA files (*.xva)|*.xva|XVA Version 1|ova.xml ähnelt.
        /// </summary>
        public static string IMPORT_SOURCE_PAGE_FILETYPES {
            get {
                return ResourceManager.GetString("IMPORT_SOURCE_PAGE_FILETYPES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die OVF/OVA Package files (*.ovf;*.ova;*.ova.gz)|*.ovf;*.ova*;*.ova.gz ähnelt.
        /// </summary>
        public static string IMPORT_SOURCE_PAGE_FILETYPES_OVF_ONLY {
            get {
                return ResourceManager.GetString("IMPORT_SOURCE_PAGE_FILETYPES_OVF_ONLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter the pathname of an exported VM or template, an OVF/OVA package or a virtual hard disk image file or click Browse to find the file you want. ähnelt.
        /// </summary>
        public static string IMPORT_SOURCE_PAGE_INTRO {
            get {
                return ResourceManager.GetString("IMPORT_SOURCE_PAGE_INTRO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter the pathname of an OVF/OVA package or click Browse to find the file you want. ähnelt.
        /// </summary>
        public static string IMPORT_SOURCE_PAGE_INTRO_OVF_ONLY {
            get {
                return ResourceManager.GetString("IMPORT_SOURCE_PAGE_INTRO_OVF_ONLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Import Source ähnelt.
        /// </summary>
        public static string IMPORT_SOURCE_PAGE_TEXT {
            get {
                return ResourceManager.GetString("IMPORT_SOURCE_PAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Locate the file you want to import ähnelt.
        /// </summary>
        public static string IMPORT_SOURCE_PAGE_TITLE {
            get {
                return ResourceManager.GetString("IMPORT_SOURCE_PAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The [Xenserver] Template that you are attempting to import already exists in the selected pool. ähnelt.
        /// </summary>
        public static string IMPORT_TEMPLATE_ALREADY_EXISTS {
            get {
                return ResourceManager.GetString("IMPORT_TEMPLATE_ALREADY_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure storage for the new template ähnelt.
        /// </summary>
        public static string IMPORT_TEMPLATE_CONFIGURE_STORAGE {
            get {
                return ResourceManager.GetString("IMPORT_TEMPLATE_CONFIGURE_STORAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Importing Template from backup file. ähnelt.
        /// </summary>
        public static string IMPORT_TEMPLATE_DESCRIP {
            get {
                return ResourceManager.GetString("IMPORT_TEMPLATE_DESCRIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Import template from... ähnelt.
        /// </summary>
        public static string IMPORT_TEMPLATE_FROM {
            get {
                return ResourceManager.GetString("IMPORT_TEMPLATE_FROM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select a home server for the new template ähnelt.
        /// </summary>
        public static string IMPORT_TEMPLATE_HOME_SERVER {
            get {
                return ResourceManager.GetString("IMPORT_TEMPLATE_HOME_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Import Template complete. ähnelt.
        /// </summary>
        public static string IMPORT_TEMPLATE_IMPORTCOMPLETE {
            get {
                return ResourceManager.GetString("IMPORT_TEMPLATE_IMPORTCOMPLETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Importing Template... ähnelt.
        /// </summary>
        public static string IMPORT_TEMPLATE_IMPORTING {
            get {
                return ResourceManager.GetString("IMPORT_TEMPLATE_IMPORTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The virtual network interfaces configured for the imported template are listed below. You can add, modify or remove virtual network interfaces as required. ähnelt.
        /// </summary>
        public static string IMPORT_TEMPLATE_NETWORK_BLURB {
            get {
                return ResourceManager.GetString("IMPORT_TEMPLATE_NETWORK_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select a storage repository where virtual disks for the new template will be stored ähnelt.
        /// </summary>
        public static string IMPORT_TEMPLATE_SELECT_SR {
            get {
                return ResourceManager.GetString("IMPORT_TEMPLATE_SELECT_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Updating Template networking... ähnelt.
        /// </summary>
        public static string IMPORT_TEMPLATE_UPDATING_NETWORKS {
            get {
                return ResourceManager.GetString("IMPORT_TEMPLATE_UPDATING_NETWORKS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Updating Template... ähnelt.
        /// </summary>
        public static string IMPORT_TEMPLATE_UPDATING_TEMPLATE {
            get {
                return ResourceManager.GetString("IMPORT_TEMPLATE_UPDATING_TEMPLATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure virtual network interfaces for the new template ähnelt.
        /// </summary>
        public static string IMPORT_TEMPLATE_VIFS {
            get {
                return ResourceManager.GetString("IMPORT_TEMPLATE_VIFS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Waiting for Import Template wizard to complete... ähnelt.
        /// </summary>
        public static string IMPORT_TEMPLATE_WAITING_FOR_WIZARD {
            get {
                return ResourceManager.GetString("IMPORT_TEMPLATE_WAITING_FOR_WIZARD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die XenAppliance.Import.Thread ähnelt.
        /// </summary>
        public static string IMPORT_THREAD_NAME {
            get {
                return ResourceManager.GetString("IMPORT_THREAD_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Import is a URI but no destination path defined. ähnelt.
        /// </summary>
        public static string IMPORT_URI_NO_DESTINATION {
            get {
                return ResourceManager.GetString("IMPORT_URI_NO_DESTINATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure storage for the new VM ähnelt.
        /// </summary>
        public static string IMPORT_VM_CONFIGURE_STORAGE {
            get {
                return ResourceManager.GetString("IMPORT_VM_CONFIGURE_STORAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} has disappeared. Please choose a valid filename. ähnelt.
        /// </summary>
        public static string IMPORT_VM_FILE_DISAPPEARED {
            get {
                return ResourceManager.GetString("IMPORT_VM_FILE_DISAPPEARED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Import VM from... ähnelt.
        /// </summary>
        public static string IMPORT_VM_FROM {
            get {
                return ResourceManager.GetString("IMPORT_VM_FROM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Import &gt; ähnelt.
        /// </summary>
        public static string IMPORT_VM_IMPORT {
            get {
                return ResourceManager.GetString("IMPORT_VM_IMPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The virtual network interfaces configured for the imported VM are listed below. You can add, modify or remove virtual network interfaces as required. ähnelt.
        /// </summary>
        public static string IMPORT_VM_NETWORK_BLURB {
            get {
                return ResourceManager.GetString("IMPORT_VM_NETWORK_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select a home server for the new VM ähnelt.
        /// </summary>
        public static string IMPORT_VM_SELECT_HOME_SERVER {
            get {
                return ResourceManager.GetString("IMPORT_VM_SELECT_HOME_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select a storage repository where virtual disks for the new VM will be stored ähnelt.
        /// </summary>
        public static string IMPORT_VM_SELECT_SR {
            get {
                return ResourceManager.GetString("IMPORT_VM_SELECT_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure virtual network interfaces for the new VM ähnelt.
        /// </summary>
        public static string IMPORT_VM_VIFS {
            get {
                return ResourceManager.GetString("IMPORT_VM_VIFS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Some or all of the VMs you are importing are able to receive updates from Windows Update. The selected location does not support this virtualization state. If you continue with the import, your VMs may not be fully, if at all, functional. ähnelt.
        /// </summary>
        public static string IMPORT_VM_WITH_VENDOR_DEVICE_WARNING_MANY {
            get {
                return ResourceManager.GetString("IMPORT_VM_WITH_VENDOR_DEVICE_WARNING_MANY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The VM you are importing is able to receive updates from Windows Update. The selected location does not support this virtualization state. If you continue with the import, your VM may not be fully, if at all, functional. ähnelt.
        /// </summary>
        public static string IMPORT_VM_WITH_VENDOR_DEVICE_WARNING_ONE {
            get {
                return ResourceManager.GetString("IMPORT_VM_WITH_VENDOR_DEVICE_WARNING_ONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Some or all of the VMs you are importing have virtual GPUs assigned to them. The selected location does not have the right type of GPU for all of them. If you continue with the import, their virtual GPU settings will be lost. ähnelt.
        /// </summary>
        public static string IMPORT_VM_WITH_VGPU_WARNING_MANY {
            get {
                return ResourceManager.GetString("IMPORT_VM_WITH_VGPU_WARNING_MANY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The VM you are importing has a virtual GPU assigned to it. The selected location does not have the right type of GPU. If you continue with the import, the virtual GPU settings will be lost. ähnelt.
        /// </summary>
        public static string IMPORT_VM_WITH_VGPU_WARNING_ONE {
            get {
                return ResourceManager.GetString("IMPORT_VM_WITH_VGPU_WARNING_ONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Place &amp;all imported virtual disks on this target SR: ähnelt.
        /// </summary>
        public static string IMPORT_WIZARD_ALL_ON_SAME_SR_RADIO {
            get {
                return ResourceManager.GetString("IMPORT_WIZARD_ALL_ON_SAME_SR_RADIO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Import VM(s) to: ähnelt.
        /// </summary>
        public static string IMPORT_WIZARD_DESTINATION_DESTINATION {
            get {
                return ResourceManager.GetString("IMPORT_WIZARD_DESTINATION_DESTINATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose the pool or standalone server where you want to place the VM(s). If required, you can also specify a Home Server within the selected pool for each imported VM. ähnelt.
        /// </summary>
        public static string IMPORT_WIZARD_DESTINATION_INSTRUCTIONS {
            get {
                return ResourceManager.GetString("IMPORT_WIZARD_DESTINATION_INSTRUCTIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Assign imported VM(s) to a home server: ähnelt.
        /// </summary>
        public static string IMPORT_WIZARD_DESTINATION_TABLE_INTRO {
            get {
                return ResourceManager.GetString("IMPORT_WIZARD_DESTINATION_TABLE_INTRO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Map the virtual network interfaces in the VMs you are importing to networks in the destination pool or standalone server. ähnelt.
        /// </summary>
        public static string IMPORT_WIZARD_NETWORKING_INTRO {
            get {
                return ResourceManager.GetString("IMPORT_WIZARD_NETWORKING_INTRO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Place imported virtual disks onto &amp;specified target SRs: ähnelt.
        /// </summary>
        public static string IMPORT_WIZARD_SPECIFIC_SR_RADIO {
            get {
                return ResourceManager.GetString("IMPORT_WIZARD_SPECIFIC_SR_RADIO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Place the virtual disks in the VMs you are importing onto storage repositories (SRs) in the destination pool or standalone server. ähnelt.
        /// </summary>
        public static string IMPORT_WIZARD_STORAGE_INSTRUCTIONS {
            get {
                return ResourceManager.GetString("IMPORT_WIZARD_STORAGE_INSTRUCTIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the storage repository for the imported template. ähnelt.
        /// </summary>
        public static string IMPORT_WIZARD_TEMPLATE_SR_HINT_TEXT {
            get {
                return ResourceManager.GetString("IMPORT_WIZARD_TEMPLATE_SR_HINT_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Virtual network interfaces in imported VMs: ähnelt.
        /// </summary>
        public static string IMPORT_WIZARD_VM_SELECTION_INTRODUCTION {
            get {
                return ResourceManager.GetString("IMPORT_WIZARD_VM_SELECTION_INTRODUCTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the storage repository for the imported virtual machine. ähnelt.
        /// </summary>
        public static string IMPORT_WIZARD_VM_SR_HINT_TEXT {
            get {
                return ResourceManager.GetString("IMPORT_WIZARD_VM_SR_HINT_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Importing ähnelt.
        /// </summary>
        public static string IMPORTING {
            get {
                return ResourceManager.GetString("IMPORTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Importing Disk Image... ähnelt.
        /// </summary>
        public static string IMPORTING_DISK_IMAGE {
            get {
                return ResourceManager.GetString("IMPORTING_DISK_IMAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Importing VMs... ähnelt.
        /// </summary>
        public static string IMPORTING_VMS {
            get {
                return ResourceManager.GetString("IMPORTING_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Importing VM from backup file ähnelt.
        /// </summary>
        public static string IMPORTVM_DESCRIP {
            get {
                return ResourceManager.GetString("IMPORTVM_DESCRIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Import VM complete ähnelt.
        /// </summary>
        public static string IMPORTVM_IMPORTCOMPLETE {
            get {
                return ResourceManager.GetString("IMPORTVM_IMPORTCOMPLETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Importing VM... ähnelt.
        /// </summary>
        public static string IMPORTVM_IMPORTING {
            get {
                return ResourceManager.GetString("IMPORTVM_IMPORTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Preparing to Import VM ähnelt.
        /// </summary>
        public static string IMPORTVM_PREP {
            get {
                return ResourceManager.GetString("IMPORTVM_PREP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Starting VM... ähnelt.
        /// </summary>
        public static string IMPORTVM_STARTING {
            get {
                return ResourceManager.GetString("IMPORTVM_STARTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Import VM from &apos;{0}&apos; to &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string IMPORTVM_TITLE {
            get {
                return ResourceManager.GetString("IMPORTVM_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Updating VM networking... ähnelt.
        /// </summary>
        public static string IMPORTVM_UPDATING_NETWORKS {
            get {
                return ResourceManager.GetString("IMPORTVM_UPDATING_NETWORKS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Updating VM... ähnelt.
        /// </summary>
        public static string IMPORTVM_UPDATING_VM {
            get {
                return ResourceManager.GetString("IMPORTVM_UPDATING_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Waiting for Import VM wizard to complete... ähnelt.
        /// </summary>
        public static string IMPORTVM_WAITING_FOR_WIZARD {
            get {
                return ResourceManager.GetString("IMPORTVM_WAITING_FOR_WIZARD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Is in a vApp ähnelt.
        /// </summary>
        public static string IN_ANY_APPLIANCE {
            get {
                return ResourceManager.GetString("IN_ANY_APPLIANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die in &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string IN_POOL {
            get {
                return ResourceManager.GetString("IN_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die In progress ähnelt.
        /// </summary>
        public static string IN_PROGRESS {
            get {
                return ResourceManager.GetString("IN_PROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die In rolling upgrade ähnelt.
        /// </summary>
        public static string IN_ROLLING_UPGRADE {
            get {
                return ResourceManager.GetString("IN_ROLLING_UPGRADE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This server version is incompatible with [XenCenter]. ähnelt.
        /// </summary>
        public static string INCOMPATIBLE_PRODUCTS {
            get {
                return ResourceManager.GetString("INCOMPATIBLE_PRODUCTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Incompatible protocol version ähnelt.
        /// </summary>
        public static string INCOMPATIBLE_PROTOCOL_VERSION {
            get {
                return ResourceManager.GetString("INCOMPATIBLE_PROTOCOL_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Incompatible write cache mode ähnelt.
        /// </summary>
        public static string INCOMPATIBLE_WRITE_CACHE_MODE {
            get {
                return ResourceManager.GetString("INCOMPATIBLE_WRITE_CACHE_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Incorrect file size ähnelt.
        /// </summary>
        public static string INCORRECT_FILE_SIZE {
            get {
                return ResourceManager.GetString("INCORRECT_FILE_SIZE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This LUN does not contain the Storage Repository &apos;{0}&apos;.  Please select the correct LUN. ähnelt.
        /// </summary>
        public static string INCORRECT_LUN_FOR_SR {
            get {
                return ResourceManager.GetString("INCORRECT_LUN_FOR_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Incorrect old password ähnelt.
        /// </summary>
        public static string INCORRECT_OLD_PASSWORD {
            get {
                return ResourceManager.GetString("INCORRECT_OLD_PASSWORD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disk snapshots are not currently available for this VM ähnelt.
        /// </summary>
        public static string INFO_DISK_MODE {
            get {
                return ResourceManager.GetString("INFO_DISK_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disk and memory snapshots are not available for VMs with a dedicated GPU ähnelt.
        /// </summary>
        public static string INFO_DISKMEMORY_MODE_GPU {
            get {
                return ResourceManager.GetString("INFO_DISKMEMORY_MODE_GPU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disk and memory snapshots are not currently available for this VM ähnelt.
        /// </summary>
        public static string INFO_DISKMEMORY_MODE_MISC {
            get {
                return ResourceManager.GetString("INFO_DISKMEMORY_MODE_MISC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disk and memory snapshots need I/O drivers to be installed ähnelt.
        /// </summary>
        public static string INFO_DISKMEMORY_MODE_NO_IO_DRIVERS {
            get {
                return ResourceManager.GetString("INFO_DISKMEMORY_MODE_NO_IO_DRIVERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disk and memory snapshots need [XenServer product] Tools to be installed ähnelt.
        /// </summary>
        public static string INFO_DISKMEMORY_MODE_NO_TOOLS {
            get {
                return ResourceManager.GetString("INFO_DISKMEMORY_MODE_NO_TOOLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disk and memory snapshots need the VM to be running ähnelt.
        /// </summary>
        public static string INFO_DISKMEMORY_MODE_POWER_STATE {
            get {
                return ResourceManager.GetString("INFO_DISKMEMORY_MODE_POWER_STATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Quiesced snapshots need the VSS service to be enabled on the VM ähnelt.
        /// </summary>
        public static string INFO_QUIESCE_MODE {
            get {
                return ResourceManager.GetString("INFO_QUIESCE_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Quiesced snapshots need Management Agent to be installed ähnelt.
        /// </summary>
        public static string INFO_QUIESCE_MODE_NO_MGMNT {
            get {
                return ResourceManager.GetString("INFO_QUIESCE_MODE_NO_MGMNT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Quiesced snapshots need [XenServer product] Tools to be installed ähnelt.
        /// </summary>
        public static string INFO_QUIESCE_MODE_NO_TOOLS {
            get {
                return ResourceManager.GetString("INFO_QUIESCE_MODE_NO_TOOLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Quiesced snapshots need the VM to be running ähnelt.
        /// </summary>
        public static string INFO_QUIESCE_MODE_POWER_STATE {
            get {
                return ResourceManager.GetString("INFO_QUIESCE_MODE_POWER_STATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Information ähnelt.
        /// </summary>
        public static string INFORMATION {
            get {
                return ResourceManager.GetString("INFORMATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initialize WLB... ähnelt.
        /// </summary>
        public static string INITIALIZE_WLB {
            get {
                return ResourceManager.GetString("INITIALIZE_WLB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initialized ähnelt.
        /// </summary>
        public static string INITIALIZED {
            get {
                return ResourceManager.GetString("INITIALIZED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connecting to Workload Balancing server ähnelt.
        /// </summary>
        public static string INITIALIZING_WLB {
            get {
                return ResourceManager.GetString("INITIALIZING_WLB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connecting pool {0} to Workload Balancing server. ähnelt.
        /// </summary>
        public static string INITIALIZING_WLB_ON {
            get {
                return ResourceManager.GetString("INITIALIZING_WLB_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Install files could not be found at specified network location ähnelt.
        /// </summary>
        public static string INSTALL_FILES_CANNOT_BE_FOUND {
            get {
                return ResourceManager.GetString("INSTALL_FILES_CANNOT_BE_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Install License Key ähnelt.
        /// </summary>
        public static string INSTALL_LICENSE_KEY {
            get {
                return ResourceManager.GetString("INSTALL_LICENSE_KEY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Install pending &amp;updates... ähnelt.
        /// </summary>
        public static string INSTALL_PENDING_UPDATES {
            get {
                return ResourceManager.GetString("INSTALL_PENDING_UPDATES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Install [XenServer product] Tools ähnelt.
        /// </summary>
        public static string INSTALL_XENSERVER_TOOLS {
            get {
                return ResourceManager.GetString("INSTALL_XENSERVER_TOOLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Install [XenServer product] Tools... ähnelt.
        /// </summary>
        public static string INSTALL_XENSERVER_TOOLS_DOTS {
            get {
                return ResourceManager.GetString("INSTALL_XENSERVER_TOOLS_DOTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Install [XenServer product] Tools ähnelt.
        /// </summary>
        public static string INSTALL_XS_TOOLS {
            get {
                return ResourceManager.GetString("INSTALL_XS_TOOLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Installed Updates ähnelt.
        /// </summary>
        public static string INSTALLED_UPDATES {
            get {
                return ResourceManager.GetString("INSTALLED_UPDATES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not find a CD drive on the selected VM. ähnelt.
        /// </summary>
        public static string INSTALLTOOLS_COULDNOTFIND_CD {
            get {
                return ResourceManager.GetString("INSTALLTOOLS_COULDNOTFIND_CD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not find the [XenServer product] Tools install disc. ähnelt.
        /// </summary>
        public static string INSTALLTOOLS_COULDNOTFIND_WIN {
            get {
                return ResourceManager.GetString("INSTALLTOOLS_COULDNOTFIND_WIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer product] Tools installation launched. ähnelt.
        /// </summary>
        public static string INSTALLTOOLS_DONE {
            get {
                return ResourceManager.GetString("INSTALLTOOLS_DONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer product] Tools are already installed on this VM. ähnelt.
        /// </summary>
        public static string INSTALLTOOLS_EXIST {
            get {
                return ResourceManager.GetString("INSTALLTOOLS_EXIST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Launching [XenServer product] Tools installation. ähnelt.
        /// </summary>
        public static string INSTALLTOOLS_STARTING {
            get {
                return ResourceManager.GetString("INSTALLTOOLS_STARTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Installing [XenServer product] Tools on VM {0} ähnelt.
        /// </summary>
        public static string INSTALLTOOLS_TITLE {
            get {
                return ResourceManager.GetString("INSTALLTOOLS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating VM &apos;{0}&apos; from template &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string INSTANT_VM_CREATE_DESCRIPTION {
            get {
                return ResourceManager.GetString("INSTANT_VM_CREATE_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Instant VM create ähnelt.
        /// </summary>
        public static string INSTANT_VM_CREATE_TITLE {
            get {
                return ResourceManager.GetString("INSTANT_VM_CREATE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This server is currently not using the integrated GPU. ähnelt.
        /// </summary>
        public static string INTEGRATED_GPU_PASSTHROUGH_DISABLED {
            get {
                return ResourceManager.GetString("INTEGRATED_GPU_PASSTHROUGH_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not using the integrated GPU ähnelt.
        /// </summary>
        public static string INTEGRATED_GPU_PASSTHROUGH_DISABLED_SHORT {
            get {
                return ResourceManager.GetString("INTEGRATED_GPU_PASSTHROUGH_DISABLED_SHORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This server is currently using the integrated GPU. ähnelt.
        /// </summary>
        public static string INTEGRATED_GPU_PASSTHROUGH_ENABLED {
            get {
                return ResourceManager.GetString("INTEGRATED_GPU_PASSTHROUGH_ENABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Using the integrated GPU ähnelt.
        /// </summary>
        public static string INTEGRATED_GPU_PASSTHROUGH_ENABLED_SHORT {
            get {
                return ResourceManager.GetString("INTEGRATED_GPU_PASSTHROUGH_ENABLED_SHORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Interfaces: {0} ähnelt.
        /// </summary>
        public static string INTERFACES_COUNT {
            get {
                return ResourceManager.GetString("INTERFACES_COUNT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid hostname ähnelt.
        /// </summary>
        public static string INVALID_HOST {
            get {
                return ResourceManager.GetString("INVALID_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid number ähnelt.
        /// </summary>
        public static string INVALID_NUMBER {
            get {
                return ResourceManager.GetString("INVALID_NUMBER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This does not appear to be a valid OVF file. ähnelt.
        /// </summary>
        public static string INVALID_OVF {
            get {
                return ResourceManager.GetString("INVALID_OVF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid parameter ähnelt.
        /// </summary>
        public static string INVALID_PARAMETER {
            get {
                return ResourceManager.GetString("INVALID_PARAMETER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid session ähnelt.
        /// </summary>
        public static string INVALID_SESSION {
            get {
                return ResourceManager.GetString("INVALID_SESSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid URL to installer files ähnelt.
        /// </summary>
        public static string INVALID_URL {
            get {
                return ResourceManager.GetString("INVALID_URL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The specified network location contains an invalid version of the installer files ähnelt.
        /// </summary>
        public static string INVALID_VER {
            get {
                return ResourceManager.GetString("INVALID_VER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IP Address ähnelt.
        /// </summary>
        public static string IP_ADDRESS {
            get {
                return ResourceManager.GetString("IP_ADDRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die I&amp;P address: ähnelt.
        /// </summary>
        public static string IP_ADDRESS_LABEL {
            get {
                return ResourceManager.GetString("IP_ADDRESS_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die to {0}.{1}.{2}.{3} ähnelt.
        /// </summary>
        public static string IP_ADDRESS_RANGE_END {
            get {
                return ResourceManager.GetString("IP_ADDRESS_RANGE_END", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die I&amp;P address range: ähnelt.
        /// </summary>
        public static string IP_ADDRESS_RANGE_LABEL {
            get {
                return ResourceManager.GetString("IP_ADDRESS_RANGE_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown ähnelt.
        /// </summary>
        public static string IP_ADDRESS_UNKNOWN {
            get {
                return ResourceManager.GetString("IP_ADDRESS_UNKNOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Edit IQN ähnelt.
        /// </summary>
        public static string IQN_CHECK_EDIT {
            get {
                return ResourceManager.GetString("IQN_CHECK_EDIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} has an iSCSI-IQN ({1}) which already exists on {2}. This could cause problems with iSCSI storage on this network. ähnelt.
        /// </summary>
        public static string IQN_CHECK_EXISTS_TEXT {
            get {
                return ResourceManager.GetString("IQN_CHECK_EXISTS_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die iSCSI-IQN Exists ähnelt.
        /// </summary>
        public static string IQN_CHECK_EXISTS_TITLE {
            get {
                return ResourceManager.GetString("IQN_CHECK_EXISTS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} has no iSCSI-IQN. This could cause problems with iSCSI storage on this network. ähnelt.
        /// </summary>
        public static string IQN_CHECK_MISSING_TEXT {
            get {
                return ResourceManager.GetString("IQN_CHECK_MISSING_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die iSCSI-IQN Missing ähnelt.
        /// </summary>
        public static string IQN_CHECK_MISSING_TITLE {
            get {
                return ResourceManager.GetString("IQN_CHECK_MISSING_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die is ähnelt.
        /// </summary>
        public static string IS {
            get {
                return ResourceManager.GetString("IS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die is exactly ähnelt.
        /// </summary>
        public static string IS_EXACTLY {
            get {
                return ResourceManager.GetString("IS_EXACTLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Is in a pool ähnelt.
        /// </summary>
        public static string IS_IN_A_POOL {
            get {
                return ResourceManager.GetString("IS_IN_A_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VMs on StorageLink Gateway SR ähnelt.
        /// </summary>
        public static string IS_IN_STORAGELINK_SR {
            get {
                return ResourceManager.GetString("IS_IN_STORAGELINK_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die is not ähnelt.
        /// </summary>
        public static string IS_NOT {
            get {
                return ResourceManager.GetString("IS_NOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Is standalone ähnelt.
        /// </summary>
        public static string IS_STANDALONE {
            get {
                return ResourceManager.GetString("IS_STANDALONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SR size: {0}
        ///SR UUID: {1} ähnelt.
        /// </summary>
        public static string ISCSI_DIALOG_SR_DETAILS {
            get {
                return ResourceManager.GetString("ISCSI_DIALOG_SR_DETAILS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Vendor: {0}
        ///Serial Number: {1}
        ///SCSI ID: {2}
        ///Size: {3} ähnelt.
        /// </summary>
        public static string ISCSI_DIALOG_SR_DETAILS_FOR_FIBRECHANNEL {
            get {
                return ResourceManager.GetString("ISCSI_DIALOG_SR_DETAILS_FOR_FIBRECHANNEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Interrogation failed -- call succeeded! ähnelt.
        /// </summary>
        public static string ISCSI_FAIL {
            get {
                return ResourceManager.GetString("ISCSI_FAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SHOULD NEVER BE CREATED ähnelt.
        /// </summary>
        public static string ISCSI_SHOULD_NO_BE_CREATED {
            get {
                return ResourceManager.GetString("ISCSI_SHOULD_NO_BE_CREATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die StorageLink technology ähnelt.
        /// </summary>
        public static string ISL_SR {
            get {
                return ResourceManager.GetString("ISL_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Loaded ISO &apos;{0}&apos; into the DVD Drive on VM {1} ähnelt.
        /// </summary>
        public static string ISO_LOADED {
            get {
                return ResourceManager.GetString("ISO_LOADED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Loading ISO &apos;{0}&apos; into the DVD Drive on VM {1} ähnelt.
        /// </summary>
        public static string ISO_LOADING {
            get {
                return ResourceManager.GetString("ISO_LOADING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set DVD Drive on {0} as empty. ähnelt.
        /// </summary>
        public static string ISO_UNLOADED {
            get {
                return ResourceManager.GetString("ISO_UNLOADED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Setting DVD Drive on {0} as empty. ähnelt.
        /// </summary>
        public static string ISO_UNLOADING {
            get {
                return ResourceManager.GetString("ISO_UNLOADING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DVD drive {0} on {1} ähnelt.
        /// </summary>
        public static string ISOCOMBOBOX_CD_DRIVE {
            get {
                return ResourceManager.GetString("ISOCOMBOBOX_CD_DRIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please enter a user name and password with sufficient privileges to add servers to domain &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string JOINING_AD {
            get {
                return ResourceManager.GetString("JOINING_AD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Keep waiting ähnelt.
        /// </summary>
        public static string KEEP_WAITING_BUTTON_LABEL {
            get {
                return ResourceManager.GetString("KEEP_WAITING_BUTTON_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attempting to connect to {0}... ähnelt.
        /// </summary>
        public static string LABEL_ATTEMPT {
            get {
                return ResourceManager.GetString("LABEL_ATTEMPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Canceling connection to {0}... ähnelt.
        /// </summary>
        public static string LABEL_FAILED {
            get {
                return ResourceManager.GetString("LABEL_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Synchronizing with {0}... ähnelt.
        /// </summary>
        public static string LABEL_SYNC {
            get {
                return ResourceManager.GetString("LABEL_SYNC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The information is not available. ähnelt.
        /// </summary>
        public static string LAST_REFRESH_FAIL {
            get {
                return ResourceManager.GetString("LAST_REFRESH_FAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Loading... ähnelt.
        /// </summary>
        public static string LAST_REFRESH_IN_PROGRESS {
            get {
                return ResourceManager.GetString("LAST_REFRESH_IN_PROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Last refresh: {0} ähnelt.
        /// </summary>
        public static string LAST_REFRESH_SUCCESS {
            get {
                return ResourceManager.GetString("LAST_REFRESH_SUCCESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die was last week ähnelt.
        /// </summary>
        public static string LAST_WEEK {
            get {
                return ResourceManager.GetString("LAST_WEEK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die License Manager ähnelt.
        /// </summary>
        public static string LAUNCH_LICENSE_MANAGER {
            get {
                return ResourceManager.GetString("LAUNCH_LICENSE_MANAGER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter a user name and password with sufficient privileges to remove your machine account from AD. Authentication will be disabled even if the machine account cannot be removed. ähnelt.
        /// </summary>
        public static string LEAVING_AD {
            get {
                return ResourceManager.GetString("LEAVING_AD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Left Alt ähnelt.
        /// </summary>
        public static string LEFT_ALT {
            get {
                return ResourceManager.GetString("LEFT_ALT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt; {0} ähnelt.
        /// </summary>
        public static string LESS_THAN {
            get {
                return ResourceManager.GetString("LESS_THAN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Activated ähnelt.
        /// </summary>
        public static string LICENSE_ACTIVATED {
            get {
                return ResourceManager.GetString("LICENSE_ACTIVATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The licensing action for {0} failed. ähnelt.
        /// </summary>
        public static string LICENSE_ERROR_1 {
            get {
                return ResourceManager.GetString("LICENSE_ERROR_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The licensing action failed for {0} out of {1} of the selected servers. ähnelt.
        /// </summary>
        public static string LICENSE_ERROR_MANY {
            get {
                return ResourceManager.GetString("LICENSE_ERROR_MANY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Licensing Error ähnelt.
        /// </summary>
        public static string LICENSE_ERROR_TITLE {
            get {
                return ResourceManager.GetString("LICENSE_ERROR_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die License expired ähnelt.
        /// </summary>
        public static string LICENSE_EXPIRED {
            get {
                return ResourceManager.GetString("LICENSE_EXPIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No licenses available ähnelt.
        /// </summary>
        public static string LICENSE_EXPIRED_NO_LICENSES_AVAILABLE {
            get {
                return ResourceManager.GetString("LICENSE_EXPIRED_NO_LICENSES_AVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A server license has expired or is in need of activation. ähnelt.
        /// </summary>
        public static string LICENSE_EXPIRED_OR_NEEDS_ACTIVATION {
            get {
                return ResourceManager.GetString("LICENSE_EXPIRED_OR_NEEDS_ACTIVATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expires in {0} days ähnelt.
        /// </summary>
        public static string LICENSE_EXPIRES_DAYS {
            get {
                return ResourceManager.GetString("LICENSE_EXPIRES_DAYS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expires in {0} hours ähnelt.
        /// </summary>
        public static string LICENSE_EXPIRES_HOURS {
            get {
                return ResourceManager.GetString("LICENSE_EXPIRES_HOURS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expires in {0} minutes ähnelt.
        /// </summary>
        public static string LICENSE_EXPIRES_MINUTES {
            get {
                return ResourceManager.GetString("LICENSE_EXPIRES_MINUTES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expires in 1 minute ähnelt.
        /// </summary>
        public static string LICENSE_EXPIRES_ONE_MIN {
            get {
                return ResourceManager.GetString("LICENSE_EXPIRES_ONE_MIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer] Online ähnelt.
        /// </summary>
        public static string LICENSE_EXPIRY_PURCHACE {
            get {
                return ResourceManager.GetString("LICENSE_EXPIRY_PURCHACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This field is disabled due to license restrictions on the server. ähnelt.
        /// </summary>
        public static string LICENSE_FIELD_DISABLED {
            get {
                return ResourceManager.GetString("LICENSE_FIELD_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The selected license file does not exist ähnelt.
        /// </summary>
        public static string LICENSE_FILE_DOES_NOT_EXIST {
            get {
                return ResourceManager.GetString("LICENSE_FILE_DOES_NOT_EXIST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The selected file is too large to be a license ähnelt.
        /// </summary>
        public static string LICENSE_FILE_TOO_LARGE {
            get {
                return ResourceManager.GetString("LICENSE_FILE_TOO_LARGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Free ähnelt.
        /// </summary>
        public static string LICENSE_FREE {
            get {
                return ResourceManager.GetString("LICENSE_FREE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A selected host is no longer active ähnelt.
        /// </summary>
        public static string LICENSE_HOST_NOT_LIVE {
            get {
                return ResourceManager.GetString("LICENSE_HOST_NOT_LIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Licensed ähnelt.
        /// </summary>
        public static string LICENSE_LICENSED {
            get {
                return ResourceManager.GetString("LICENSE_LICENSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Buy Licenses... ähnelt.
        /// </summary>
        public static string LICENSE_MANAGER_BUY_LICENSE_LINK_TEXT {
            get {
                return ResourceManager.GetString("LICENSE_MANAGER_BUY_LICENSE_LINK_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die License Expires: ähnelt.
        /// </summary>
        public static string LICENSE_MANAGER_SUMMARY_LICENSE_EXPIRES {
            get {
                return ResourceManager.GetString("LICENSE_MANAGER_SUMMARY_LICENSE_EXPIRES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die License Server: ähnelt.
        /// </summary>
        public static string LICENSE_MANAGER_SUMMARY_LICENSE_SERVER {
            get {
                return ResourceManager.GetString("LICENSE_MANAGER_SUMMARY_LICENSE_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sockets: ähnelt.
        /// </summary>
        public static string LICENSE_MANAGER_SUMMARY_LICENSE_SOCKETS {
            get {
                return ResourceManager.GetString("LICENSE_MANAGER_SUMMARY_LICENSE_SOCKETS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die License Type: ähnelt.
        /// </summary>
        public static string LICENSE_MANAGER_SUMMARY_LICENSE_TYPE {
            get {
                return ResourceManager.GetString("LICENSE_MANAGER_SUMMARY_LICENSE_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Never ähnelt.
        /// </summary>
        public static string LICENSE_NEVER {
            get {
                return ResourceManager.GetString("LICENSE_NEVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The license for a host cannot be changed when HA is on ähnelt.
        /// </summary>
        public static string LICENSE_NO_HA {
            get {
                return ResourceManager.GetString("LICENSE_NO_HA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Servers must be selected one at a time when activating free [XenServer]. ähnelt.
        /// </summary>
        public static string LICENSE_NO_MULTISELECT_ACTIVATE {
            get {
                return ResourceManager.GetString("LICENSE_NO_MULTISELECT_ACTIVATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Servers must be selected one at a time when licensing servers which have a version lower than [BRANDING_VERSION_5_6]. ähnelt.
        /// </summary>
        public static string LICENSE_NO_MULTISELECT_LICENSE {
            get {
                return ResourceManager.GetString("LICENSE_NO_MULTISELECT_LICENSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not eligible for support ähnelt.
        /// </summary>
        public static string LICENSE_NOT_ELIGIBLE_FOR_SUPPORT {
            get {
                return ResourceManager.GetString("LICENSE_NOT_ELIGIBLE_FOR_SUPPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The license server {0} could not be reached. You have until {1} to reconnect to the license server. ähnelt.
        /// </summary>
        public static string LICENSE_REGULAR_GRACE_TOOLTIP {
            get {
                return ResourceManager.GetString("LICENSE_REGULAR_GRACE_TOOLTIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die License Restriction: Could not connect to {0}, a server with an XE Express License already exists ({1}) ähnelt.
        /// </summary>
        public static string LICENSE_RESTRICTION_MESSAGE {
            get {
                return ResourceManager.GetString("LICENSE_RESTRICTION_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your support and maintenance has expired ähnelt.
        /// </summary>
        public static string LICENSE_SA_EXPIRED {
            get {
                return ResourceManager.GetString("LICENSE_SA_EXPIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your support and maintenance expires in {0} ähnelt.
        /// </summary>
        public static string LICENSE_SA_EXPIRES_IN {
            get {
                return ResourceManager.GetString("LICENSE_SA_EXPIRES_IN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not open {0} ähnelt.
        /// </summary>
        public static string LICENSE_SERVER_COULD_NOT_OPEN_LINK {
            get {
                return ResourceManager.GetString("LICENSE_SERVER_COULD_NOT_OPEN_LINK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}:{1} ähnelt.
        /// </summary>
        public static string LICENSE_SERVER_PORT_FORMAT {
            get {
                return ResourceManager.GetString("LICENSE_SERVER_PORT_FORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die http://{0}:{1} ähnelt.
        /// </summary>
        public static string LICENSE_SERVER_WEB_CONSOLE_FORMAT {
            get {
                return ResourceManager.GetString("LICENSE_SERVER_WEB_CONSOLE_FORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Go to... ähnelt.
        /// </summary>
        public static string LICENSE_SERVER_WEB_CONSOLE_GOTO {
            get {
                return ResourceManager.GetString("LICENSE_SERVER_WEB_CONSOLE_GOTO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Status ähnelt.
        /// </summary>
        public static string LICENSE_STATUS {
            get {
                return ResourceManager.GetString("LICENSE_STATUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Eligible for support 
        ///XenAdd/XenDesktop [Citrix] Cloud features enabled ähnelt.
        /// </summary>
        public static string LICENSE_SUPPORT_AND_DESKTOP_CLOUD_FEATURES_ENABLED {
            get {
                return ResourceManager.GetString("LICENSE_SUPPORT_AND_DESKTOP_CLOUD_FEATURES_ENABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Eligible for support 
        ///XenApp/XenDesktop features enabled ähnelt.
        /// </summary>
        public static string LICENSE_SUPPORT_AND_DESKTOP_FEATURES_ENABLED {
            get {
                return ResourceManager.GetString("LICENSE_SUPPORT_AND_DESKTOP_FEATURES_ENABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Eligible for support 
        ///XenApp/XenDesktop Platinum features enabled ähnelt.
        /// </summary>
        public static string LICENSE_SUPPORT_AND_DESKTOP_PLUS_FEATURES_ENABLED {
            get {
                return ResourceManager.GetString("LICENSE_SUPPORT_AND_DESKTOP_PLUS_FEATURES_ENABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Eligible for support 
        ///Enterprise features enabled ähnelt.
        /// </summary>
        public static string LICENSE_SUPPORT_AND_ENTERPRISE_FEATURES_ENABLED {
            get {
                return ResourceManager.GetString("LICENSE_SUPPORT_AND_ENTERPRISE_FEATURES_ENABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Eligible for support 
        ///Premium features enabled ähnelt.
        /// </summary>
        public static string LICENSE_SUPPORT_AND_PREMIUM_FEATURES_ENABLED {
            get {
                return ResourceManager.GetString("LICENSE_SUPPORT_AND_PREMIUM_FEATURES_ENABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Eligible for support 
        ///Standard features only ähnelt.
        /// </summary>
        public static string LICENSE_SUPPORT_AND_STANDARD_FEATURES_ENABLED {
            get {
                return ResourceManager.GetString("LICENSE_SUPPORT_AND_STANDARD_FEATURES_ENABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Activation keys can only be applied to one Free [XenServer] product at a time. ähnelt.
        /// </summary>
        public static string LICENSE_TOO_MANY_SERVERS_SELECTED_CAPTION {
            get {
                return ResourceManager.GetString("LICENSE_TOO_MANY_SERVERS_SELECTED_CAPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unlicensed ähnelt.
        /// </summary>
        public static string LICENSE_UNLICENSED {
            get {
                return ResourceManager.GetString("LICENSE_UNLICENSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unsupported ähnelt.
        /// </summary>
        public static string LICENSE_UNSUPPORTED {
            get {
                return ResourceManager.GetString("LICENSE_UNSUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Updating... ähnelt.
        /// </summary>
        public static string LICENSE_UPDATING {
            get {
                return ResourceManager.GetString("LICENSE_UPDATING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Updating Licenses ähnelt.
        /// </summary>
        public static string LICENSE_UPDATING_LICENSES {
            get {
                return ResourceManager.GetString("LICENSE_UPDATING_LICENSES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This host has been upgraded. You have until {0} to license this server. ähnelt.
        /// </summary>
        public static string LICENSE_UPGRADE_GRACE_TOOLTIP {
            get {
                return ResourceManager.GetString("LICENSE_UPGRADE_GRACE_TOOLTIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A server license will expire or need activation within 30 days. ähnelt.
        /// </summary>
        public static string LICENSE_WILL_EXPIRE {
            get {
                return ResourceManager.GetString("LICENSE_WILL_EXPIRE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your license expires in {0} ähnelt.
        /// </summary>
        public static string LICENSE_YOUR_LICENCE_EXPIRES_IN {
            get {
                return ResourceManager.GetString("LICENSE_YOUR_LICENCE_EXPIRES_IN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your license has expired ähnelt.
        /// </summary>
        public static string LICENSE_YOUR_LICENCE_HAS_EXPIRED {
            get {
                return ResourceManager.GetString("LICENSE_YOUR_LICENCE_HAS_EXPIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die One or more managed servers have expired. Either assign [XenServer] licenses, or activate Free [XenServer] products. ähnelt.
        /// </summary>
        public static string LICENSING_DIALOG_EXPIRED_TEXT {
            get {
                return ResourceManager.GetString("LICENSING_DIALOG_EXPIRED_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die One or more managed servers will expire soon. Either assign [XenServer] licenses, or activate Free [XenServer] products. ähnelt.
        /// </summary>
        public static string LICENSING_DIALOG_EXPIRING_SOON_TEXT {
            get {
                return ResourceManager.GetString("LICENSING_DIALOG_EXPIRING_SOON_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Link Status ähnelt.
        /// </summary>
        public static string LINK_STATUS {
            get {
                return ResourceManager.GetString("LINK_STATUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ,  ähnelt.
        /// </summary>
        public static string LIST_SEPARATOR {
            get {
                return ResourceManager.GetString("LIST_SEPARATOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Live Patching ähnelt.
        /// </summary>
        public static string LIVE_PATCHING {
            get {
                return ResourceManager.GetString("LIVE_PATCHING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Live patching failed for servers {0}. To apply the patch, please put the servers into maintenance mode and reboot them. ähnelt.
        /// </summary>
        public static string LIVE_PATCHING_FAILED_MULTI_HOST {
            get {
                return ResourceManager.GetString("LIVE_PATCHING_FAILED_MULTI_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Live patching failed for server ‘{0}’. To apply the patch, please put the server into maintenance mode and reboot it. ähnelt.
        /// </summary>
        public static string LIVE_PATCHING_FAILED_ONE_HOST {
            get {
                return ResourceManager.GetString("LIVE_PATCHING_FAILED_ONE_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Loading &apos;{0}&apos;... ähnelt.
        /// </summary>
        public static string LOADING {
            get {
                return ResourceManager.GetString("LOADING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Local ähnelt.
        /// </summary>
        public static string LOCAL {
            get {
                return ResourceManager.GetString("LOCAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Local Storage Repositories ähnelt.
        /// </summary>
        public static string LOCAL_SRS {
            get {
                return ResourceManager.GetString("LOCAL_SRS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You have selected storage local to {0} that cannot be seen from this server ähnelt.
        /// </summary>
        public static string LOCAL_STORAGE_CANNOT_BE_SEEN {
            get {
                return ResourceManager.GetString("LOCAL_STORAGE_CANNOT_BE_SEEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot move virtual disks between local SRs ähnelt.
        /// </summary>
        public static string LOCAL_TO_LOCAL_MOVE {
            get {
                return ResourceManager.GetString("LOCAL_TO_LOCAL_MOVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Location: ähnelt.
        /// </summary>
        public static string LOCATION_LABEL {
            get {
                return ResourceManager.GetString("LOCATION_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Log Destination ähnelt.
        /// </summary>
        public static string LOG_DESTINATION {
            get {
                return ResourceManager.GetString("LOG_DESTINATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Logged in as: {0} ähnelt.
        /// </summary>
        public static string LOGGED_IN_AS {
            get {
                return ResourceManager.GetString("LOGGED_IN_AS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Logging in to the iSCSI target failed. ähnelt.
        /// </summary>
        public static string LOGGING_IN_TO_THE_ISCSI_TARGET_FAILED {
            get {
                return ResourceManager.GetString("LOGGING_IN_TO_THE_ISCSI_TARGET_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die LUN-per-VDI Mapping ähnelt.
        /// </summary>
        public static string LUNPERVDI_PAGE_NAME {
            get {
                return ResourceManager.GetString("LUNPERVDI_PAGE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Map virtual disks (VDIs) to individual LUNs on the target SR ähnelt.
        /// </summary>
        public static string LUNPERVDI_PAGE_TITLE {
            get {
                return ResourceManager.GetString("LUNPERVDI_PAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VM - VDI (Virtual Disks) ähnelt.
        /// </summary>
        public static string LUNPERVDIPICKER_IMPORT_VDI_COLUMN_TITLE {
            get {
                return ResourceManager.GetString("LUNPERVDIPICKER_IMPORT_VDI_COLUMN_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VDI (Virtual Disks) ähnelt.
        /// </summary>
        public static string LUNPERVDIPICKER_VDI_COLUMN_TITLE {
            get {
                return ResourceManager.GetString("LUNPERVDIPICKER_VDI_COLUMN_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An existing SR was found on the selected LUN ähnelt.
        /// </summary>
        public static string LVMOHBA_WARNING_DIALOG_HEADER_FOUND_EXISTING_SR {
            get {
                return ResourceManager.GetString("LVMOHBA_WARNING_DIALOG_HEADER_FOUND_EXISTING_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No existing SRs were found on the selected LUN ähnelt.
        /// </summary>
        public static string LVMOHBA_WARNING_DIALOG_HEADER_NO_EXISTING_SRS {
            get {
                return ResourceManager.GetString("LVMOHBA_WARNING_DIALOG_HEADER_NO_EXISTING_SRS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Vendor: {0}
        ///Serial Number: {1}
        ///SCSI ID: {2}
        ///Size: {3} ähnelt.
        /// </summary>
        public static string LVMOHBA_WARNING_DIALOG_LUN_DETAILS {
            get {
                return ResourceManager.GetString("LVMOHBA_WARNING_DIALOG_LUN_DETAILS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There is no existing SR to reattach ähnelt.
        /// </summary>
        public static string LVMOHBA_WARNING_DIALOG_REATTACH_LABEL_TEXT {
            get {
                return ResourceManager.GetString("LVMOHBA_WARNING_DIALOG_REATTACH_LABEL_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Do this for all remaining LUNs without existing SRs ähnelt.
        /// </summary>
        public static string LVMOHBA_WARNING_DIALOG_REPEAT_FOR_REMAINING_NO_SR {
            get {
                return ResourceManager.GetString("LVMOHBA_WARNING_DIALOG_REPEAT_FOR_REMAINING_NO_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Do this for all remaining LUNs ähnelt.
        /// </summary>
        public static string LVMOHBA_WARNING_DIALOG_REPEAT_FOR_REMAINING_WITH_SR {
            get {
                return ResourceManager.GetString("LVMOHBA_WARNING_DIALOG_REPEAT_FOR_REMAINING_WITH_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MAC ähnelt.
        /// </summary>
        public static string MAC {
            get {
                return ResourceManager.GetString("MAC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die auto-generate ähnelt.
        /// </summary>
        public static string MAC_AUTOGENERATE {
            get {
                return ResourceManager.GetString("MAC_AUTOGENERATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid MAC address. ähnelt.
        /// </summary>
        public static string MAC_INVALID {
            get {
                return ResourceManager.GetString("MAC_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die zh-CN ähnelt.
        /// </summary>
        public static string MAIL_LANGUAGE_CHINESE_CODE {
            get {
                return ResourceManager.GetString("MAIL_LANGUAGE_CHINESE_CODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Chinese (Simplified) ähnelt.
        /// </summary>
        public static string MAIL_LANGUAGE_CHINESE_NAME {
            get {
                return ResourceManager.GetString("MAIL_LANGUAGE_CHINESE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die en-US ähnelt.
        /// </summary>
        public static string MAIL_LANGUAGE_ENGLISH_CODE {
            get {
                return ResourceManager.GetString("MAIL_LANGUAGE_ENGLISH_CODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die English (United States) ähnelt.
        /// </summary>
        public static string MAIL_LANGUAGE_ENGLISH_NAME {
            get {
                return ResourceManager.GetString("MAIL_LANGUAGE_ENGLISH_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ja-JP ähnelt.
        /// </summary>
        public static string MAIL_LANGUAGE_JAPANESE_CODE {
            get {
                return ResourceManager.GetString("MAIL_LANGUAGE_JAPANESE_CODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Japanese (Japan) ähnelt.
        /// </summary>
        public static string MAIL_LANGUAGE_JAPANESE_NAME {
            get {
                return ResourceManager.GetString("MAIL_LANGUAGE_JAPANESE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maintenance Mode ähnelt.
        /// </summary>
        public static string MAINTENANCE_MODE {
            get {
                return ResourceManager.GetString("MAINTENANCE_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Add... ähnelt.
        /// </summary>
        public static string MAINWINDOW_ADD_HOST {
            get {
                return ResourceManager.GetString("MAINWINDOW_ADD_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you want to migrate the VM {0} to the server {1}? ähnelt.
        /// </summary>
        public static string MAINWINDOW_CONFIRM_MIGRATE {
            get {
                return ResourceManager.GetString("MAINWINDOW_CONFIRM_MIGRATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you want to migrate the selected VMs to the server {0}? ähnelt.
        /// </summary>
        public static string MAINWINDOW_CONFIRM_MIGRATE_MULTIPLE {
            get {
                return ResourceManager.GetString("MAINWINDOW_CONFIRM_MIGRATE_MULTIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you want to move the server {0} into the pool {1}? ähnelt.
        /// </summary>
        public static string MAINWINDOW_CONFIRM_MOVE_TO_POOL {
            get {
                return ResourceManager.GetString("MAINWINDOW_CONFIRM_MOVE_TO_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you want to move the selected servers into the pool {0}? ähnelt.
        /// </summary>
        public static string MAINWINDOW_CONFIRM_MOVE_TO_POOL_MULTIPLE {
            get {
                return ResourceManager.GetString("MAINWINDOW_CONFIRM_MOVE_TO_POOL_MULTIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you want to remove &apos;{0}&apos; from pool &apos;{1}&apos;? 
        ///
        ///This will permanently delete and reinitialize all local storage on &apos;{2}&apos;. Your data will be lost, and the server will be rebooted. ähnelt.
        /// </summary>
        public static string MAINWINDOW_CONFIRM_REMOVE_FROM_POOL {
            get {
                return ResourceManager.GetString("MAINWINDOW_CONFIRM_REMOVE_FROM_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you want to remove the selected servers from pool &apos;{0}&apos;?
        ///
        ///This will permanently delete and reinitialize all local storage on the servers. Your data will be lost, and the servers will be rebooted. ähnelt.
        /// </summary>
        public static string MAINWINDOW_CONFIRM_REMOVE_FROM_POOL_MULTIPLE {
            get {
                return ResourceManager.GetString("MAINWINDOW_CONFIRM_REMOVE_FROM_POOL_MULTIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove From Pool ähnelt.
        /// </summary>
        public static string MAINWINDOW_CONFIRM_REMOVE_FROM_POOL_TITLE {
            get {
                return ResourceManager.GetString("MAINWINDOW_CONFIRM_REMOVE_FROM_POOL_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Yes, Remove ähnelt.
        /// </summary>
        public static string MAINWINDOW_CONFIRM_REMOVE_FROM_POOL_YES_BUTTON_LABEL {
            get {
                return ResourceManager.GetString("MAINWINDOW_CONFIRM_REMOVE_FROM_POOL_YES_BUTTON_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die C&amp;onnect All ähnelt.
        /// </summary>
        public static string MAINWINDOW_CONNECT_ALL_HOSTS {
            get {
                return ResourceManager.GetString("MAINWINDOW_CONNECT_ALL_HOSTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Connect ähnelt.
        /// </summary>
        public static string MAINWINDOW_CONNECTHOST {
            get {
                return ResourceManager.GetString("MAINWINDOW_CONNECTHOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} ({1}) ähnelt.
        /// </summary>
        public static string MAINWINDOW_CONTEXT_REASON {
            get {
                return ResourceManager.GetString("MAINWINDOW_CONTEXT_REASON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} (Updating...) ähnelt.
        /// </summary>
        public static string MAINWINDOW_CONTEXT_UPDATING {
            get {
                return ResourceManager.GetString("MAINWINDOW_CONTEXT_UPDATING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Add Server ähnelt.
        /// </summary>
        public static string MAINWINDOW_CONTEXTMENU_ADD_SERVER {
            get {
                return ResourceManager.GetString("MAINWINDOW_CONTEXTMENU_ADD_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Convert to &amp;Template... ähnelt.
        /// </summary>
        public static string MAINWINDOW_CONVERT_VM_TO_TEMPLATE {
            get {
                return ResourceManager.GetString("MAINWINDOW_CONVERT_VM_TO_TEMPLATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Co&amp;nvert to Template... ähnelt.
        /// </summary>
        public static string MAINWINDOW_CONVERT_VM_TO_TEMPLATE_CONTEXT_MENU {
            get {
                return ResourceManager.GetString("MAINWINDOW_CONVERT_VM_TO_TEMPLATE_CONTEXT_MENU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Copy... ähnelt.
        /// </summary>
        public static string MAINWINDOW_COPY_TEMPLATE {
            get {
                return ResourceManager.GetString("MAINWINDOW_COPY_TEMPLATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Copy VM... ähnelt.
        /// </summary>
        public static string MAINWINDOW_COPY_VM {
            get {
                return ResourceManager.GetString("MAINWINDOW_COPY_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ctrl+B ähnelt.
        /// </summary>
        public static string MAINWINDOW_CTRL_B {
            get {
                return ResourceManager.GetString("MAINWINDOW_CTRL_B", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ctrl+E ähnelt.
        /// </summary>
        public static string MAINWINDOW_CTRL_E {
            get {
                return ResourceManager.GetString("MAINWINDOW_CTRL_E", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ctrl+N ähnelt.
        /// </summary>
        public static string MAINWINDOW_CTRL_N {
            get {
                return ResourceManager.GetString("MAINWINDOW_CTRL_N", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ctrl+R ähnelt.
        /// </summary>
        public static string MAINWINDOW_CTRL_R {
            get {
                return ResourceManager.GetString("MAINWINDOW_CTRL_R", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ctrl+S ähnelt.
        /// </summary>
        public static string MAINWINDOW_CTRL_S {
            get {
                return ResourceManager.GetString("MAINWINDOW_CTRL_S", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ctrl+Y ähnelt.
        /// </summary>
        public static string MAINWINDOW_CTRL_Y {
            get {
                return ResourceManager.GetString("MAINWINDOW_CTRL_Y", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die De&amp;lete... ähnelt.
        /// </summary>
        public static string MAINWINDOW_DELETE_OBJECTS {
            get {
                return ResourceManager.GetString("MAINWINDOW_DELETE_OBJECTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mak&amp;e into standalone server ähnelt.
        /// </summary>
        public static string MAINWINDOW_DELETE_POOL {
            get {
                return ResourceManager.GetString("MAINWINDOW_DELETE_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Delete Tag... ähnelt.
        /// </summary>
        public static string MAINWINDOW_DELETE_TAG {
            get {
                return ResourceManager.GetString("MAINWINDOW_DELETE_TAG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Delete Tags... ähnelt.
        /// </summary>
        public static string MAINWINDOW_DELETE_TAGS {
            get {
                return ResourceManager.GetString("MAINWINDOW_DELETE_TAGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Delete Template... ähnelt.
        /// </summary>
        public static string MAINWINDOW_DELETE_TEMPLATE {
            get {
                return ResourceManager.GetString("MAINWINDOW_DELETE_TEMPLATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Delete VM... ähnelt.
        /// </summary>
        public static string MAINWINDOW_DELETE_VM {
            get {
                return ResourceManager.GetString("MAINWINDOW_DELETE_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Destr&amp;oy... ähnelt.
        /// </summary>
        public static string MAINWINDOW_DESTROY_SR {
            get {
                return ResourceManager.GetString("MAINWINDOW_DESTROY_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Detach... ähnelt.
        /// </summary>
        public static string MAINWINDOW_DETACH_SR {
            get {
                return ResourceManager.GetString("MAINWINDOW_DETACH_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die D&amp;isable Changed Block Tracking ähnelt.
        /// </summary>
        public static string MAINWINDOW_DISABLE_CHANGED_BLOCK_TRACKING {
            get {
                return ResourceManager.GetString("MAINWINDOW_DISABLE_CHANGED_BLOCK_TRACKING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dis&amp;connect ähnelt.
        /// </summary>
        public static string MAINWINDOW_DISCONNECT {
            get {
                return ResourceManager.GetString("MAINWINDOW_DISCONNECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Di&amp;sconnect All ähnelt.
        /// </summary>
        public static string MAINWINDOW_DISCONNECT_ALL_HOSTS {
            get {
                return ResourceManager.GetString("MAINWINDOW_DISCONNECT_ALL_HOSTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Disconnect ähnelt.
        /// </summary>
        public static string MAINWINDOW_DISCONNECT_CONTEXT_MENU {
            get {
                return ResourceManager.GetString("MAINWINDOW_DISCONNECT_CONTEXT_MENU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Disconnect ähnelt.
        /// </summary>
        public static string MAINWINDOW_DISCONNECT_CONTEXT_MENU_POOL {
            get {
                return ResourceManager.GetString("MAINWINDOW_DISCONNECT_CONTEXT_MENU_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Edit Ta&amp;gs... ähnelt.
        /// </summary>
        public static string MAINWINDOW_EDIT_TAGS {
            get {
                return ResourceManager.GetString("MAINWINDOW_EDIT_TAGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The [XenServer] license on &apos;{0}&apos; will expire in {1}. ähnelt.
        /// </summary>
        public static string MAINWINDOW_EXPIRE_MESSAGE {
            get {
                return ResourceManager.GetString("MAINWINDOW_EXPIRE_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The [XenServer] license on &apos;{0}&apos; has expired. ähnelt.
        /// </summary>
        public static string MAINWINDOW_EXPIRE_MESSAGE_TOO_LATE {
            get {
                return ResourceManager.GetString("MAINWINDOW_EXPIRE_MESSAGE_TOO_LATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die E&amp;xport Resource Data... ähnelt.
        /// </summary>
        public static string MAINWINDOW_EXPORT_POOL_RESOURCE_DATA {
            get {
                return ResourceManager.GetString("MAINWINDOW_EXPORT_POOL_RESOURCE_DATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Export to File... ähnelt.
        /// </summary>
        public static string MAINWINDOW_EXPORT_TEMPLATE {
            get {
                return ResourceManager.GetString("MAINWINDOW_EXPORT_TEMPLATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export to Fi&amp;le... ähnelt.
        /// </summary>
        public static string MAINWINDOW_EXPORT_VM_AS_BACKUP {
            get {
                return ResourceManager.GetString("MAINWINDOW_EXPORT_VM_AS_BACKUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The VM must be shut down before it can be exported. ähnelt.
        /// </summary>
        public static string MAINWINDOW_EXPORT_VM_AS_BACKUP_TOOLTIP {
            get {
                return ResourceManager.GetString("MAINWINDOW_EXPORT_VM_AS_BACKUP_TOOLTIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Force Re&amp;boot ähnelt.
        /// </summary>
        public static string MAINWINDOW_FORCE_REBOOT {
            get {
                return ResourceManager.GetString("MAINWINDOW_FORCE_REBOOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Force Shut &amp;Down ähnelt.
        /// </summary>
        public static string MAINWINDOW_FORCE_SHUTDOWN {
            get {
                return ResourceManager.GetString("MAINWINDOW_FORCE_SHUTDOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Force Shut Do&amp;wn ähnelt.
        /// </summary>
        public static string MAINWINDOW_FORCE_SHUTDOWN_CONTEXT_MENU {
            get {
                return ResourceManager.GetString("MAINWINDOW_FORCE_SHUTDOWN_CONTEXT_MENU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Forget Password ähnelt.
        /// </summary>
        public static string MAINWINDOW_FORGET_SAVED_PASSWORD {
            get {
                return ResourceManager.GetString("MAINWINDOW_FORGET_SAVED_PASSWORD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Forget ähnelt.
        /// </summary>
        public static string MAINWINDOW_FORGET_SR {
            get {
                return ResourceManager.GetString("MAINWINDOW_FORGET_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (Licensed with {0}) ähnelt.
        /// </summary>
        public static string MAINWINDOW_HEADER_LICENSED_WITH {
            get {
                return ResourceManager.GetString("MAINWINDOW_HEADER_LICENSED_WITH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (Unlicensed) ähnelt.
        /// </summary>
        public static string MAINWINDOW_HEADER_UNLICENSED {
            get {
                return ResourceManager.GetString("MAINWINDOW_HEADER_UNLICENSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;High Availability... ähnelt.
        /// </summary>
        public static string MAINWINDOW_HIGH_AVAILABILITY {
            get {
                return ResourceManager.GetString("MAINWINDOW_HIGH_AVAILABILITY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Inst&amp;all [XenServer product] Tools... ähnelt.
        /// </summary>
        public static string MAINWINDOW_INSTALL_TOOLS {
            get {
                return ResourceManager.GetString("MAINWINDOW_INSTALL_TOOLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Quick Create ähnelt.
        /// </summary>
        public static string MAINWINDOW_INSTANT_VM_FROM_TEMPLATE {
            get {
                return ResourceManager.GetString("MAINWINDOW_INSTANT_VM_FROM_TEMPLATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Removed connection to {0} ähnelt.
        /// </summary>
        public static string MAINWINDOW_LOG_REMOVECONNECTION {
            get {
                return ResourceManager.GetString("MAINWINDOW_LOG_REMOVECONNECTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die M&amp;igrate to Server ähnelt.
        /// </summary>
        public static string MAINWINDOW_MIGRATE_TO_SERVER {
            get {
                return ResourceManager.GetString("MAINWINDOW_MIGRATE_TO_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Migrate VM... ähnelt.
        /// </summary>
        public static string MAINWINDOW_MIGRATEVM {
            get {
                return ResourceManager.GetString("MAINWINDOW_MIGRATEVM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Move... ähnelt.
        /// </summary>
        public static string MAINWINDOW_MOVE_OBJECTS {
            get {
                return ResourceManager.GetString("MAINWINDOW_MOVE_OBJECTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Move VM... ähnelt.
        /// </summary>
        public static string MAINWINDOW_MOVEVM {
            get {
                return ResourceManager.GetString("MAINWINDOW_MOVEVM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;New SR... ähnelt.
        /// </summary>
        public static string MAINWINDOW_NEW_STORAGE {
            get {
                return ResourceManager.GetString("MAINWINDOW_NEW_STORAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;New VM... ähnelt.
        /// </summary>
        public static string MAINWINDOW_NEW_VM {
            get {
                return ResourceManager.GetString("MAINWINDOW_NEW_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New V&amp;M... ähnelt.
        /// </summary>
        public static string MAINWINDOW_NEW_VM_CONTEXT_MENU {
            get {
                return ResourceManager.GetString("MAINWINDOW_NEW_VM_CONTEXT_MENU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;New VM wizard... ähnelt.
        /// </summary>
        public static string MAINWINDOW_NEW_VM_FROM_TEMPLATE {
            get {
                return ResourceManager.GetString("MAINWINDOW_NEW_VM_FROM_TEMPLATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;New Pool... ähnelt.
        /// </summary>
        public static string MAINWINDOW_NEWPOOL {
            get {
                return ResourceManager.GetString("MAINWINDOW_NEWPOOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Pause ähnelt.
        /// </summary>
        public static string MAINWINDOW_PAUSE {
            get {
                return ResourceManager.GetString("MAINWINDOW_PAUSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Power O&amp;n ähnelt.
        /// </summary>
        public static string MAINWINDOW_POWER_ON {
            get {
                return ResourceManager.GetString("MAINWINDOW_POWER_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Po&amp;wer On ähnelt.
        /// </summary>
        public static string MAINWINDOW_POWER_ON_CONTEXT_MENU {
            get {
                return ResourceManager.GetString("MAINWINDOW_POWER_ON_CONTEXT_MENU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Power On ähnelt.
        /// </summary>
        public static string MAINWINDOW_POWER_ON_NO_AMP {
            get {
                return ResourceManager.GetString("MAINWINDOW_POWER_ON_NO_AMP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die R&amp;eattach... ähnelt.
        /// </summary>
        public static string MAINWINDOW_REATTACH_SR {
            get {
                return ResourceManager.GetString("MAINWINDOW_REATTACH_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reb&amp;oot ähnelt.
        /// </summary>
        public static string MAINWINDOW_REBOOT {
            get {
                return ResourceManager.GetString("MAINWINDOW_REBOOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reb&amp;oot ähnelt.
        /// </summary>
        public static string MAINWINDOW_REBOOT_CONTEXT_MENU {
            get {
                return ResourceManager.GetString("MAINWINDOW_REBOOT_CONTEXT_MENU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Re&amp;boot ähnelt.
        /// </summary>
        public static string MAINWINDOW_REBOOT_HOST_CONTEXT_MENU {
            get {
                return ResourceManager.GetString("MAINWINDOW_REBOOT_HOST_CONTEXT_MENU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reconnec&amp;t As... ähnelt.
        /// </summary>
        public static string MAINWINDOW_RECONNECTAS {
            get {
                return ResourceManager.GetString("MAINWINDOW_RECONNECTAS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start in Reco&amp;very Mode ähnelt.
        /// </summary>
        public static string MAINWINDOW_RECOVERY_MODE {
            get {
                return ResourceManager.GetString("MAINWINDOW_RECOVERY_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remo&amp;ve from [XenCenter] ähnelt.
        /// </summary>
        public static string MAINWINDOW_REMOVE_HOST {
            get {
                return ResourceManager.GetString("MAINWINDOW_REMOVE_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove Crash Dump &amp;Files ähnelt.
        /// </summary>
        public static string MAINWINDOW_REMOVE_HOST_CRASHDUMPS {
            get {
                return ResourceManager.GetString("MAINWINDOW_REMOVE_HOST_CRASHDUMPS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove Crash Dump &amp;Files ähnelt.
        /// </summary>
        public static string MAINWINDOW_REMOVE_HOST_CRASHDUMPS_CONTEXT_MENU {
            get {
                return ResourceManager.GetString("MAINWINDOW_REMOVE_HOST_CRASHDUMPS_CONTEXT_MENU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Rename Tag... ähnelt.
        /// </summary>
        public static string MAINWINDOW_RENAME_TAG {
            get {
                return ResourceManager.GetString("MAINWINDOW_RENAME_TAG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Re&amp;pair... ähnelt.
        /// </summary>
        public static string MAINWINDOW_REPAIR_SR {
            get {
                return ResourceManager.GetString("MAINWINDOW_REPAIR_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Re&amp;pair... ähnelt.
        /// </summary>
        public static string MAINWINDOW_REPAIR_SR_CONTEXT_MENU {
            get {
                return ResourceManager.GetString("MAINWINDOW_REPAIR_SR_CONTEXT_MENU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Re&amp;start ähnelt.
        /// </summary>
        public static string MAINWINDOW_RESTART {
            get {
                return ResourceManager.GetString("MAINWINDOW_RESTART", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restart Toolstac&amp;k ähnelt.
        /// </summary>
        public static string MAINWINDOW_RESTART_TOOLSTACK {
            get {
                return ResourceManager.GetString("MAINWINDOW_RESTART_TOOLSTACK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die R&amp;esume ähnelt.
        /// </summary>
        public static string MAINWINDOW_RESUME {
            get {
                return ResourceManager.GetString("MAINWINDOW_RESUME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Re&amp;sume ähnelt.
        /// </summary>
        public static string MAINWINDOW_RESUME_CONTEXT_MENU {
            get {
                return ResourceManager.GetString("MAINWINDOW_RESUME_CONTEXT_MENU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resume on Ser&amp;ver ähnelt.
        /// </summary>
        public static string MAINWINDOW_RESUME_ON_HOST {
            get {
                return ResourceManager.GetString("MAINWINDOW_RESUME_ON_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sa&amp;ve and Restore... ähnelt.
        /// </summary>
        public static string MAINWINDOW_SAVE_AND_RESTORE {
            get {
                return ResourceManager.GetString("MAINWINDOW_SAVE_AND_RESTORE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set as Defaul&amp;t ähnelt.
        /// </summary>
        public static string MAINWINDOW_SET_AS_DEFAULT_SR {
            get {
                return ResourceManager.GetString("MAINWINDOW_SET_AS_DEFAULT_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Share ähnelt.
        /// </summary>
        public static string MAINWINDOW_SHARE_SR {
            get {
                return ResourceManager.GetString("MAINWINDOW_SHARE_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die S&amp;hut Down ähnelt.
        /// </summary>
        public static string MAINWINDOW_SHUTDOWN {
            get {
                return ResourceManager.GetString("MAINWINDOW_SHUTDOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Start ähnelt.
        /// </summary>
        public static string MAINWINDOW_START {
            get {
                return ResourceManager.GetString("MAINWINDOW_START", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die S&amp;tart ähnelt.
        /// </summary>
        public static string MAINWINDOW_START_CONTEXT_MENU {
            get {
                return ResourceManager.GetString("MAINWINDOW_START_CONTEXT_MENU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start on Ser&amp;ver ähnelt.
        /// </summary>
        public static string MAINWINDOW_START_ON_HOST {
            get {
                return ResourceManager.GetString("MAINWINDOW_START_ON_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die S&amp;top ähnelt.
        /// </summary>
        public static string MAINWINDOW_STOP {
            get {
                return ResourceManager.GetString("MAINWINDOW_STOP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die S&amp;uspend ähnelt.
        /// </summary>
        public static string MAINWINDOW_SUSPEND {
            get {
                return ResourceManager.GetString("MAINWINDOW_SUSPEND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ta&amp;ke a Snapshot... ähnelt.
        /// </summary>
        public static string MAINWINDOW_TAKE_SNAPSHOT {
            get {
                return ResourceManager.GetString("MAINWINDOW_TAKE_SNAPSHOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Power On Server (Ctrl+B) ähnelt.
        /// </summary>
        public static string MAINWINDOW_TOOLBAR_POWER_ON_SERVER {
            get {
                return ResourceManager.GetString("MAINWINDOW_TOOLBAR_POWER_ON_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reboot VM (Ctrl+R) ähnelt.
        /// </summary>
        public static string MAINWINDOW_TOOLBAR_REBOOT {
            get {
                return ResourceManager.GetString("MAINWINDOW_TOOLBAR_REBOOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reboot Server ähnelt.
        /// </summary>
        public static string MAINWINDOW_TOOLBAR_REBOOTSERVER {
            get {
                return ResourceManager.GetString("MAINWINDOW_TOOLBAR_REBOOTSERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resume ähnelt.
        /// </summary>
        public static string MAINWINDOW_TOOLBAR_RESUME {
            get {
                return ResourceManager.GetString("MAINWINDOW_TOOLBAR_RESUME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resume VM (Ctrl+Y) ähnelt.
        /// </summary>
        public static string MAINWINDOW_TOOLBAR_RESUMEVM {
            get {
                return ResourceManager.GetString("MAINWINDOW_TOOLBAR_RESUMEVM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shut Down ähnelt.
        /// </summary>
        public static string MAINWINDOW_TOOLBAR_SHUTDOWN {
            get {
                return ResourceManager.GetString("MAINWINDOW_TOOLBAR_SHUTDOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shut Down Server ähnelt.
        /// </summary>
        public static string MAINWINDOW_TOOLBAR_SHUTDOWNSERVER {
            get {
                return ResourceManager.GetString("MAINWINDOW_TOOLBAR_SHUTDOWNSERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shut Down VM (Ctrl+E) ähnelt.
        /// </summary>
        public static string MAINWINDOW_TOOLBAR_SHUTDOWNVM {
            get {
                return ResourceManager.GetString("MAINWINDOW_TOOLBAR_SHUTDOWNVM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start ähnelt.
        /// </summary>
        public static string MAINWINDOW_TOOLBAR_START {
            get {
                return ResourceManager.GetString("MAINWINDOW_TOOLBAR_START", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start VM (Ctrl+B) ähnelt.
        /// </summary>
        public static string MAINWINDOW_TOOLBAR_STARTVM {
            get {
                return ResourceManager.GetString("MAINWINDOW_TOOLBAR_STARTVM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Suspend ähnelt.
        /// </summary>
        public static string MAINWINDOW_TOOLBAR_SUSPEND {
            get {
                return ResourceManager.GetString("MAINWINDOW_TOOLBAR_SUSPEND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Suspend VM (Ctrl+Y) ähnelt.
        /// </summary>
        public static string MAINWINDOW_TOOLBAR_SUSPENDVM {
            get {
                return ResourceManager.GetString("MAINWINDOW_TOOLBAR_SUSPENDVM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Re&amp;claim freed space ähnelt.
        /// </summary>
        public static string MAINWINDOW_TRIM_SR {
            get {
                return ResourceManager.GetString("MAINWINDOW_TRIM_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die XVA Files (*.xva)|*.xva|All Files (*.*)|*.* ähnelt.
        /// </summary>
        public static string MAINWINDOW_XVA_BLURB {
            get {
                return ResourceManager.GetString("MAINWINDOW_XVA_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export to File ähnelt.
        /// </summary>
        public static string MAINWINDOW_XVA_TITLE {
            get {
                return ResourceManager.GetString("MAINWINDOW_XVA_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set as &amp;Default ähnelt.
        /// </summary>
        public static string MAKE_DEFAULT_SR {
            get {
                return ResourceManager.GetString("MAKE_DEFAULT_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No update is needed. ähnelt.
        /// </summary>
        public static string MANAGE_UPDATES_PAGE_UPDATES_NOT_AVAILABLE {
            get {
                return ResourceManager.GetString("MANAGE_UPDATES_PAGE_UPDATES_NOT_AVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Management ähnelt.
        /// </summary>
        public static string MANAGEMENT {
            get {
                return ResourceManager.GetString("MANAGEMENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Management interface ähnelt.
        /// </summary>
        public static string MANAGEMENT_INTERFACE {
            get {
                return ResourceManager.GetString("MANAGEMENT_INTERFACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Management Interfaces ähnelt.
        /// </summary>
        public static string MANAGEMENT_INTERFACES {
            get {
                return ResourceManager.GetString("MANAGEMENT_INTERFACES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Displayed below is a list of management interfaces for &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string MANAGEMENT_INTERFACES_FOR {
            get {
                return ResourceManager.GetString("MANAGEMENT_INTERFACES_FOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} (management) ähnelt.
        /// </summary>
        public static string MANAGEMENT_NETWORK {
            get {
                return ResourceManager.GetString("MANAGEMENT_NETWORK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} (management) on {1} ähnelt.
        /// </summary>
        public static string MANAGEMENT_NETWORK_WITH_POOL {
            get {
                return ResourceManager.GetString("MANAGEMENT_NETWORK_WITH_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Subscription Advantage required for some hosts ähnelt.
        /// </summary>
        public static string MANUAL_CHECK_FOR_UPDATES_PARTIAL_UNLICENSED_INFO {
            get {
                return ResourceManager.GetString("MANUAL_CHECK_FOR_UPDATES_PARTIAL_UNLICENSED_INFO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Subscription Advantage required ähnelt.
        /// </summary>
        public static string MANUAL_CHECK_FOR_UPDATES_UNLICENSED_INFO {
            get {
                return ResourceManager.GetString("MANUAL_CHECK_FOR_UPDATES_UNLICENSED_INFO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Master ähnelt.
        /// </summary>
        public static string MASTER {
            get {
                return ResourceManager.GetString("MASTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Max ähnelt.
        /// </summary>
        public static string MAX {
            get {
                return ResourceManager.GetString("MAX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (max = {0}) ähnelt.
        /// </summary>
        public static string MAX_BRACKETS {
            get {
                return ResourceManager.GetString("MAX_BRACKETS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The memory cannot be changed when the VM is suspended ähnelt.
        /// </summary>
        public static string MEM_NOT_WHEN_SUSPENDED {
            get {
                return ResourceManager.GetString("MEM_NOT_WHEN_SUSPENDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Memory ähnelt.
        /// </summary>
        public static string MEMORY {
            get {
                return ResourceManager.GetString("MEMORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Memory: ähnelt.
        /// </summary>
        public static string MEMORY_COLON {
            get {
                return ResourceManager.GetString("MEMORY_COLON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer] ähnelt.
        /// </summary>
        public static string MEMORY_XEN {
            get {
                return ResourceManager.GetString("MEMORY_XEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Export... ähnelt.
        /// </summary>
        public static string MENU_EXPORT {
            get {
                return ResourceManager.GetString("MENU_EXPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Migrate to Home Server ähnelt.
        /// </summary>
        public static string MENU_MIGRATE_TO_HOME_SERVER {
            get {
                return ResourceManager.GetString("MENU_MIGRATE_TO_HOME_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: {1} ähnelt.
        /// </summary>
        public static string MESSAGE_ALERT_TITLE {
            get {
                return ResourceManager.GetString("MESSAGE_ALERT_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Activate Virtual Disk ähnelt.
        /// </summary>
        public static string MESSAGEBOX_ACTIVATE_VD_TITLE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_ACTIVATE_VD_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Clear the home server for {0}?  Its home will be chosen dynamically from now on. ähnelt.
        /// </summary>
        public static string MESSAGEBOX_CLEAR_AFFINITY_CONFIRM {
            get {
                return ResourceManager.GetString("MESSAGEBOX_CLEAR_AFFINITY_CONFIRM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There is not enough space available to clone the storage for this VM ähnelt.
        /// </summary>
        public static string MESSAGEBOX_CLONEVM_NOSPACE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_CLONEVM_NOSPACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Confirm ähnelt.
        /// </summary>
        public static string MESSAGEBOX_CONFIRM {
            get {
                return ResourceManager.GetString("MESSAGEBOX_CONFIRM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deactivate Virtual Disk ähnelt.
        /// </summary>
        public static string MESSAGEBOX_DEACTIVATE_VD_TITLE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_DEACTIVATE_VD_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This will delete &apos;{0}&apos; permanently, destroying all data associated with it. Continue? ähnelt.
        /// </summary>
        public static string MESSAGEBOX_DELETE_CUSTOM_FIELD {
            get {
                return ResourceManager.GetString("MESSAGEBOX_DELETE_CUSTOM_FIELD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This will delete {0} permanently, destroying the data on it. Continue? ähnelt.
        /// </summary>
        public static string MESSAGEBOX_DELETE_ISO {
            get {
                return ResourceManager.GetString("MESSAGEBOX_DELETE_ISO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This will delete these ISOs permanently, destroying any data on them. Do you want to continue? ähnelt.
        /// </summary>
        public static string MESSAGEBOX_DELETE_ISO_MULTIPLE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_DELETE_ISO_MULTIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete Storage ähnelt.
        /// </summary>
        public static string MESSAGEBOX_DELETE_ISO_TITLE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_DELETE_ISO_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete Multiple Storage Items ähnelt.
        /// </summary>
        public static string MESSAGEBOX_DELETE_ISO_TITLE_MULTIPLE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_DELETE_ISO_TITLE_MULTIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleting a single snapshot disk is not allowed.  This action will delete the entire snapshot, and any other disks attached.  Do you want to continue? ähnelt.
        /// </summary>
        public static string MESSAGEBOX_DELETE_SNAPSHOT {
            get {
                return ResourceManager.GetString("MESSAGEBOX_DELETE_SNAPSHOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleting a single snapshot disk is not allowed.  Deleting these snapshot disks will result in the deletion of the entire snapshot each belongs to, and any other disks attached.  Do you want to continue? ähnelt.
        /// </summary>
        public static string MESSAGEBOX_DELETE_SNAPSHOT_MULTIPLE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_DELETE_SNAPSHOT_MULTIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete entire snapshot ähnelt.
        /// </summary>
        public static string MESSAGEBOX_DELETE_SNAPSHOT_TITLE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_DELETE_SNAPSHOT_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete Multiple Entire Snapshots ähnelt.
        /// </summary>
        public static string MESSAGEBOX_DELETE_SNAPSHOTS_TITLE_MULTIPLE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_DELETE_SNAPSHOTS_TITLE_MULTIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This will delete this system disk permanently, possibly leaving the VM unable to boot. Do you want to continue? ähnelt.
        /// </summary>
        public static string MESSAGEBOX_DELETE_SYS_DISK {
            get {
                return ResourceManager.GetString("MESSAGEBOX_DELETE_SYS_DISK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This will delete these system disks permanently, possibly leaving their VMs unable to boot. Do you want to continue? ähnelt.
        /// </summary>
        public static string MESSAGEBOX_DELETE_SYS_DISK_MULTIPLE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_DELETE_SYS_DISK_MULTIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete System Disk ähnelt.
        /// </summary>
        public static string MESSAGEBOX_DELETE_SYS_DISK_TITLE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_DELETE_SYS_DISK_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete Multiple System Disks ähnelt.
        /// </summary>
        public static string MESSAGEBOX_DELETE_SYS_DISK_TITLE_MULTIPLE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_DELETE_SYS_DISK_TITLE_MULTIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This will delete this virtual disk permanently, destroying the data on it. Continue? ähnelt.
        /// </summary>
        public static string MESSAGEBOX_DELETE_VD {
            get {
                return ResourceManager.GetString("MESSAGEBOX_DELETE_VD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This will delete these virtual disks permanently, destroying any data on them. Do you want to continue? ähnelt.
        /// </summary>
        public static string MESSAGEBOX_DELETE_VD_MULTIPLE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_DELETE_VD_MULTIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete Virtual Disk ähnelt.
        /// </summary>
        public static string MESSAGEBOX_DELETE_VD_TITLE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_DELETE_VD_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete Multiple Virtual Disks ähnelt.
        /// </summary>
        public static string MESSAGEBOX_DELETE_VD_TITLE_MUTLIPLE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_DELETE_VD_TITLE_MUTLIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to destroy &apos;{0}&apos;?
        ///    
        ///Destroying this storage repository will permanently remove all associated virtual disks from the underlying storage device.
        ///
        ///This action is final and unrecoverable. ähnelt.
        /// </summary>
        public static string MESSAGEBOX_DESTROY_SR_CONTINUE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_DESTROY_SR_CONTINUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Destroy Storage Repository ähnelt.
        /// </summary>
        public static string MESSAGEBOX_DESTROY_SR_CONTINUE_TITLE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_DESTROY_SR_CONTINUE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Yes, Destroy ähnelt.
        /// </summary>
        public static string MESSAGEBOX_DESTROY_SR_YES_BUTTON_LABEL {
            get {
                return ResourceManager.GetString("MESSAGEBOX_DESTROY_SR_YES_BUTTON_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to destroy the selected storage repositories?
        ///      
        ///Destroying the selected storage repositories will permanently remove all associated virtual disks from the underlying storage devices.
        ///
        ///This action is final and unrecoverable. ähnelt.
        /// </summary>
        public static string MESSAGEBOX_DESTROY_SRS_CONTINUE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_DESTROY_SRS_CONTINUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Destroy Multiple Storage Repositories ähnelt.
        /// </summary>
        public static string MESSAGEBOX_DESTROY_SRS_CONTINUE_TITLE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_DESTROY_SRS_CONTINUE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Detaching this storage repository will make the virtual disks that it contains inaccessible. The contents of the virtual disks themselves will remain intact.
        ///
        ///If you subsequently reattach the storage repository, you will need to provide the correct device configuration details.
        ///
        ///Are you sure you want to detach this storage repository? ähnelt.
        /// </summary>
        public static string MESSAGEBOX_DETACH_SR_CONTINUE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_DETACH_SR_CONTINUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Detach Storage Repository ähnelt.
        /// </summary>
        public static string MESSAGEBOX_DETACH_SR_CONTINUE_TITLE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_DETACH_SR_CONTINUE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Detaching the selected storage repositories will make the virtual disks that they contain inaccessible. The contents of the virtual disks themselves will remain intact.
        ///
        ///If you subsequently reattach the storage repositories, you will need to provide the correct device configuration details.
        ///
        ///Are you sure you want to detach the selected storage repositories? ähnelt.
        /// </summary>
        public static string MESSAGEBOX_DETACH_SRS_CONTINUE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_DETACH_SRS_CONTINUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Detach Multiple Storage Repositories ähnelt.
        /// </summary>
        public static string MESSAGEBOX_DETACH_SRS_CONTINUE_TITLE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_DETACH_SRS_CONTINUE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This action will detach a system disk from the VM which may leave it unbootable. Would you like to continue? ähnelt.
        /// </summary>
        public static string MESSAGEBOX_DETACH_SYSTEMVD {
            get {
                return ResourceManager.GetString("MESSAGEBOX_DETACH_SYSTEMVD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Detach system disk ähnelt.
        /// </summary>
        public static string MESSAGEBOX_DETACH_SYSTEMVD_TITLE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_DETACH_SYSTEMVD_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Detaching this virtual disk will remove the association between it and the VM while preserving the disk and its data.  Would you like to continue? ähnelt.
        /// </summary>
        public static string MESSAGEBOX_DETACH_VD {
            get {
                return ResourceManager.GetString("MESSAGEBOX_DETACH_VD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Detach virtual disk ähnelt.
        /// </summary>
        public static string MESSAGEBOX_DETACH_VD_TITLE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_DETACH_VD_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Detach Multiple Virtual Disks ähnelt.
        /// </summary>
        public static string MESSAGEBOX_DETACH_VD_TITLE_MUTLIPLE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_DETACH_VD_TITLE_MUTLIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unable to connect to server &apos;{0}&apos;.
        ///{1}
        ///
        ///{2} ähnelt.
        /// </summary>
        public static string MESSAGEBOX_ERRORTEXT {
            get {
                return ResourceManager.GetString("MESSAGEBOX_ERRORTEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to forget &apos;{0}&apos;?
        ///
        ///Forgetting this storage repository will permanently remove the information used to connect the virtual machines to the virtual disks in the storage repository. The contents of the virtual disks themselves will remain intact.
        ///
        ///This action is final and unrecoverable. ähnelt.
        /// </summary>
        public static string MESSAGEBOX_FORGET_SR_CONTINUE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_FORGET_SR_CONTINUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Forget Storage Repository ähnelt.
        /// </summary>
        public static string MESSAGEBOX_FORGET_SR_CONTINUE_TITLE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_FORGET_SR_CONTINUE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Yes, Forget ähnelt.
        /// </summary>
        public static string MESSAGEBOX_FORGET_SR_CONTINUE_YES_BUTTON_LABEL {
            get {
                return ResourceManager.GetString("MESSAGEBOX_FORGET_SR_CONTINUE_YES_BUTTON_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to forget the selected storage repositories?
        ///
        ///Forgetting the selected storage repositories will permanently remove the information used to connect the virtual machines to the virtual disks in the storage repositories. The contents of the virtual disks themselves will remain intact.
        ///
        ///This action is final and unrecoverable. ähnelt.
        /// </summary>
        public static string MESSAGEBOX_FORGET_SRS_CONTINUE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_FORGET_SRS_CONTINUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Forget Multiple Storage Repositories ähnelt.
        /// </summary>
        public static string MESSAGEBOX_FORGET_SRS_CONTINUE_TITLE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_FORGET_SRS_CONTINUE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Help topic {0} does not exist. ähnelt.
        /// </summary>
        public static string MESSAGEBOX_HELP_TOPIC_NOT_FOUND {
            get {
                return ResourceManager.GetString("MESSAGEBOX_HELP_TOPIC_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Launching help topic {0} ({1}). ähnelt.
        /// </summary>
        public static string MESSAGEBOX_HELP_TOPICS {
            get {
                return ResourceManager.GetString("MESSAGEBOX_HELP_TOPICS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your saved settings appear to be corrupt. Revert changes to {0} or delete the file to return to default values. ähnelt.
        /// </summary>
        public static string MESSAGEBOX_LOAD_CORRUPTED {
            get {
                return ResourceManager.GetString("MESSAGEBOX_LOAD_CORRUPTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could Not Load Settings ähnelt.
        /// </summary>
        public static string MESSAGEBOX_LOAD_CORRUPTED_TITLE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_LOAD_CORRUPTED_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to dismiss this event? ähnelt.
        /// </summary>
        public static string MESSAGEBOX_LOG_DELETE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_LOG_DELETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Log file is missing. ähnelt.
        /// </summary>
        public static string MESSAGEBOX_LOGFILE_MISSING {
            get {
                return ResourceManager.GetString("MESSAGEBOX_LOGFILE_MISSING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You have applied filters to the list of events. Do you want to dismiss all events or only the events you have chosen to view? In both cases only completed events will be removed. ähnelt.
        /// </summary>
        public static string MESSAGEBOX_LOGS_DELETE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_LOGS_DELETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This operation will remove all completed events. Do you want to continue? ähnelt.
        /// </summary>
        public static string MESSAGEBOX_LOGS_DELETE_NO_FILTER {
            get {
                return ResourceManager.GetString("MESSAGEBOX_LOGS_DELETE_NO_FILTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This operation will remove all selected completed events. Do you want to continue? ähnelt.
        /// </summary>
        public static string MESSAGEBOX_LOGS_DELETE_SELECTED {
            get {
                return ResourceManager.GetString("MESSAGEBOX_LOGS_DELETE_SELECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Moving Virtual Disk ähnelt.
        /// </summary>
        public static string MESSAGEBOX_MOVING_VDI_TITLE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_MOVING_VDI_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This will delete the selected network permanently. Continue? ähnelt.
        /// </summary>
        public static string MESSAGEBOX_NETWORK_DELETE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_NETWORK_DELETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete Network ähnelt.
        /// </summary>
        public static string MESSAGEBOX_NETWORK_DELETE_TITLE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_NETWORK_DELETE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Writing password information failed: {0} ähnelt.
        /// </summary>
        public static string MESSAGEBOX_PASSWORD_WRITE_FAILED {
            get {
                return ResourceManager.GetString("MESSAGEBOX_PASSWORD_WRITE_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The pool Master will become a standalone server, are you sure you want to continue? ähnelt.
        /// </summary>
        public static string MESSAGEBOX_POOL_DELETE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_POOL_DELETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You cannot remove the master from the pool. ähnelt.
        /// </summary>
        public static string MESSAGEBOX_POOL_MASTER_REMOVE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_POOL_MASTER_REMOVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [{0}] There has been an unexpected error. Technical details about this error have been saved to the following file. Please send this to your support representative.
        ///
        ///{1} ähnelt.
        /// </summary>
        public static string MESSAGEBOX_PROGRAM_UNEXPECTED {
            get {
                return ResourceManager.GetString("MESSAGEBOX_PROGRAM_UNEXPECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenCenter] - Error ähnelt.
        /// </summary>
        public static string MESSAGEBOX_PROGRAM_UNEXPECTED_TITLE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_PROGRAM_UNEXPECTED_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unable to reconnect to {0} . Server is unavailable. ähnelt.
        /// </summary>
        public static string MESSAGEBOX_RECONNECT_FAIL {
            get {
                return ResourceManager.GetString("MESSAGEBOX_RECONNECT_FAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed to Reconnect ähnelt.
        /// </summary>
        public static string MESSAGEBOX_RECONNECT_FAIL_TITLE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_RECONNECT_FAIL_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unable to save settings. You may have insufficient disk space or your configuration file could be corrupt. 
        ///
        ///To fix a corrupt configuration file revert changes to {0} or delete the file to return to default values. ähnelt.
        /// </summary>
        public static string MESSAGEBOX_SAVE_CORRUPTED {
            get {
                return ResourceManager.GetString("MESSAGEBOX_SAVE_CORRUPTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could Not Save Settings ähnelt.
        /// </summary>
        public static string MESSAGEBOX_SAVE_CORRUPTED_TITLE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_SAVE_CORRUPTED_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The program could not securely save your session: no session information will be stored. ähnelt.
        /// </summary>
        public static string MESSAGEBOX_SESSION_SAVE_UNABLE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_SESSION_SAVE_UNABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not save session ähnelt.
        /// </summary>
        public static string MESSAGEBOX_SESSION_SAVE_UNABLE_TITLE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_SESSION_SAVE_UNABLE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You must eject all slaves from the pool before you can delete the pool. ähnelt.
        /// </summary>
        public static string MESSAGEBOX_SLAVES_EJECT {
            get {
                return ResourceManager.GetString("MESSAGEBOX_SLAVES_EJECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This will delete the selected network interface permanently. Continue? ähnelt.
        /// </summary>
        public static string MESSAGEBOX_VIF_DELETE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_VIF_DELETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete Network Interface ähnelt.
        /// </summary>
        public static string MESSAGEBOX_VIF_DELETE_TITLE {
            get {
                return ResourceManager.GetString("MESSAGEBOX_VIF_DELETE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Migrate ähnelt.
        /// </summary>
        public static string MIGRATE {
            get {
                return ResourceManager.GetString("MIGRATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot migrate this VM - there may be a CD in the drive.  Eject the CD and try again. ähnelt.
        /// </summary>
        public static string MIGRATE_EJECT_TOOLS_ON_UPGRADE {
            get {
                return ResourceManager.GetString("MIGRATE_EJECT_TOOLS_ON_UPGRADE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please eject your CD ähnelt.
        /// </summary>
        public static string MIGRATE_PLEASE_EJECT_YOUR_CD {
            get {
                return ResourceManager.GetString("MIGRATE_PLEASE_EJECT_YOUR_CD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upgrade your [XenServer] license to enable VDI live migration. This feature enables you to migrate multiple running VDIs between SRs in the same pool with no VM downtime.  ähnelt.
        /// </summary>
        public static string MIGRATE_VDI_UPSELL_BLURB {
            get {
                return ResourceManager.GetString("MIGRATE_VDI_UPSELL_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Migrate VMs off server &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string MIGRATE_VMS_OFF_SERVER {
            get {
                return ResourceManager.GetString("MIGRATE_VMS_OFF_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This VM may not migrate at the moment ähnelt.
        /// </summary>
        public static string MIGRATION_NOT_ALLOWED {
            get {
                return ResourceManager.GetString("MIGRATION_NOT_ALLOWED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This VM may not migrate because the destination host does not have some of the CPU features that the VM is currently using ähnelt.
        /// </summary>
        public static string MIGRATION_NOT_ALLOWED_CPU_FEATURES {
            get {
                return ResourceManager.GetString("MIGRATION_NOT_ALLOWED_CPU_FEATURES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This VM may not migrate; it is not on shared storage ähnelt.
        /// </summary>
        public static string MIGRATION_NOT_ALLOWED_NO_SHARED_STORAGE {
            get {
                return ResourceManager.GetString("MIGRATION_NOT_ALLOWED_NO_SHARED_STORAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A VM may not migrate outside of its pool ähnelt.
        /// </summary>
        public static string MIGRATION_NOT_ALLOWED_OUTSIDE_POOL {
            get {
                return ResourceManager.GetString("MIGRATION_NOT_ALLOWED_OUTSIDE_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Min ähnelt.
        /// </summary>
        public static string MIN {
            get {
                return ResourceManager.GetString("MIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Missing URL ähnelt.
        /// </summary>
        public static string MISSING_URL {
            get {
                return ResourceManager.GetString("MISSING_URL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mixed ähnelt.
        /// </summary>
        public static string MIXED_POWER_ON_MODE {
            get {
                return ResourceManager.GetString("MIXED_POWER_ON_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Monday ähnelt.
        /// </summary>
        public static string MONDAY_LONG {
            get {
                return ResourceManager.GetString("MONDAY_LONG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mon ähnelt.
        /// </summary>
        public static string MONDAY_SHORT {
            get {
                return ResourceManager.GetString("MONDAY_SHORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} VMs selected ähnelt.
        /// </summary>
        public static string MOREONE_VM_SELECTED {
            get {
                return ResourceManager.GetString("MOREONE_VM_SELECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Moving {0} canceled ähnelt.
        /// </summary>
        public static string MOVE_CANCELLED {
            get {
                return ResourceManager.GetString("MOVE_CANCELLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Move object &apos;{0}&apos; to folder &apos;{1}&apos;... ähnelt.
        /// </summary>
        public static string MOVE_OBJECT_TO_FOLDER {
            get {
                return ResourceManager.GetString("MOVE_OBJECT_TO_FOLDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Move selected objects to folder &apos;{0}&apos;... ähnelt.
        /// </summary>
        public static string MOVE_OBJECTS_TO_FOLDER {
            get {
                return ResourceManager.GetString("MOVE_OBJECTS_TO_FOLDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Move Virtual Disk... ähnelt.
        /// </summary>
        public static string MOVE_VDI_CONTEXT_MENU {
            get {
                return ResourceManager.GetString("MOVE_VDI_CONTEXT_MENU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Move VM ähnelt.
        /// </summary>
        public static string MOVE_VM_WIZARD_TITLE {
            get {
                return ResourceManager.GetString("MOVE_VM_WIZARD_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Move VM to {0} ähnelt.
        /// </summary>
        public static string MOVE_VM_WIZARD_TITLE_AND_LOCATION {
            get {
                return ResourceManager.GetString("MOVE_VM_WIZARD_TITLE_AND_LOCATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Moved ähnelt.
        /// </summary>
        public static string MOVED {
            get {
                return ResourceManager.GetString("MOVED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Moving... ähnelt.
        /// </summary>
        public static string MOVING {
            get {
                return ResourceManager.GetString("MOVING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MTU ähnelt.
        /// </summary>
        public static string MTU {
            get {
                return ResourceManager.GetString("MTU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to delete the selected items? ähnelt.
        /// </summary>
        public static string MULTI_VDI_DELETE_INSTRUCTION {
            get {
                return ResourceManager.GetString("MULTI_VDI_DELETE_INSTRUCTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are about to delete multiple virtual disks. Are you sure you want to proceed? ähnelt.
        /// </summary>
        public static string MULTI_VDI_DELETE_WARNING {
            get {
                return ResourceManager.GetString("MULTI_VDI_DELETE_WARNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are about to detach multiple virtual disks, are you sure you want to proceed? ähnelt.
        /// </summary>
        public static string MULTI_VDI_DETACH_WARNING {
            get {
                return ResourceManager.GetString("MULTI_VDI_DETACH_WARNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Active ähnelt.
        /// </summary>
        public static string MULTIPATH_ACTIVE {
            get {
                return ResourceManager.GetString("MULTIPATH_ACTIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Multipath capable ähnelt.
        /// </summary>
        public static string MULTIPATH_CAPABLE {
            get {
                return ResourceManager.GetString("MULTIPATH_CAPABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die One or more paths to at least one of your storages has failed. Refer to the &quot;[XenServer product] Administrator&apos;s Guide&quot; for information about configuring storage multipathing. ähnelt.
        /// </summary>
        public static string MULTIPATH_FAILED {
            get {
                return ResourceManager.GetString("MULTIPATH_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not active ähnelt.
        /// </summary>
        public static string MULTIPATH_NOT_ACTIVE {
            get {
                return ResourceManager.GetString("MULTIPATH_NOT_ACTIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} of {1} paths active ähnelt.
        /// </summary>
        public static string MULTIPATH_STATUS {
            get {
                return ResourceManager.GetString("MULTIPATH_STATUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  ({0} iSCSI sessions) ähnelt.
        /// </summary>
        public static string MULTIPATH_STATUS_ISCSI_SESSIONS {
            get {
                return ResourceManager.GetString("MULTIPATH_STATUS_ISCSI_SESSIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Multipathing ähnelt.
        /// </summary>
        public static string MULTIPATHING {
            get {
                return ResourceManager.GetString("MULTIPATHING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You must select a network ähnelt.
        /// </summary>
        public static string MUST_SELECT_NETWORK {
            get {
                return ResourceManager.GetString("MUST_SELECT_NETWORK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die http://www.citrix.com/welcome.html ähnelt.
        /// </summary>
        public static string MY_CITRIX_CREDENTIALS_URL {
            get {
                return ResourceManager.GetString("MY_CITRIX_CREDENTIALS_URL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name ähnelt.
        /// </summary>
        public static string NAME {
            get {
                return ResourceManager.GetString("NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die General ähnelt.
        /// </summary>
        public static string NAME_DESCRIPTION_TAGS {
            get {
                return ResourceManager.GetString("NAME_DESCRIPTION_TAGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} {1} ähnelt.
        /// </summary>
        public static string NAME_WITH_LOCATION {
            get {
                return ResourceManager.GetString("NAME_WITH_LOCATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the SR to reattach or create a new SR ähnelt.
        /// </summary>
        public static string NETAPP_EQUAL_PAGE_TITLE {
            get {
                return ResourceManager.GetString("NETAPP_EQUAL_PAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bond Members ähnelt.
        /// </summary>
        public static string NETW_BOND_DETAILS_TEXT {
            get {
                return ResourceManager.GetString("NETW_BOND_DETAILS_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select members for the new bonded network ähnelt.
        /// </summary>
        public static string NETW_BOND_DETAILS_TITLE {
            get {
                return ResourceManager.GetString("NETW_BOND_DETAILS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure the new network ähnelt.
        /// </summary>
        public static string NETW_CHIN_DETAILS_TITLE {
            get {
                return ResourceManager.GetString("NETW_CHIN_DETAILS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network settings ähnelt.
        /// </summary>
        public static string NETW_DETAILS_TEXT {
            get {
                return ResourceManager.GetString("NETW_DETAILS_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This VLAN number is already in use ähnelt.
        /// </summary>
        public static string NETW_DETAILS_VLAN_NUMBER_IN_USE {
            get {
                return ResourceManager.GetString("NETW_DETAILS_VLAN_NUMBER_IN_USE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure the new network ähnelt.
        /// </summary>
        public static string NETW_EXTERNAL_DETAILS_TITLE {
            get {
                return ResourceManager.GetString("NETW_EXTERNAL_DETAILS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure the new network ähnelt.
        /// </summary>
        public static string NETW_INTERNAL_DETAILS_TITLE {
            get {
                return ResourceManager.GetString("NETW_INTERNAL_DETAILS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name ähnelt.
        /// </summary>
        public static string NETW_NAME_TEXT {
            get {
                return ResourceManager.GetString("NETW_NAME_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter a name and description for the new network ähnelt.
        /// </summary>
        public static string NETW_NAME_TITLE {
            get {
                return ResourceManager.GetString("NETW_NAME_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select Type ähnelt.
        /// </summary>
        public static string NETW_TYPE_SELECT_TEXT {
            get {
                return ResourceManager.GetString("NETW_TYPE_SELECT_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose the type of network to create ähnelt.
        /// </summary>
        public static string NETW_TYPE_SELECT_TITLE {
            get {
                return ResourceManager.GetString("NETW_TYPE_SELECT_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network ähnelt.
        /// </summary>
        public static string NETWORK {
            get {
                return ResourceManager.GetString("NETWORK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating network ähnelt.
        /// </summary>
        public static string NETWORK_ACTION_CREATING_NETWORK {
            get {
                return ResourceManager.GetString("NETWORK_ACTION_CREATING_NETWORK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating network &apos;{0}&apos; on {1} ähnelt.
        /// </summary>
        public static string NETWORK_ACTION_CREATING_NETWORK_TITLE {
            get {
                return ResourceManager.GetString("NETWORK_ACTION_CREATING_NETWORK_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network created ähnelt.
        /// </summary>
        public static string NETWORK_ACTION_NETWORK_CREATED {
            get {
                return ResourceManager.GetString("NETWORK_ACTION_NETWORK_CREATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network removed ähnelt.
        /// </summary>
        public static string NETWORK_ACTION_NETWORK_REMOVED {
            get {
                return ResourceManager.GetString("NETWORK_ACTION_NETWORK_REMOVED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network updated ähnelt.
        /// </summary>
        public static string NETWORK_ACTION_NETWORK_UPDATED {
            get {
                return ResourceManager.GetString("NETWORK_ACTION_NETWORK_UPDATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Removing network ähnelt.
        /// </summary>
        public static string NETWORK_ACTION_REMOVING_NETWORK {
            get {
                return ResourceManager.GetString("NETWORK_ACTION_REMOVING_NETWORK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Removing network &apos;{0}&apos; from {1} ähnelt.
        /// </summary>
        public static string NETWORK_ACTION_REMOVING_NETWORK_TITLE {
            get {
                return ResourceManager.GetString("NETWORK_ACTION_REMOVING_NETWORK_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Updating network ähnelt.
        /// </summary>
        public static string NETWORK_ACTION_UPDATING_NETWORK {
            get {
                return ResourceManager.GetString("NETWORK_ACTION_UPDATING_NETWORK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Updating network &apos;{0}&apos; on {1} ähnelt.
        /// </summary>
        public static string NETWORK_ACTION_UPDATING_NETWORK_TITLE {
            get {
                return ResourceManager.GetString("NETWORK_ACTION_UPDATING_NETWORK_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} (in use by {1}) ähnelt.
        /// </summary>
        public static string NETWORK_IN_USE_BY {
            get {
                return ResourceManager.GetString("NETWORK_IN_USE_BY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network {0} ähnelt.
        /// </summary>
        public static string NETWORK_NAME {
            get {
                return ResourceManager.GetString("NETWORK_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network Options ähnelt.
        /// </summary>
        public static string NETWORK_OPTIONS {
            get {
                return ResourceManager.GetString("NETWORK_OPTIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The connection to the server was lost. No changes have been made. ähnelt.
        /// </summary>
        public static string NETWORK_RECONFIG_CONNECTION_LOST {
            get {
                return ResourceManager.GetString("NETWORK_RECONFIG_CONNECTION_LOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network Settings ähnelt.
        /// </summary>
        public static string NETWORK_SETTINGS {
            get {
                return ResourceManager.GetString("NETWORK_SETTINGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} on {1} ähnelt.
        /// </summary>
        public static string NETWORK_WITH_POOL {
            get {
                return ResourceManager.GetString("NETWORK_WITH_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Storage {0} ähnelt.
        /// </summary>
        public static string NETWORKING_PROPERTIES_AUX_TAB_NAME {
            get {
                return ResourceManager.GetString("NETWORKING_PROPERTIES_AUX_TAB_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure IP address settings for server management traffic (the management interface) on &apos;{0}&apos; here.
        ///You can also assign IP addresses for dedicated storage or other types of network traffic (secondary interfaces). ähnelt.
        /// </summary>
        public static string NETWORKING_PROPERTIES_BLURB_HOST {
            get {
                return ResourceManager.GetString("NETWORKING_PROPERTIES_BLURB_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure IP address settings for server management traffic (the management interface) on all of the servers in pool &apos;{0}&apos; here.
        ///You can also assign IP addresses for dedicated storage or other types of network traffic (secondary interfaces) in the pool. ähnelt.
        /// </summary>
        public static string NETWORKING_PROPERTIES_BLURB_POOL {
            get {
                return ResourceManager.GetString("NETWORKING_PROPERTIES_BLURB_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Reconfigure anyway ähnelt.
        /// </summary>
        public static string NETWORKING_PROPERTIES_CHANGING_MANAGEMENT_CONTINUE {
            get {
                return ResourceManager.GetString("NETWORKING_PROPERTIES_CHANGING_MANAGEMENT_CONTINUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} is currently in use by {1} ähnelt.
        /// </summary>
        public static string NETWORKING_PROPERTIES_IN_USE_WARNING {
            get {
                return ResourceManager.GetString("NETWORKING_PROPERTIES_IN_USE_WARNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} is currently in use by the primary interface ähnelt.
        /// </summary>
        public static string NETWORKING_PROPERTIES_IN_USE_WARNING_MANAGEMENT {
            get {
                return ResourceManager.GetString("NETWORKING_PROPERTIES_IN_USE_WARNING_MANAGEMENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IP address and DNS server settings: ähnelt.
        /// </summary>
        public static string NETWORKING_PROPERTIES_IP_AND_DNS_SETTINGS {
            get {
                return ResourceManager.GetString("NETWORKING_PROPERTIES_IP_AND_DNS_SETTINGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IP address settings: ähnelt.
        /// </summary>
        public static string NETWORKING_PROPERTIES_IP_SETTINGS {
            get {
                return ResourceManager.GetString("NETWORKING_PROPERTIES_IP_SETTINGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die unknown ähnelt.
        /// </summary>
        public static string NETWORKING_PROPERTIES_PURPOSE_UNKNOWN {
            get {
                return ResourceManager.GetString("NETWORKING_PROPERTIES_PURPOSE_UNKNOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove IP Address ähnelt.
        /// </summary>
        public static string NETWORKING_PROPERTIES_REMOVE_TOOLTIP {
            get {
                return ResourceManager.GetString("NETWORKING_PROPERTIES_REMOVE_TOOLTIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}; {1} ähnelt.
        /// </summary>
        public static string NETWORKING_PROPERTIES_SUBTEXT {
            get {
                return ResourceManager.GetString("NETWORKING_PROPERTIES_SUBTEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Management Interface ähnelt.
        /// </summary>
        public static string NETWORKING_PROPERTIES_TAB_TITLE_PRIMARY {
            get {
                return ResourceManager.GetString("NETWORKING_PROPERTIES_TAB_TITLE_PRIMARY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure IP Addresses - {0} ähnelt.
        /// </summary>
        public static string NETWORKING_PROPERTIES_TITLE {
            get {
                return ResourceManager.GetString("NETWORKING_PROPERTIES_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are reconfiguring the primary management interface.  If the new settings are incorrect then [XenCenter] may permanently lose the connection to the server.
        ///
        ///You should only proceed if you have verified that these settings are correct. ähnelt.
        /// </summary>
        public static string NETWORKING_PROPERTIES_WARNING_CHANGING_MANAGEMENT_HOST {
            get {
                return ResourceManager.GetString("NETWORKING_PROPERTIES_WARNING_CHANGING_MANAGEMENT_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are reconfiguring the primary management interface.  If the new settings are incorrect then [XenCenter] may permanently lose the connection to the server, or pool members may be unable to contact each other.
        ///
        ///You should only proceed if you have verified that these settings are correct. ähnelt.
        /// </summary>
        public static string NETWORKING_PROPERTIES_WARNING_CHANGING_MANAGEMENT_POOL {
            get {
                return ResourceManager.GetString("NETWORKING_PROPERTIES_WARNING_CHANGING_MANAGEMENT_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IGMP snooping disabled ähnelt.
        /// </summary>
        public static string NETWORKOPTIONSEDITPAGE_SUBTEXT_IGMP_SNOOPING_DISABLED {
            get {
                return ResourceManager.GetString("NETWORKOPTIONSEDITPAGE_SUBTEXT_IGMP_SNOOPING_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IGMP snooping enabled ähnelt.
        /// </summary>
        public static string NETWORKOPTIONSEDITPAGE_SUBTEXT_IGMP_SNOOPING_ENABLED {
            get {
                return ResourceManager.GetString("NETWORKOPTIONSEDITPAGE_SUBTEXT_IGMP_SNOOPING_ENABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Auto ähnelt.
        /// </summary>
        public static string NETWORKPANEL_AUTO {
            get {
                return ResourceManager.GetString("NETWORKPANEL_AUTO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;internal&gt; ähnelt.
        /// </summary>
        public static string NETWORKPANEL_INTERNAL {
            get {
                return ResourceManager.GetString("NETWORKPANEL_INTERNAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IP Address ähnelt.
        /// </summary>
        public static string NETWORKPANEL_IP {
            get {
                return ResourceManager.GetString("NETWORKPANEL_IP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Limit ähnelt.
        /// </summary>
        public static string NETWORKPANEL_LIMIT {
            get {
                return ResourceManager.GetString("NETWORKPANEL_LIMIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VLAN ähnelt.
        /// </summary>
        public static string NETWORKPANEL_VLAN {
            get {
                return ResourceManager.GetString("NETWORKPANEL_VLAN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die interface {0} ähnelt.
        /// </summary>
        public static string NETWORKPICKER_INTERFACE {
            get {
                return ResourceManager.GetString("NETWORKPICKER_INTERFACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error from VIF table: {0} ähnelt.
        /// </summary>
        public static string NETWORKPICKER_LOG_VIF_ERROR {
            get {
                return ResourceManager.GetString("NETWORKPICKER_LOG_VIF_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Networks ähnelt.
        /// </summary>
        public static string NETWORKS {
            get {
                return ResourceManager.GetString("NETWORKS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Never ähnelt.
        /// </summary>
        public static string NEVER {
            get {
                return ResourceManager.GetString("NEVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select a storage repository to create the disk on ähnelt.
        /// </summary>
        public static string NEW_DISK_DIALOG_SR_HINT_TEXT {
            get {
                return ResourceManager.GetString("NEW_DISK_DIALOG_SR_HINT_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating new DVD drive on VM {0} ähnelt.
        /// </summary>
        public static string NEW_DVD_DRIVE_CREATE_TITLE {
            get {
                return ResourceManager.GetString("NEW_DVD_DRIVE_CREATE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DVD Drive Created ähnelt.
        /// </summary>
        public static string NEW_DVD_DRIVE_CREATED {
            get {
                return ResourceManager.GetString("NEW_DVD_DRIVE_CREATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating new DVD drive ähnelt.
        /// </summary>
        public static string NEW_DVD_DRIVE_CREATING {
            get {
                return ResourceManager.GetString("NEW_DVD_DRIVE_CREATING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating new DVD drive succeeded ähnelt.
        /// </summary>
        public static string NEW_DVD_DRIVE_DONE {
            get {
                return ResourceManager.GetString("NEW_DVD_DRIVE_DONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You must shutdown and then restart the VM to finish the installation of the new DVD drive. ähnelt.
        /// </summary>
        public static string NEW_DVD_DRIVE_REBOOT {
            get {
                return ResourceManager.GetString("NEW_DVD_DRIVE_REBOOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You must shutdown and then restart the VM to finish the installation of the new DVD drive.
        ///Once the VM has restarted click the Install [XenServer product] Tools menu item once again. ähnelt.
        /// </summary>
        public static string NEW_DVD_DRIVE_REBOOT_TOOLS {
            get {
                return ResourceManager.GetString("NEW_DVD_DRIVE_REBOOT_TOOLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The VM you want to install [XenServer product] Tools onto has no DVD drive, would you like to create one? ähnelt.
        /// </summary>
        public static string NEW_DVD_DRIVE_REQUIRED {
            get {
                return ResourceManager.GetString("NEW_DVD_DRIVE_REQUIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die At least one of the VMs you want to install [XenServer product] Tools onto has no DVD drive. Would you like to create a new DVD drive for each of the VMs that requires one? ähnelt.
        /// </summary>
        public static string NEW_DVD_DRIVES_REQUIRED {
            get {
                return ResourceManager.GetString("NEW_DVD_DRIVES_REQUIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;New Folder... ähnelt.
        /// </summary>
        public static string NEW_FOLDER {
            get {
                return ResourceManager.GetString("NEW_FOLDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New Folder ähnelt.
        /// </summary>
        public static string NEW_FOLDER_DIALOG_TITLE {
            get {
                return ResourceManager.GetString("NEW_FOLDER_DIALOG_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;New folder name: ähnelt.
        /// </summary>
        public static string NEW_FOLDER_NAME {
            get {
                return ResourceManager.GetString("NEW_FOLDER_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;New Policy... ähnelt.
        /// </summary>
        public static string NEW_POLICY {
            get {
                return ResourceManager.GetString("NEW_POLICY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are attempting to add the server &apos;{0}&apos; to a pool with a master that is configured to use AD authentication. All pool members must use the same authentication method.
        ///
        ///Do you want to enable AD authentication on your server and join it to the same domain as the pool? ähnelt.
        /// </summary>
        public static string NEW_POOL_AD_MESSAGE {
            get {
                return ResourceManager.GetString("NEW_POOL_AD_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are attempting to add the following servers to a pool with a master that is configured to use AD authentication:
        ///
        ///{0}
        ///
        ///All pool members must use the same authentication method. Do you want to enable AD authentication on these servers and join them to the same domain as the pool? ähnelt.
        /// </summary>
        public static string NEW_POOL_AD_MESSAGE_MULTIPLE {
            get {
                return ResourceManager.GetString("NEW_POOL_AD_MESSAGE_MULTIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are attempting to add the server &apos;{0}&apos; to a pool with a master that is using an older CPU.
        ///
        ///[XenServer] can continue by rebooting the server and reducing its CPU to the level of the master. This will shut down any VMs running on the server. This feature is supported for CPU combinations listed in the [XenServer] Hardware Compatibility List.
        ///
        ///Do you want to do this? ähnelt.
        /// </summary>
        public static string NEW_POOL_CPU_MASKING_MESSAGE {
            get {
                return ResourceManager.GetString("NEW_POOL_CPU_MASKING_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are attempting to add the following servers to a pool with a master that is using an older CPU:
        ///
        ///{0}
        ///
        ///[XenServer] can continue by rebooting the servers and reducing their CPUs to the level of the master. This will shut down any VMs running on the servers. This feature is supported for CPU combinations listed in the [XenServer] Hardware Compatibility List.
        ///
        ///Do you want to do this? ähnelt.
        /// </summary>
        public static string NEW_POOL_CPU_MASKING_MESSAGE_MULTIPLE {
            get {
                return ResourceManager.GetString("NEW_POOL_CPU_MASKING_MESSAGE_MULTIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are attempting to add the server &apos;{0}&apos; to a licensed pool.
        ///
        ///Do you want to apply the licensing from the master to this server? ähnelt.
        /// </summary>
        public static string NEW_POOL_LICENSE_MESSAGE {
            get {
                return ResourceManager.GetString("NEW_POOL_LICENSE_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are attempting to add the following servers to a licensed pool.
        ///
        ///{0}
        ///
        ///Do you want to apply the licensing from the master to these servers? ähnelt.
        /// </summary>
        public static string NEW_POOL_LICENSE_MESSAGE_MULTIPLE {
            get {
                return ResourceManager.GetString("NEW_POOL_LICENSE_MESSAGE_MULTIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The following supplemental pack should be installed on all servers in a pool, but currently is not:
        ///
        ///{0}
        ///
        ///It is strongly recommended that you Cancel and apply the latest version of the pack to all servers before creating the pool. ähnelt.
        /// </summary>
        public static string NEW_POOL_SUPP_PACK {
            get {
                return ResourceManager.GetString("NEW_POOL_SUPP_PACK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The following supplemental packs should be installed on all servers in a pool, but currently are not:
        ///
        ///{0}
        ///
        ///It is strongly recommended that you Cancel and apply the latest version of the packs to all servers before creating the pool. ähnelt.
        /// </summary>
        public static string NEW_POOL_SUPP_PACKS {
            get {
                return ResourceManager.GetString("NEW_POOL_SUPP_PACKS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;New schedule... ähnelt.
        /// </summary>
        public static string NEW_SCHEDULE {
            get {
                return ResourceManager.GetString("NEW_SCHEDULE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New Search ähnelt.
        /// </summary>
        public static string NEW_SEARCH {
            get {
                return ResourceManager.GetString("NEW_SEARCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connection to {0} has been lost ähnelt.
        /// </summary>
        public static string NEW_SR_CONNECTION_LOST {
            get {
                return ResourceManager.GetString("NEW_SR_CONNECTION_LOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The selected disk is not shared. If you add non shared disks to the VM it will became non-agile.
        /// Do you want to continue? ähnelt.
        /// </summary>
        public static string NEW_SR_DIALOG_ATTACH_NON_SHARED_DISK_HA {
            get {
                return ResourceManager.GetString("NEW_SR_DIALOG_ATTACH_NON_SHARED_DISK_HA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attached SRs ähnelt.
        /// </summary>
        public static string NEW_SR_WIZARD_FINAL_ACTION_END {
            get {
                return ResourceManager.GetString("NEW_SR_WIZARD_FINAL_ACTION_END", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attaching SRs ähnelt.
        /// </summary>
        public static string NEW_SR_WIZARD_FINAL_ACTION_START {
            get {
                return ResourceManager.GetString("NEW_SR_WIZARD_FINAL_ACTION_START", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New Storage Repository ähnelt.
        /// </summary>
        public static string NEW_SR_WIZARD_FINAL_ACTION_TITLE {
            get {
                return ResourceManager.GetString("NEW_SR_WIZARD_FINAL_ACTION_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Edit tags... ähnelt.
        /// </summary>
        public static string NEW_TAG_LINK {
            get {
                return ResourceManager.GetString("NEW_TAG_LINK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter &amp;name for new template: ähnelt.
        /// </summary>
        public static string NEW_TEMPLATE_PROMPT {
            get {
                return ResourceManager.GetString("NEW_TEMPLATE_PROMPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New Update Available - {0} ähnelt.
        /// </summary>
        public static string NEW_UPDATE_AVAILABLE {
            get {
                return ResourceManager.GetString("NEW_UPDATE_AVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;New vApp... ähnelt.
        /// </summary>
        public static string NEW_VM_APPLIANCE {
            get {
                return ResourceManager.GetString("NEW_VM_APPLIANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The amount of physical memory allocated to this VM is greater than the free memory of its home server ähnelt.
        /// </summary>
        public static string NEW_VM_FREE_MEMORY_WARNING {
            get {
                return ResourceManager.GetString("NEW_VM_FREE_MEMORY_WARNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;New VM From Snapshot... ähnelt.
        /// </summary>
        public static string NEW_VM_FROM_SNAPSHOT_MENU_ITEM {
            get {
                return ResourceManager.GetString("NEW_VM_FROM_SNAPSHOT_MENU_ITEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The amount of physical memory allocated to this VM is greater than the total memory of its home server ähnelt.
        /// </summary>
        public static string NEW_VM_TOTAL_MEMORY_WARNING {
            get {
                return ResourceManager.GetString("NEW_VM_TOTAL_MEMORY_WARNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New VM ähnelt.
        /// </summary>
        public static string NEW_VM_WIZARD {
            get {
                return ResourceManager.GetString("NEW_VM_WIZARD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The BIOS strings have already been set for this template and cannot be changed. ähnelt.
        /// </summary>
        public static string NEW_VM_WIZARD_BIOS_STRINGS_CANNOT_BE_CHANGED {
            get {
                return ResourceManager.GetString("NEW_VM_WIZARD_BIOS_STRINGS_CANNOT_BE_CHANGED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot find a storage repository or all your storage repositories are full. ähnelt.
        /// </summary>
        public static string NEW_VM_WIZARD_NO_SR_OR_SRS_FULL {
            get {
                return ResourceManager.GetString("NEW_VM_WIZARD_NO_SR_OR_SRS_FULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You must have some working storage to create a VM ähnelt.
        /// </summary>
        public static string NEW_VM_WIZARD_NO_SRS {
            get {
                return ResourceManager.GetString("NEW_VM_WIZARD_NO_SRS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Asianux ähnelt.
        /// </summary>
        public static string NEW_VM_WIZARD_TEMPLATEPAGE_ASIANUX {
            get {
                return ResourceManager.GetString("NEW_VM_WIZARD_TEMPLATEPAGE_ASIANUX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NeoKylin ähnelt.
        /// </summary>
        public static string NEW_VM_WIZARD_TEMPLATEPAGE_NEOKYLIN {
            get {
                return ResourceManager.GetString("NEW_VM_WIZARD_TEMPLATEPAGE_NEOKYLIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Turbo ähnelt.
        /// </summary>
        public static string NEW_VM_WIZARD_TEMPLATEPAGE_TURBO {
            get {
                return ResourceManager.GetString("NEW_VM_WIZARD_TEMPLATEPAGE_TURBO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ubuntu ähnelt.
        /// </summary>
        public static string NEW_VM_WIZARD_TEMPLATEPAGE_UBUNTU {
            get {
                return ResourceManager.GetString("NEW_VM_WIZARD_TEMPLATEPAGE_UBUNTU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die YinheKylin ähnelt.
        /// </summary>
        public static string NEW_VM_WIZARD_TEMPLATEPAGE_YINHEKYLIN {
            get {
                return ResourceManager.GetString("NEW_VM_WIZARD_TEMPLATEPAGE_YINHEKYLIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New [XenCenter] version required ähnelt.
        /// </summary>
        public static string NEW_XENCENTER_REQUIRED_INFO {
            get {
                return ResourceManager.GetString("NEW_XENCENTER_REQUIRED_INFO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You need to shutdown and then restart the VM before it can access the new disk. ähnelt.
        /// </summary>
        public static string NEWDISKWIZARD_MESSAGE {
            get {
                return ResourceManager.GetString("NEWDISKWIZARD_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disk Created ähnelt.
        /// </summary>
        public static string NEWDISKWIZARD_MESSAGE_TITLE {
            get {
                return ResourceManager.GetString("NEWDISKWIZARD_MESSAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There is a newer version of [XenCenter] available. Please contact your support representative. ähnelt.
        /// </summary>
        public static string NEWER_GUI_AVAILABLE {
            get {
                return ResourceManager.GetString("NEWER_GUI_AVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New Network ähnelt.
        /// </summary>
        public static string NEWNETWORK_NAME {
            get {
                return ResourceManager.GetString("NEWNETWORK_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New Private Network ähnelt.
        /// </summary>
        public static string NEWNETWORK_VNAME {
            get {
                return ResourceManager.GetString("NEWNETWORK_VNAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New Network - {0} ähnelt.
        /// </summary>
        public static string NEWNETWORKWIZARD_TITLE {
            get {
                return ResourceManager.GetString("NEWNETWORKWIZARD_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This server&apos;s hardware is incompatible with the master&apos;s ähnelt.
        /// </summary>
        public static string NEWPOOL_DIFF_HARDWARE {
            get {
                return ResourceManager.GetString("NEWPOOL_DIFF_HARDWARE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This server is a different version to the master ähnelt.
        /// </summary>
        public static string NEWPOOL_DIFF_SERVER {
            get {
                return ResourceManager.GetString("NEWPOOL_DIFF_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This server has different updates from the master ähnelt.
        /// </summary>
        public static string NEWPOOL_DIFFERENT_HOMOGENEOUS_UPDATES_FROM_MASTER {
            get {
                return ResourceManager.GetString("NEWPOOL_DIFFERENT_HOMOGENEOUS_UPDATES_FROM_MASTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This server has different updates from servers already in the pool ähnelt.
        /// </summary>
        public static string NEWPOOL_DIFFERENT_HOMOGENEOUS_UPDATES_FROM_POOL {
            get {
                return ResourceManager.GetString("NEWPOOL_DIFFERENT_HOMOGENEOUS_UPDATES_FROM_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This server&apos;s network backend is different from the master&apos;s ähnelt.
        /// </summary>
        public static string NEWPOOL_DIFFERENT_NETWORK_BACKENDS {
            get {
                return ResourceManager.GetString("NEWPOOL_DIFFERENT_NETWORK_BACKENDS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This server has a different Active Directory configuration to the master ähnelt.
        /// </summary>
        public static string NEWPOOL_DIFFERING_AD_CONFIG {
            get {
                return ResourceManager.GetString("NEWPOOL_DIFFERING_AD_CONFIG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This server has running VMs ähnelt.
        /// </summary>
        public static string NEWPOOL_HAS_RUNNING_VMS {
            get {
                return ResourceManager.GetString("NEWPOOL_HAS_RUNNING_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This server has shared storage ähnelt.
        /// </summary>
        public static string NEWPOOL_HAS_SHARED_STORAGE {
            get {
                return ResourceManager.GetString("NEWPOOL_HAS_SHARED_STORAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This server is master of an existing pool ähnelt.
        /// </summary>
        public static string NEWPOOL_IS_A_POOL {
            get {
                return ResourceManager.GetString("NEWPOOL_IS_A_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You cannot add a licensed server to an unlicensed pool ähnelt.
        /// </summary>
        public static string NEWPOOL_LICENSED_HOST_UNLICENSED_MASTER {
            get {
                return ResourceManager.GetString("NEWPOOL_LICENSED_HOST_UNLICENSED_MASTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This server does not have the same license as the pool master ähnelt.
        /// </summary>
        public static string NEWPOOL_LICENSEMISMATCH {
            get {
                return ResourceManager.GetString("NEWPOOL_LICENSEMISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This server&apos;s linux pack installation state differs from that of the master ähnelt.
        /// </summary>
        public static string NEWPOOL_LINUXPACK {
            get {
                return ResourceManager.GetString("NEWPOOL_LINUXPACK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The master is still connecting ähnelt.
        /// </summary>
        public static string NEWPOOL_MASTER_CONNECTING {
            get {
                return ResourceManager.GetString("NEWPOOL_MASTER_CONNECTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The master is disconnected ähnelt.
        /// </summary>
        public static string NEWPOOL_MASTER_DISCONNECTED {
            get {
                return ResourceManager.GetString("NEWPOOL_MASTER_DISCONNECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your current role on the master is not authorized to add hosts to the master&apos;s pool ähnelt.
        /// </summary>
        public static string NEWPOOL_MASTER_ROLE {
            get {
                return ResourceManager.GetString("NEWPOOL_MASTER_ROLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The pool has already reached the maximum number of servers allowed by your license ähnelt.
        /// </summary>
        public static string NEWPOOL_MAX_NUMBER_HOST_REACHED {
            get {
                return ResourceManager.GetString("NEWPOOL_MAX_NUMBER_HOST_REACHED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pooling is restricted with this server&apos;s license ähnelt.
        /// </summary>
        public static string NEWPOOL_POOLINGRESTRICTED {
            get {
                return ResourceManager.GetString("NEWPOOL_POOLINGRESTRICTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your current role on the slave is not authorized to add the slave to a pool ähnelt.
        /// </summary>
        public static string NEWPOOL_SLAVE_ROLE {
            get {
                return ResourceManager.GetString("NEWPOOL_SLAVE_ROLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You cannot add an unlicensed server to a licensed pool ähnelt.
        /// </summary>
        public static string NEWPOOL_UNLICENSED_HOST_LICENSED_MASTER {
            get {
                return ResourceManager.GetString("NEWPOOL_UNLICENSED_HOST_LICENSED_MASTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The pool will exceed the maximum number of servers allowed by your license ähnelt.
        /// </summary>
        public static string NEWPOOL_WILL_EXCEED_POOL_MAX_SIZE {
            get {
                return ResourceManager.GetString("NEWPOOL_WILL_EXCEED_POOL_MAX_SIZE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NFS SR [{0}] ähnelt.
        /// </summary>
        public static string NEWSR_ACTION {
            get {
                return ResourceManager.GetString("NEWSR_ACTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SMB ISO Library [{0}] ähnelt.
        /// </summary>
        public static string NEWSR_CIF_DESCRIPTION {
            get {
                return ResourceManager.GetString("NEWSR_CIF_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SMB SR [{0}] ähnelt.
        /// </summary>
        public static string NEWSR_CIFS_ACTION {
            get {
                return ResourceManager.GetString("NEWSR_CIFS_ACTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SMB servers are a common form of Windows shared filesystem infrastructure, and can be used as a storage repository substrate for virtual disks.
        ///
        ///As SMB storage repositories are shared, the virtual disks stored in them allow VMs to be started on any server in a resource pool and to be migrated between them using Live Migration.
        ///
        ///When you configure a SMB storage repository, you simply provide the hostname or IP address of the SMB server, the user name, the password and the path to a directory that will be [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string NEWSR_CIFS_BLURB {
            get {
                return ResourceManager.GetString("NEWSR_CIFS_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select this option if you have a library of VM installation ISO images available as a Windows (SMB/CIFS) share that you want to attach to your host or pool. ähnelt.
        /// </summary>
        public static string NEWSR_CIFS_ISO_BLURB {
            get {
                return ResourceManager.GetString("NEWSR_CIFS_ISO_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Windows File Sharing (SMB/CIFS) ähnelt.
        /// </summary>
        public static string NEWSR_CIFS_ISO_TYPE_NAME {
            get {
                return ResourceManager.GetString("NEWSR_CIFS_ISO_TYPE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SMB/CIFS ähnelt.
        /// </summary>
        public static string NEWSR_CIFS_TYPE_NAME {
            get {
                return ResourceManager.GetString("NEWSR_CIFS_TYPE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the storage system adapter ähnelt.
        /// </summary>
        public static string NEWSR_CSLG_ADAPTER_PAGE_TITLE {
            get {
                return ResourceManager.GetString("NEWSR_CSLG_ADAPTER_PAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Auto ähnelt.
        /// </summary>
        public static string NEWSR_CSLG_AUTO {
            get {
                return ResourceManager.GetString("NEWSR_CSLG_AUTO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die StorageLink technology is used to connect to any of the leading storage architectures and protocols, including DAS, NAS, SAN, iSCSI and Fibre Channel. ähnelt.
        /// </summary>
        public static string NEWSR_CSLG_BLURB {
            get {
                return ResourceManager.GetString("NEWSR_CSLG_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deduplication ähnelt.
        /// </summary>
        public static string NEWSR_CSLG_DEDUPLICATION {
            get {
                return ResourceManager.GetString("NEWSR_CSLG_DEDUPLICATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Default ähnelt.
        /// </summary>
        public static string NEWSR_CSLG_DEFAULT_PROVISIONING {
            get {
                return ResourceManager.GetString("NEWSR_CSLG_DEFAULT_PROVISIONING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fibre Channel ähnelt.
        /// </summary>
        public static string NEWSR_CSLG_FC {
            get {
                return ResourceManager.GetString("NEWSR_CSLG_FC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die iSCSI ähnelt.
        /// </summary>
        public static string NEWSR_CSLG_ISCSI {
            get {
                return ResourceManager.GetString("NEWSR_CSLG_ISCSI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die None ähnelt.
        /// </summary>
        public static string NEWSR_CSLG_NONE {
            get {
                return ResourceManager.GetString("NEWSR_CSLG_NONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the storage system for your storage repository ähnelt.
        /// </summary>
        public static string NEWSR_CSLG_PAGE_TITLE {
            get {
                return ResourceManager.GetString("NEWSR_CSLG_PAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the storage repository settings for use with the provisioning of new storage volumes ähnelt.
        /// </summary>
        public static string NEWSR_CSLG_SETTINGS_PAGE_TITLE {
            get {
                return ResourceManager.GetString("NEWSR_CSLG_SETTINGS_PAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Thick ähnelt.
        /// </summary>
        public static string NEWSR_CSLG_THICK_PROVISIONING {
            get {
                return ResourceManager.GetString("NEWSR_CSLG_THICK_PROVISIONING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Thin ähnelt.
        /// </summary>
        public static string NEWSR_CSLG_THIN_PROVISIONING {
            get {
                return ResourceManager.GetString("NEWSR_CSLG_THIN_PROVISIONING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die StorageLink technology ähnelt.
        /// </summary>
        public static string NEWSR_CSLG_TYPE_NAME {
            get {
                return ResourceManager.GetString("NEWSR_CSLG_TYPE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dell EqualLogic is a scalable form of high performance network attached storage, which supports the addition of capacity without downtime. You can use Dell EqualLogic shared storage to support [XenServer] features such as Live Migration and High Availability. ähnelt.
        /// </summary>
        public static string NEWSR_EQUAL_LOGIC_BLURB {
            get {
                return ResourceManager.GetString("NEWSR_EQUAL_LOGIC_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dell EqualLogic SR [{0} ({1})] ähnelt.
        /// </summary>
        public static string NEWSR_EQUAL_LOGIC_DESCRIPTION {
            get {
                return ResourceManager.GetString("NEWSR_EQUAL_LOGIC_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dell EqualLogic filer &amp;address: ähnelt.
        /// </summary>
        public static string NEWSR_EQUAL_LOGIC_FILER_ADDRESS {
            get {
                return ResourceManager.GetString("NEWSR_EQUAL_LOGIC_FILER_ADDRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die EqualLogic Filer Details ähnelt.
        /// </summary>
        public static string NEWSR_EQUAL_LOGIC_FILER_DETAILS_TEXT {
            get {
                return ResourceManager.GetString("NEWSR_EQUAL_LOGIC_FILER_DETAILS_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter the Dell EqualLogic filer details ähnelt.
        /// </summary>
        public static string NEWSR_EQUAL_LOGIC_FILER_PAGE_TITLE {
            get {
                return ResourceManager.GetString("NEWSR_EQUAL_LOGIC_FILER_PAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Software FCoE virtual disk storage ähnelt.
        /// </summary>
        public static string NEWSR_FCOE_DEFAULT_NAME {
            get {
                return ResourceManager.GetString("NEWSR_FCOE_DEFAULT_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hardware HBA virtual disk storage ähnelt.
        /// </summary>
        public static string NEWSR_HBA_DEFAULT_NAME {
            get {
                return ResourceManager.GetString("NEWSR_HBA_DEFAULT_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die iSCSI SR [{0} ({1}; {2})] ähnelt.
        /// </summary>
        public static string NEWSR_ISCSI_DESCRIPTION {
            get {
                return ResourceManager.GetString("NEWSR_ISCSI_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating a new virtual disk on this LUN will destroy any data present. You must ensure that no other system is using the LUN, including any servers, or the virtual disk may become corrupted while in use.
        ///
        ///Do you want to format the disk? ähnelt.
        /// </summary>
        public static string NEWSR_ISCSI_FORMAT_WARNING {
            get {
                return ResourceManager.GetString("NEWSR_ISCSI_FORMAT_WARNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NFS ISO Library [{0}] ähnelt.
        /// </summary>
        public static string NEWSR_ISO_DESCRIPTION {
            get {
                return ResourceManager.GetString("NEWSR_ISO_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Location ähnelt.
        /// </summary>
        public static string NEWSR_LOCATION {
            get {
                return ResourceManager.GetString("NEWSR_LOCATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This LUN does not contain a Storage Repository.  Please select another LUN. ähnelt.
        /// </summary>
        public static string NEWSR_LUN_HAS_NO_SRS {
            get {
                return ResourceManager.GetString("NEWSR_LUN_HAS_NO_SRS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This LUN is already in use. ähnelt.
        /// </summary>
        public static string NEWSR_LUN_IN_USE {
            get {
                return ResourceManager.GetString("NEWSR_LUN_IN_USE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This LUN is already in use as SR {0} on pool {1}. ähnelt.
        /// </summary>
        public static string NEWSR_LUN_IN_USE_ON_POOL {
            get {
                return ResourceManager.GetString("NEWSR_LUN_IN_USE_ON_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This LUN is already in use as SR {0} on server {1}. ähnelt.
        /// </summary>
        public static string NEWSR_LUN_IN_USE_ON_SERVER {
            get {
                return ResourceManager.GetString("NEWSR_LUN_IN_USE_ON_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer] hosts support Software based Fibre Channel over Ethernet using supported Converged Network Adapters (CNAs) which support FCoE in this way.
        ///
        ///All configuration required to expose a LUN to the host must be completed manually, including configuring your FCoE fabric, and allocating LUN(s) to your CNA’s public world wide name (PWWN). 
        ///
        ///Once this configuration has been carried out, this wizard will walk you through discovering and mounting a LUN available to the hosts CNA’s as a SCSI device. The SC [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string NEWSR_LVMOFCOE_BLURB {
            get {
                return ResourceManager.GetString("NEWSR_LVMOFCOE_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Software FCoE SR [{0} - {1}] ähnelt.
        /// </summary>
        public static string NEWSR_LVMOFCOE_DESCRIPTION {
            get {
                return ResourceManager.GetString("NEWSR_LVMOFCOE_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Software FCoE ähnelt.
        /// </summary>
        public static string NEWSR_LVMOFCOE_TYPE_NAME {
            get {
                return ResourceManager.GetString("NEWSR_LVMOFCOE_TYPE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer] hosts support Fibre Channel (FC), Fibre Channel over Ethernet (FCoE) and shared Serial Attached SCSI (SAS) storage area networks (SANs) using host bus adapters (HBAs).
        ///
        ///All configuration required to expose a LUN to the host must be completed manually, including storage devices, network devices, and the HBA within the [XenServer] host.
        ///
        ///Once all configuration is complete the HBA will expose a SCSI device backed by the LUN to the host. The SCSI device can then be used to access the LUN as if i [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string NEWSR_LVMOHBA_BLURB {
            get {
                return ResourceManager.GetString("NEWSR_LVMOHBA_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hardware HBA SR [{0} - {1}] ähnelt.
        /// </summary>
        public static string NEWSR_LVMOHBA_DESCRIPTION {
            get {
                return ResourceManager.GetString("NEWSR_LVMOHBA_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Create ähnelt.
        /// </summary>
        public static string NEWSR_LVMOHBA_NEXT_TEXT {
            get {
                return ResourceManager.GetString("NEWSR_LVMOHBA_NEXT_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} ({1} - {2}) ähnelt.
        /// </summary>
        public static string NEWSR_LVMOHBA_SUMMARY_DETAILS_CELL_TEXT {
            get {
                return ResourceManager.GetString("NEWSR_LVMOHBA_SUMMARY_DETAILS_CELL_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed to create {0} SRs ähnelt.
        /// </summary>
        public static string NEWSR_LVMOHBA_SUMMARY_FAILURE_MULTIPLE {
            get {
                return ResourceManager.GetString("NEWSR_LVMOHBA_SUMMARY_FAILURE_MULTIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed to create SR ähnelt.
        /// </summary>
        public static string NEWSR_LVMOHBA_SUMMARY_FAILURE_SINGLE {
            get {
                return ResourceManager.GetString("NEWSR_LVMOHBA_SUMMARY_FAILURE_SINGLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Summary of new Storage Repositories creation ähnelt.
        /// </summary>
        public static string NEWSR_LVMOHBA_SUMMARY_MULTIPLE_TITLE {
            get {
                return ResourceManager.GetString("NEWSR_LVMOHBA_SUMMARY_MULTIPLE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Summary of new Storage Repository creation ähnelt.
        /// </summary>
        public static string NEWSR_LVMOHBA_SUMMARY_SINGLE_TITLE {
            get {
                return ResourceManager.GetString("NEWSR_LVMOHBA_SUMMARY_SINGLE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} SRs created successfully ähnelt.
        /// </summary>
        public static string NEWSR_LVMOHBA_SUMMARY_SUCCESS_MULTIPLE {
            get {
                return ResourceManager.GetString("NEWSR_LVMOHBA_SUMMARY_SUCCESS_MULTIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SR created successfully ähnelt.
        /// </summary>
        public static string NEWSR_LVMOHBA_SUMMARY_SUCCESS_SINGLE {
            get {
                return ResourceManager.GetString("NEWSR_LVMOHBA_SUMMARY_SUCCESS_SINGLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Summary ähnelt.
        /// </summary>
        public static string NEWSR_LVMOHBA_SUMMARY_TEXT {
            get {
                return ResourceManager.GetString("NEWSR_LVMOHBA_SUMMARY_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hardware HBA ähnelt.
        /// </summary>
        public static string NEWSR_LVMOHBA_TYPE_NAME {
            get {
                return ResourceManager.GetString("NEWSR_LVMOHBA_TYPE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die iSCSI or Fibre Channel access to a shared LUN can be configured using LVM.
        ///
        ///Using an LVM for a shared SR provides the same performance benefits as a unshared LVM for local disk storage but also enables VM agility. ähnelt.
        /// </summary>
        public static string NEWSR_LVMOISCSI_BLURB {
            get {
                return ResourceManager.GetString("NEWSR_LVMOISCSI_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die iSCSI ähnelt.
        /// </summary>
        public static string NEWSR_LVMOISCSI_TYPE_NAME {
            get {
                return ResourceManager.GetString("NEWSR_LVMOISCSI_TYPE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Warning: you must ensure that the following SR is not in use by any server not connected to [XenCenter]. Failure to do so may result in data loss.
        ///
        ///SR:  {0}
        ///
        ///Do you want to reattach the SR? ähnelt.
        /// </summary>
        public static string NEWSR_MULTI_POOL_WARNING {
            get {
                return ResourceManager.GetString("NEWSR_MULTI_POOL_WARNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name ähnelt.
        /// </summary>
        public static string NEWSR_NAMEPAGE_TEXT {
            get {
                return ResourceManager.GetString("NEWSR_NAMEPAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die What do you want to call this Storage Repository? ähnelt.
        /// </summary>
        public static string NEWSR_NAMEPAGE_TITLE {
            get {
                return ResourceManager.GetString("NEWSR_NAMEPAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die If you have access to a Network Appliance (NetApp) filer with sufficient disk space, running a version of Data ONTAP 7G (version 7.2 or greater), you can configure a custom NetApp Storage Repository. 
        ///
        ///The driver uses the ZAPI interface to the filer to create a group of FlexVols which correspond to an SR. VDIs are created as virtual LUNs on the filer, and attached to the host using an iSCSI data path. 
        ///
        ///VM cloning uses the snapshot and clone capabilities of the filer to provide high performance and to e [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string NEWSR_NETAPP_BLURB {
            get {
                return ResourceManager.GetString("NEWSR_NETAPP_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This aggregate does not support FAS deduplication ähnelt.
        /// </summary>
        public static string NEWSR_NETAPP_DEDUP_UNAVAILABLE {
            get {
                return ResourceManager.GetString("NEWSR_NETAPP_DEDUP_UNAVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NetApp SR [{0} ({1})] ähnelt.
        /// </summary>
        public static string NEWSR_NETAPP_DESCRIPTION {
            get {
                return ResourceManager.GetString("NEWSR_NETAPP_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NetApp filer &amp;address: ähnelt.
        /// </summary>
        public static string NEWSR_NETAPP_FILER_ADDRESS {
            get {
                return ResourceManager.GetString("NEWSR_NETAPP_FILER_ADDRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NetApp Filer Details ähnelt.
        /// </summary>
        public static string NEWSR_NETAPP_FILER_DETAILS_TEXT {
            get {
                return ResourceManager.GetString("NEWSR_NETAPP_FILER_DETAILS_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter the NetApp filer details ähnelt.
        /// </summary>
        public static string NEWSR_NETAPP_FILER_PAGE_TITLE {
            get {
                return ResourceManager.GetString("NEWSR_NETAPP_FILER_PAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select this option if you have a library of VM installation ISO images available as a NFS share that you want to attach to your host or pool. ähnelt.
        /// </summary>
        public static string NEWSR_NFS_ISO_BLURB {
            get {
                return ResourceManager.GetString("NEWSR_NFS_ISO_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NFS ISO ähnelt.
        /// </summary>
        public static string NEWSR_NFS_ISO_TYPE_NAME {
            get {
                return ResourceManager.GetString("NEWSR_NFS_ISO_TYPE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No IQNs were found on {0}. ähnelt.
        /// </summary>
        public static string NEWSR_NO_IQNS_FOUND {
            get {
                return ResourceManager.GetString("NEWSR_NO_IQNS_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No LUNs were found on {0}. ähnelt.
        /// </summary>
        public static string NEWSR_NO_LUNS_FOUND {
            get {
                return ResourceManager.GetString("NEWSR_NO_LUNS_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;No SRs were found&gt; ähnelt.
        /// </summary>
        public static string NEWSR_NO_SRS_FOUND {
            get {
                return ResourceManager.GetString("NEWSR_NO_SRS_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The given filer has no existing SRs and nowhere to create a new SR. ähnelt.
        /// </summary>
        public static string NEWSR_NOWHERE_TO_CREATE {
            get {
                return ResourceManager.GetString("NEWSR_NOWHERE_TO_CREATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter a path for your SMB storage ähnelt.
        /// </summary>
        public static string NEWSR_PATH_CIFS {
            get {
                return ResourceManager.GetString("NEWSR_PATH_CIFS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter a path for your iSCSI storage ähnelt.
        /// </summary>
        public static string NEWSR_PATH_ISCSI {
            get {
                return ResourceManager.GetString("NEWSR_PATH_ISCSI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter a path for your NFS ISO storage ähnelt.
        /// </summary>
        public static string NEWSR_PATH_ISO {
            get {
                return ResourceManager.GetString("NEWSR_PATH_ISO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter a path for your SMB ISO storage ähnelt.
        /// </summary>
        public static string NEWSR_PATH_ISO_CIFS {
            get {
                return ResourceManager.GetString("NEWSR_PATH_ISO_CIFS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter a path for your NFS storage ähnelt.
        /// </summary>
        public static string NEWSR_PATH_NFS {
            get {
                return ResourceManager.GetString("NEWSR_PATH_NFS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the LUN to reattach or create a new SR on ähnelt.
        /// </summary>
        public static string NEWSR_SELECT_LUN {
            get {
                return ResourceManager.GetString("NEWSR_SELECT_LUN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New Storage Repository - {0} ähnelt.
        /// </summary>
        public static string NEWSR_TEXT {
            get {
                return ResourceManager.GetString("NEWSR_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attach Storage Repository - {0} ähnelt.
        /// </summary>
        public static string NEWSR_TEXT_ATTACH {
            get {
                return ResourceManager.GetString("NEWSR_TEXT_ATTACH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NFS servers are a common form of shared filesystem infrastructure, and can be used as a storage repository substrate for virtual disks.
        ///
        ///As NFS storage repositories are shared, the virtual disks stored in them allow VMs to be started on any server in a resource pool and to be migrated between them using Live Migration.
        ///
        ///When you configure an NFS storage repository, you simply provide the hostname or IP address of the NFS server and the path to a directory that will be used to contain the storage reposit [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string NEWSR_VHDONFS_BLURB {
            get {
                return ResourceManager.GetString("NEWSR_VHDONFS_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NFS ähnelt.
        /// </summary>
        public static string NEWSR_VHDONFS_TYPE_NAME {
            get {
                return ResourceManager.GetString("NEWSR_VHDONFS_TYPE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} ({1}) ähnelt.
        /// </summary>
        public static string NEWVM_DEFAULTNAME {
            get {
                return ResourceManager.GetString("NEWVM_DEFAULTNAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ftp://server/path ähnelt.
        /// </summary>
        public static string NEWVM_INSTALL_URL_EXAMPLE_FTP {
            get {
                return ResourceManager.GetString("NEWVM_INSTALL_URL_EXAMPLE_FTP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die http://server/path ähnelt.
        /// </summary>
        public static string NEWVM_INSTALL_URL_EXAMPLE_HTTP {
            get {
                return ResourceManager.GetString("NEWVM_INSTALL_URL_EXAMPLE_HTTP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die nfs://server/path ähnelt.
        /// </summary>
        public static string NEWVM_INSTALL_URL_EXAMPLE_NFS {
            get {
                return ResourceManager.GetString("NEWVM_INSTALL_URL_EXAMPLE_NFS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New VM - {0} ähnelt.
        /// </summary>
        public static string NEWVM_TITLE {
            get {
                return ResourceManager.GetString("NEWVM_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Finish ähnelt.
        /// </summary>
        public static string NEWVMAPPLIANCE_FINISHPAGE_TEXT {
            get {
                return ResourceManager.GetString("NEWVMAPPLIANCE_FINISHPAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Create the new vApp ähnelt.
        /// </summary>
        public static string NEWVMAPPLIANCE_FINISHPAGE_TITLE {
            get {
                return ResourceManager.GetString("NEWVMAPPLIANCE_FINISHPAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name ähnelt.
        /// </summary>
        public static string NEWVMAPPLIANCE_NAMEPAGE_TEXT {
            get {
                return ResourceManager.GetString("NEWVMAPPLIANCE_NAMEPAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die What do you want to call this vApp? ähnelt.
        /// </summary>
        public static string NEWVMAPPLIANCE_NAMEPAGE_TITLE {
            get {
                return ResourceManager.GetString("NEWVMAPPLIANCE_NAMEPAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VM Startup Sequence ähnelt.
        /// </summary>
        public static string NEWVMAPPLIANCE_VMORDERANDDELAYSPAGE_TEXT {
            get {
                return ResourceManager.GetString("NEWVMAPPLIANCE_VMORDERANDDELAYSPAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure the startup sequence for the VMs in this vApp ähnelt.
        /// </summary>
        public static string NEWVMAPPLIANCE_VMORDERANDDELAYSPAGE_TITLE {
            get {
                return ResourceManager.GetString("NEWVMAPPLIANCE_VMORDERANDDELAYSPAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Virtual Machines ähnelt.
        /// </summary>
        public static string NEWVMAPPLIANCE_VMSPAGE_TEXT {
            get {
                return ResourceManager.GetString("NEWVMAPPLIANCE_VMSPAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose which VMs to include in this vApp ähnelt.
        /// </summary>
        public static string NEWVMAPPLIANCE_VMSPAGE_TITLE {
            get {
                return ResourceManager.GetString("NEWVMAPPLIANCE_VMSPAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Installation Source ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_CDMEDIAPAGE_INSTALLATIONSOURCE {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_CDMEDIAPAGE_INSTALLATIONSOURCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Source ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_CDMEDIAPAGE_NAME {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_CDMEDIAPAGE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Locate the operating system installation media ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_CDMEDIAPAGE_TITLE {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_CDMEDIAPAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cloud-Config Parameters ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_CLOUD_CONFIG_PARAMETERS_PAGE {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_CLOUD_CONFIG_PARAMETERS_PAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure Cloud-Config Parameters ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_CLOUD_CONFIG_PARAMETERS_PAGE_TITLE {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_CLOUD_CONFIG_PARAMETERS_PAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy BIOS Strings from ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_COPY_BIOS_STRINGS_PAGE_HOST {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_COPY_BIOS_STRINGS_PAGE_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die BIOS Strings ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_COPY_BIOS_STRINGS_PAGE_NAME {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_COPY_BIOS_STRINGS_PAGE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the server that will provide the BIOS strings ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_COPY_BIOS_STRINGS_PAGE_TITLE {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_COPY_BIOS_STRINGS_PAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initial number of vCPUs ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_CPUMEMPAGE_INITIAL_VCPUS {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_CPUMEMPAGE_INITIAL_VCPUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum number of vCPUs ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_CPUMEMPAGE_MAX_VCPUS {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_CPUMEMPAGE_MAX_VCPUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The amount of memory allocated to the new VM is greater than the amount of physical memory on any server in the pool.
        ///
        ///Server &apos;{0}&apos; has {1} of physical memory in total.
        ///
        ///You will not be able to start this VM without increasing the amount of physical memory on one of the servers in the pool. ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_CPUMEMPAGE_MEMORYWARN1 {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_CPUMEMPAGE_MEMORYWARN1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The amount of memory allocated to the new VM is greater than the amount of physical memory available on any server in the pool.
        ///
        ///Server &apos;{0}&apos; has {1} of physical memory available.
        ///
        ///You will not be able to start this VM without freeing some space on one of the servers. ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_CPUMEMPAGE_MEMORYWARN2 {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_CPUMEMPAGE_MEMORYWARN2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die CPU &amp;&amp; Memory ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_CPUMEMPAGE_NAME {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_CPUMEMPAGE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Specify the number of virtual CPUs, their topology, and the amount of memory that will be allocated to the new virtual machine.  ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_CPUMEMPAGE_RUBRIC {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_CPUMEMPAGE_RUBRIC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Allocate processor and memory resources ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_CPUMEMPAGE_TITLE {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_CPUMEMPAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Topology ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_CPUMEMPAGE_TOPOLOGY {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_CPUMEMPAGE_TOPOLOGY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die vCPUs ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_CPUMEMPAGE_VCPUS {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_CPUMEMPAGE_VCPUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The number of vCPUs given to the new VM is greater than the number of physical CPUs on any server in the pool.
        ///
        ///Server &apos;{0}&apos; has {1} physical CPUs.
        ///
        ///Performance of this VM will be greatly reduced if it is started with this many vCPUs. ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_CPUMEMPAGE_VCPUSWARN {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_CPUMEMPAGE_VCPUSWARN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All the necessary information has been collected and the wizard is ready to provision the new virtual machine using the settings shown below.
        ///
        ///Review these settings, then click Previous if you need to change anything. Otherwise, click Create Now to create the new VM. It may take several minutes to create the new VM. ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_FINISHPAGE {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_FINISHPAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Create Now ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_FINISHPAGE_CREATE {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_FINISHPAGE_CREATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Finish ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_FINISHPAGE_NAME {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_FINISHPAGE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ready to create the new virtual machine ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_FINISHPAGE_TITLE {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_FINISHPAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die First Run ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_FIRSTRUNPAGE_NAME {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_FIRSTRUNPAGE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Before you begin ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_FIRSTRUNPAGE_TITLE {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_FIRSTRUNPAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die none ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_HOMESERVER_NONE {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_HOMESERVER_NONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Home Server ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_HOMESERVERPAGE_HOMESERVER {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_HOMESERVERPAGE_HOMESERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Home Server ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_HOMESERVERPAGE_NAME {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_HOMESERVERPAGE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select a home server ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_HOMESERVERPAGE_TITLE {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_HOMESERVERPAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die CD ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_INSTALLATIONMEDIAPAGE_CD {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_INSTALLATIONMEDIAPAGE_CD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Install Method ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_INSTALLATIONMEDIAPAGE_INSTALLMETHOD {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_INSTALLATIONMEDIAPAGE_INSTALLMETHOD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Installation Media ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_INSTALLATIONMEDIAPAGE_NAME {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_INSTALLATIONMEDIAPAGE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_INSTALLATIONMEDIAPAGE_NETWORK {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_INSTALLATIONMEDIAPAGE_NETWORK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die none ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_INSTALLATIONMEDIAPAGE_NONE {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_INSTALLATIONMEDIAPAGE_NONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Locate the operating system installation media ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_INSTALLATIONMEDIAPAGE_TITLE {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_INSTALLATIONMEDIAPAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;DVD drive: ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_INSTALLMEDIA_DVD {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_INSTALLMEDIA_DVD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Install from ISO library or &amp;DVD drive: ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_INSTALLMEDIA_INSTALLDVD {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_INSTALLMEDIA_INSTALLDVD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Boot from network ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_INSTALLMEDIA_INSTALLPXE {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_INSTALLMEDIA_INSTALLPXE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Install from &amp;URL: ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_INSTALLMEDIA_INSTALLURL {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_INSTALLMEDIA_INSTALLURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_NAMEPAGE_NAME {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_NAMEPAGE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_NAMEPAGE_NAME2 {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_NAMEPAGE_NAME2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name the new virtual machine ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_NAMEPAGE_TITLE {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_NAMEPAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;autogenerated MAC&gt; ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_NETWORKINGPAGE_AUTOGEN {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_NETWORKINGPAGE_AUTOGEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Networking ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_NETWORKINGPAGE_NAME {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_NETWORKINGPAGE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure networking on the new VM ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_NETWORKINGPAGE_TITLE {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_NETWORKINGPAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network Interface {0} ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_NETWORKINGPAGE_VIF {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_NETWORKINGPAGE_VIF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Virtual network interfaces on {0} ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_NETWORKINGPAGE_VIFSON {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_NETWORKINGPAGE_VIFSON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Installation Method ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_NETWORKMEDIAPAGE_INSTALLATIONMETHOD {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_NETWORKMEDIAPAGE_INSTALLATIONMETHOD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Installation URL ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_NETWORKMEDIAPAGE_INSTALLATIONURL {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_NETWORKMEDIAPAGE_INSTALLATIONURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Source ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_NETWORKMEDIAPAGE_NAME {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_NETWORKMEDIAPAGE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PXE ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_NETWORKMEDIAPAGE_PXE {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_NETWORKMEDIAPAGE_PXE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Locate the operating system installation media ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_NETWORKMEDIAPAGE_TITLE {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_NETWORKMEDIAPAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disk &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_STORAGEPAGE_DISK {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_STORAGEPAGE_DISK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Created by template provisioner ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_STORAGEPAGE_DISK_DESCRIPTION {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_STORAGEPAGE_DISK_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Storage ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_STORAGEPAGE_NAME {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_STORAGEPAGE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;no suitable storage&gt; ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_STORAGEPAGE_NOSTORAGE {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_STORAGEPAGE_NOSTORAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The SR &apos;{0}&apos; is over committed. There is only {1} of free space and the new VM requires {2}. ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_STORAGEPAGE_SROVERCOMMIT {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_STORAGEPAGE_SROVERCOMMIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure storage for the new VM ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_STORAGEPAGE_TITLE {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_STORAGEPAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} {1} ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_STORAGEPAGE_VDINAME {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_STORAGEPAGE_VDINAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die CentOS ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_TEMPLATEPAGE_CENTOS {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_TEMPLATEPAGE_CENTOS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [Citrix] ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_TEMPLATEPAGE_CITRIX {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_TEMPLATEPAGE_CITRIX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die CoreOS ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_TEMPLATEPAGE_COREOS {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_TEMPLATEPAGE_COREOS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Custom ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_TEMPLATEPAGE_CUSTOM {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_TEMPLATEPAGE_CUSTOM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Debian ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_TEMPLATEPAGE_DEBIAN {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_TEMPLATEPAGE_DEBIAN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Linx ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_TEMPLATEPAGE_LINX {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_TEMPLATEPAGE_LINX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Misc ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_TEMPLATEPAGE_MISC {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_TEMPLATEPAGE_MISC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Template ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_TEMPLATEPAGE_NAME {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_TEMPLATEPAGE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;no template selected&gt; ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_TEMPLATEPAGE_NOTEMPLATE {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_TEMPLATEPAGE_NOTEMPLATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Oracle ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_TEMPLATEPAGE_ORACLE {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_TEMPLATEPAGE_ORACLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Red Hat ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_TEMPLATEPAGE_REDHAT {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_TEMPLATEPAGE_REDHAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scientific Linux ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_TEMPLATEPAGE_SCILINUX {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_TEMPLATEPAGE_SCILINUX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Snapshots ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_TEMPLATEPAGE_SNAPSHOTS {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_TEMPLATEPAGE_SNAPSHOTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SUSE ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_TEMPLATEPAGE_SUSE {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_TEMPLATEPAGE_SUSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Template ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_TEMPLATEPAGE_TEMPLATE {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_TEMPLATEPAGE_TEMPLATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Template name ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_TEMPLATEPAGE_TEMPLATENAME {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_TEMPLATEPAGE_TEMPLATENAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select a VM template ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_TEMPLATEPAGE_TITLE {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_TEMPLATEPAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Windows ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_TEMPLATEPAGE_WINDOWS {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_TEMPLATEPAGE_WINDOWS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Assign a virtual GPU ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_VGPUPAGE_TITLE {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_VGPUPAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This pool is only licensed for XenApp/XenDesktop workloads ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_XENAPP_XENDESKTOP_INFO_MESSAGE_POOL {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_XENAPP_XENDESKTOP_INFO_MESSAGE_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This server is only licensed for XenApp/XenDesktop workloads ähnelt.
        /// </summary>
        public static string NEWVMWIZARD_XENAPP_XENDESKTOP_INFO_MESSAGE_SERVER {
            get {
                return ResourceManager.GetString("NEWVMWIZARD_XENAPP_XENDESKTOP_INFO_MESSAGE_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New Virtual Network Interface - {0} ähnelt.
        /// </summary>
        public static string NEWVNET_TITLE {
            get {
                return ResourceManager.GetString("NEWVNET_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This NFS ISO storage is already attached to &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string NFS_ISO_ALREADY_ATTACHED {
            get {
                return ResourceManager.GetString("NFS_ISO_ALREADY_ATTACHED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example: server:/path ähnelt.
        /// </summary>
        public static string NFS_ISO_PATH_EXAMPLE {
            get {
                return ResourceManager.GetString("NFS_ISO_PATH_EXAMPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NIC ähnelt.
        /// </summary>
        public static string NIC {
            get {
                return ResourceManager.GetString("NIC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} (Hidden) ähnelt.
        /// </summary>
        public static string NIC_HIDDEN {
            get {
                return ResourceManager.GetString("NIC_HIDDEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} (Slave) ähnelt.
        /// </summary>
        public static string NIC_SLAVE {
            get {
                return ResourceManager.GetString("NIC_SLAVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network Interface Cards ähnelt.
        /// </summary>
        public static string NIC_TAB_TITLE {
            get {
                return ResourceManager.GetString("NIC_TAB_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}, VLAN {1} ähnelt.
        /// </summary>
        public static string NIC_VLAN {
            get {
                return ResourceManager.GetString("NIC_VLAN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} Mbit/s ähnelt.
        /// </summary>
        public static string NICPANEL_BIT_RATE {
            get {
                return ResourceManager.GetString("NICPANEL_BIT_RATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Full ähnelt.
        /// </summary>
        public static string NICPANEL_FULL_DUPLEX {
            get {
                return ResourceManager.GetString("NICPANEL_FULL_DUPLEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Half ähnelt.
        /// </summary>
        public static string NICPANEL_HALF_DUPLEX {
            get {
                return ResourceManager.GetString("NICPANEL_HALF_DUPLEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No ähnelt.
        /// </summary>
        public static string NO {
            get {
                return ResourceManager.GetString("NO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;No ähnelt.
        /// </summary>
        public static string NO_BUTTON_CAPTION {
            get {
                return ResourceManager.GetString("NO_BUTTON_CAPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This VM does not have any disks. ähnelt.
        /// </summary>
        public static string NO_DISKS {
            get {
                return ResourceManager.GetString("NO_DISKS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There is no server eligible to become the master of your new pool ähnelt.
        /// </summary>
        public static string NO_ELIGIBLE_MASTER {
            get {
                return ResourceManager.GetString("NO_ELIGIBLE_MASTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die GPU configuration and monitoring is disabled, because there are no GPUs available in this pool. ähnelt.
        /// </summary>
        public static string NO_GPU_IN_POOL {
            get {
                return ResourceManager.GetString("NO_GPU_IN_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die GPU configuration and monitoring is disabled, because there are no GPUs available on this host. ähnelt.
        /// </summary>
        public static string NO_GPU_ON_HOST {
            get {
                return ResourceManager.GetString("NO_GPU_ON_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There are no halted or suspended VMs to export ähnelt.
        /// </summary>
        public static string NO_HALTED_VMS {
            get {
                return ResourceManager.GetString("NO_HALTED_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Home Server is not set ähnelt.
        /// </summary>
        public static string NO_HOME_SERVER {
            get {
                return ResourceManager.GetString("NO_HOME_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There are no system alerts available to dismiss. ähnelt.
        /// </summary>
        public static string NO_MESSAGES_TO_DISMISS {
            get {
                return ResourceManager.GetString("NO_MESSAGES_TO_DISMISS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer] cannot create any more disks for this VM ähnelt.
        /// </summary>
        public static string NO_MORE_USERDEVICES {
            get {
                return ResourceManager.GetString("NO_MORE_USERDEVICES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (No Name) ähnelt.
        /// </summary>
        public static string NO_NAME {
            get {
                return ResourceManager.GetString("NO_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No screenshot ähnelt.
        /// </summary>
        public static string NO_SCREENSHOT {
            get {
                return ResourceManager.GetString("NO_SCREENSHOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There are no servers that need activating at this time. ähnelt.
        /// </summary>
        public static string NO_SERVERS_NEED_ACTIVATING {
            get {
                return ResourceManager.GetString("NO_SERVERS_NEED_ACTIVATING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No [XenServer] session information is available, cannot continue. ähnelt.
        /// </summary>
        public static string NO_SESSION_INFO {
            get {
                return ResourceManager.GetString("NO_SESSION_INFO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This VM does not have any snapshots. ähnelt.
        /// </summary>
        public static string NO_SNAPSHOTS {
            get {
                return ResourceManager.GetString("NO_SNAPSHOTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (There are currently no added timeline intervals) ähnelt.
        /// </summary>
        public static string NO_TIMELINE_INTERVALS_TEXT {
            get {
                return ResourceManager.GetString("NO_TIMELINE_INTERVALS_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There are no SR locations that can support this disk ähnelt.
        /// </summary>
        public static string NO_VALID_DISK_LOCATION {
            get {
                return ResourceManager.GetString("NO_VALID_DISK_LOCATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die - ähnelt.
        /// </summary>
        public static string NO_VALUE {
            get {
                return ResourceManager.GetString("NO_VALUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;None&gt; ähnelt.
        /// </summary>
        public static string NONE {
            get {
                return ResourceManager.GetString("NONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die None defined ähnelt.
        /// </summary>
        public static string NONE_DEFINED {
            get {
                return ResourceManager.GetString("NONE_DEFINED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die None of the following: ähnelt.
        /// </summary>
        public static string NONE_OF {
            get {
                return ResourceManager.GetString("NONE_OF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (None) ähnelt.
        /// </summary>
        public static string NONE_PARENS {
            get {
                return ResourceManager.GetString("NONE_PARENS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The VM is not using a shared network. Restart cannot be guaranteed. ähnelt.
        /// </summary>
        public static string NOT_AGILE_NETWORK_NOT_SHARED {
            get {
                return ResourceManager.GetString("NOT_AGILE_NETWORK_NOT_SHARED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The VM is using a non-shared SR. Restart cannot be guaranteed. ähnelt.
        /// </summary>
        public static string NOT_AGILE_SR_NOT_SHARED {
            get {
                return ResourceManager.GetString("NOT_AGILE_SR_NOT_SHARED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The VM is not agile. Restart cannot be guaranteed. ähnelt.
        /// </summary>
        public static string NOT_AGILE_UNKOWN {
            get {
                return ResourceManager.GetString("NOT_AGILE_UNKOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The VM has one or more virtual GPUs. Restart cannot be guaranteed. ähnelt.
        /// </summary>
        public static string NOT_AGILE_VM_HAS_VGPU {
            get {
                return ResourceManager.GetString("NOT_AGILE_VM_HAS_VGPU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The VM has one or more USB devices attached. Restart cannot be guaranteed. ähnelt.
        /// </summary>
        public static string NOT_AGILE_VM_HAS_VUSB {
            get {
                return ResourceManager.GetString("NOT_AGILE_VM_HAS_VUSB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not applied ähnelt.
        /// </summary>
        public static string NOT_APPLIED {
            get {
                return ResourceManager.GetString("NOT_APPLIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die not attached to ähnelt.
        /// </summary>
        public static string NOT_ATTACHED_TO {
            get {
                return ResourceManager.GetString("NOT_ATTACHED_TO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die not contained in ähnelt.
        /// </summary>
        public static string NOT_CONTAINED_IN {
            get {
                return ResourceManager.GetString("NOT_CONTAINED_IN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die does not contain ähnelt.
        /// </summary>
        public static string NOT_CONTAINS {
            get {
                return ResourceManager.GetString("NOT_CONTAINS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This host does not have enough disk space to install this update ähnelt.
        /// </summary>
        public static string NOT_ENOUGH_SPACE_DESCRIPTION {
            get {
                return ResourceManager.GetString("NOT_ENOUGH_SPACE_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There is not enough space to update &apos;{0}&apos; with automated updates. ähnelt.
        /// </summary>
        public static string NOT_ENOUGH_SPACE_MESSAGE_AUTO_UPDATE {
            get {
                return ResourceManager.GetString("NOT_ENOUGH_SPACE_MESSAGE_AUTO_UPDATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Space available: {0} ähnelt.
        /// </summary>
        public static string NOT_ENOUGH_SPACE_MESSAGE_AVAILABLE_SPACE {
            get {
                return ResourceManager.GetString("NOT_ENOUGH_SPACE_MESSAGE_AVAILABLE_SPACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenCenter] can free up {0} by removing residual update files. Do you want to proceed with the cleanup? ähnelt.
        /// </summary>
        public static string NOT_ENOUGH_SPACE_MESSAGE_CLEANUP {
            get {
                return ResourceManager.GetString("NOT_ENOUGH_SPACE_MESSAGE_CLEANUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There is not enough space on &apos;{0}&apos; to install update &apos;{1}&apos;. ähnelt.
        /// </summary>
        public static string NOT_ENOUGH_SPACE_MESSAGE_INSTALL {
            get {
                return ResourceManager.GetString("NOT_ENOUGH_SPACE_MESSAGE_INSTALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Free up some space and try again. ähnelt.
        /// </summary>
        public static string NOT_ENOUGH_SPACE_MESSAGE_NOCLEANUP {
            get {
                return ResourceManager.GetString("NOT_ENOUGH_SPACE_MESSAGE_NOCLEANUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Space required: {0} ähnelt.
        /// </summary>
        public static string NOT_ENOUGH_SPACE_MESSAGE_REQUIRED_SPACE {
            get {
                return ResourceManager.GetString("NOT_ENOUGH_SPACE_MESSAGE_REQUIRED_SPACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There is not enough space on &apos;{0}&apos; to upload update &apos;{1}&apos;. ähnelt.
        /// </summary>
        public static string NOT_ENOUGH_SPACE_MESSAGE_UPLOAD {
            get {
                return ResourceManager.GetString("NOT_ENOUGH_SPACE_MESSAGE_UPLOAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not in any folder ähnelt.
        /// </summary>
        public static string NOT_IN_A_FOLDER {
            get {
                return ResourceManager.GetString("NOT_IN_A_FOLDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VMs on local disk will prevent disk repartitioning.
        ///
        ///A new disk partitioning scheme is available in [XenServer] [BRANDING_VERSION_7_0] and above that includes larger dom0 and backup partitions, and dedicated partitions for logging, swap and UEFI.
        ///
        ///However, there are VMs on local storage, so the current partitioning scheme will be retained. To benefit from repartitioning on upgrade to [XenServer] [BRANDING_VERSION_7_0] or above, VMs must be moved from local storage first. ähnelt.
        /// </summary>
        public static string NOT_SAFE_TO_UPGRADE_DEFAULT_WARNING_LONG {
            get {
                return ResourceManager.GetString("NOT_SAFE_TO_UPGRADE_DEFAULT_WARNING_LONG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: VMs on local disk will prevent disk repartitioning. ähnelt.
        /// </summary>
        public static string NOT_SAFE_TO_UPGRADE_DEFAULT_WARNING_SHORT {
            get {
                return ResourceManager.GetString("NOT_SAFE_TO_UPGRADE_DEFAULT_WARNING_SHORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The disk size of the local storage prevents repartitioning.
        ///
        ///A new disk partitioning scheme is available in [XenServer] [BRANDING_VERSION_7_0] and above that includes larger dom0 and backup partitions, and dedicated partitions for logging, swap and UEFI.
        ///
        ///However, there is not enough space to perform the repartitioning, so the current partitioning scheme will be retained. ähnelt.
        /// </summary>
        public static string NOT_SAFE_TO_UPGRADE_NOT_ENOUGH_SPACE_LONG {
            get {
                return ResourceManager.GetString("NOT_SAFE_TO_UPGRADE_NOT_ENOUGH_SPACE_LONG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: The disk size of the local storage prevents repartitioning. ähnelt.
        /// </summary>
        public static string NOT_SAFE_TO_UPGRADE_NOT_ENOUGH_SPACE_SHORT {
            get {
                return ResourceManager.GetString("NOT_SAFE_TO_UPGRADE_NOT_ENOUGH_SPACE_SHORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die not trusted ähnelt.
        /// </summary>
        public static string NOT_TRUSTED {
            get {
                return ResourceManager.GetString("NOT_TRUSTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Out of date ähnelt.
        /// </summary>
        public static string NOT_UPDATED {
            get {
                return ResourceManager.GetString("NOT_UPDATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not Upgraded ähnelt.
        /// </summary>
        public static string NOT_UPGRADED {
            get {
                return ResourceManager.GetString("NOT_UPGRADED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not uploaded ähnelt.
        /// </summary>
        public static string NOT_UPLOADED {
            get {
                return ResourceManager.GetString("NOT_UPLOADED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not yet run ähnelt.
        /// </summary>
        public static string NOT_YET_RUN {
            get {
                return ResourceManager.GetString("NOT_YET_RUN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server License ähnelt.
        /// </summary>
        public static string NOTICE_LICENCE_TITLE {
            get {
                return ResourceManager.GetString("NOTICE_LICENCE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Alerts ähnelt.
        /// </summary>
        public static string NOTIFICATIONS_SUBMODE_ALERTS_READ {
            get {
                return ResourceManager.GetString("NOTIFICATIONS_SUBMODE_ALERTS_READ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Alerts ({0}) ähnelt.
        /// </summary>
        public static string NOTIFICATIONS_SUBMODE_ALERTS_UNREAD {
            get {
                return ResourceManager.GetString("NOTIFICATIONS_SUBMODE_ALERTS_UNREAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Events ähnelt.
        /// </summary>
        public static string NOTIFICATIONS_SUBMODE_EVENTS_READ {
            get {
                return ResourceManager.GetString("NOTIFICATIONS_SUBMODE_EVENTS_READ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Events ({0} errors) ähnelt.
        /// </summary>
        public static string NOTIFICATIONS_SUBMODE_EVENTS_UNREAD_MANY {
            get {
                return ResourceManager.GetString("NOTIFICATIONS_SUBMODE_EVENTS_UNREAD_MANY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Events (1 error) ähnelt.
        /// </summary>
        public static string NOTIFICATIONS_SUBMODE_EVENTS_UNREAD_ONE {
            get {
                return ResourceManager.GetString("NOTIFICATIONS_SUBMODE_EVENTS_UNREAD_ONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Updates ähnelt.
        /// </summary>
        public static string NOTIFICATIONS_SUBMODE_UPDATES_READ {
            get {
                return ResourceManager.GetString("NOTIFICATIONS_SUBMODE_UPDATES_READ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Updates ({0}) ähnelt.
        /// </summary>
        public static string NOTIFICATIONS_SUBMODE_UPDATES_UNREAD {
            get {
                return ResourceManager.GetString("NOTIFICATIONS_SUBMODE_UPDATES_UNREAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Notifications ({0}) ähnelt.
        /// </summary>
        public static string NOTIFICATIONS_TOTAL {
            get {
                return ResourceManager.GetString("NOTIFICATIONS_TOTAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Notifications ähnelt.
        /// </summary>
        public static string NOTIFICATIONS_TOTAL_ZERO {
            get {
                return ResourceManager.GetString("NOTIFICATIONS_TOTAL_ZERO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Now ähnelt.
        /// </summary>
        public static string NOW {
            get {
                return ResourceManager.GetString("NOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of snapshots to keep ähnelt.
        /// </summary>
        public static string NUMBER_OF_SNAPSHOTS_TO_KEEP {
            get {
                return ResourceManager.GetString("NUMBER_OF_SNAPSHOTS_TO_KEEP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of Sockets ähnelt.
        /// </summary>
        public static string NUMBER_OF_SOCKETS {
            get {
                return ResourceManager.GetString("NUMBER_OF_SOCKETS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} snapshots ähnelt.
        /// </summary>
        public static string NUMBER_SNAPSHOTS {
            get {
                return ResourceManager.GetString("NUMBER_SNAPSHOTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} in &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string OBJECT_IN_POOL {
            get {
                return ResourceManager.GetString("OBJECT_IN_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} on &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string OBJECT_ON_SERVER {
            get {
                return ResourceManager.GetString("OBJECT_ON_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Objects with tag &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string OBJECTS_WITH_TAG {
            get {
                return ResourceManager.GetString("OBJECTS_WITH_TAG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die OK ähnelt.
        /// </summary>
        public static string OK {
            get {
                return ResourceManager.GetString("OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are already connected to &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string OLD_CONNECTION_ALREADY_CONNECTED {
            get {
                return ResourceManager.GetString("OLD_CONNECTION_ALREADY_CONNECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Older than current server ähnelt.
        /// </summary>
        public static string OLDER_THAN_CURRENT_SERVER {
            get {
                return ResourceManager.GetString("OLDER_THAN_CURRENT_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die on &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string ON_SERVER {
            get {
                return ResourceManager.GetString("ON_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 1 VM selected ähnelt.
        /// </summary>
        public static string ONE_VM_SELECTED {
            get {
                return ResourceManager.GetString("ONE_VM_SELECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only VMs using StorageLink Gateway NetApp, Dell EqualLogic or SMI-S adapters can be upgraded ähnelt.
        /// </summary>
        public static string ONLY_VMS_USING_STORAGELINK_SMIS {
            get {
                return ResourceManager.GetString("ONLY_VMS_USING_STORAGELINK_SMIS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Operating System ähnelt.
        /// </summary>
        public static string OPERATING_SYSTEM {
            get {
                return ResourceManager.GetString("OPERATING_SYSTEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Optimized ähnelt.
        /// </summary>
        public static string OPTIMIZED {
            get {
                return ResourceManager.GetString("OPTIMIZED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Out of date ähnelt.
        /// </summary>
        public static string OUT_OF_DATE {
            get {
                return ResourceManager.GetString("OUT_OF_DATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Overall progress: {0} of {1} servers done ähnelt.
        /// </summary>
        public static string OVERALL_PROGRESS {
            get {
                return ResourceManager.GetString("OVERALL_PROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ({0}% of total memory) ähnelt.
        /// </summary>
        public static string OVERCOMMIT {
            get {
                return ResourceManager.GetString("OVERCOMMIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Overcommit: ähnelt.
        /// </summary>
        public static string OVERCOMMIT_LABEL {
            get {
                return ResourceManager.GetString("OVERCOMMIT_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die CPU Usage ähnelt.
        /// </summary>
        public static string OVERVIEW_CPU_USAGE {
            get {
                return ResourceManager.GetString("OVERVIEW_CPU_USAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disks ähnelt.
        /// </summary>
        public static string OVERVIEW_DISKS {
            get {
                return ResourceManager.GetString("OVERVIEW_DISKS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Used Memory ähnelt.
        /// </summary>
        public static string OVERVIEW_MEMORY_USAGE {
            get {
                return ResourceManager.GetString("OVERVIEW_MEMORY_USAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name ähnelt.
        /// </summary>
        public static string OVERVIEW_NAME {
            get {
                return ResourceManager.GetString("OVERVIEW_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network ähnelt.
        /// </summary>
        public static string OVERVIEW_NETWORK {
            get {
                return ResourceManager.GetString("OVERVIEW_NETWORK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No results found ähnelt.
        /// </summary>
        public static string OVERVIEW_NO_RESULTS {
            get {
                return ResourceManager.GetString("OVERVIEW_NO_RESULTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (avg / max KBs) ähnelt.
        /// </summary>
        public static string OVERVIEW_UNITS {
            get {
                return ResourceManager.GetString("OVERVIEW_UNITS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Created by [XenCenter] Disk Image Import ähnelt.
        /// </summary>
        public static string OVF_CREATED {
            get {
                return ResourceManager.GetString("OVF_CREATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Virtual Disk ähnelt.
        /// </summary>
        public static string OVF_DISK_CAPTION {
            get {
                return ResourceManager.GetString("OVF_DISK_CAPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Virtual Network ähnelt.
        /// </summary>
        public static string OVF_NET_DESCRIPTION {
            get {
                return ResourceManager.GetString("OVF_NET_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parent folder ähnelt.
        /// </summary>
        public static string PARENT_FOLDER {
            get {
                return ResourceManager.GetString("PARENT_FOLDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Applied on some servers ähnelt.
        /// </summary>
        public static string PARTIALLY_APPLIED {
            get {
                return ResourceManager.GetString("PARTIALLY_APPLIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Partially connected ähnelt.
        /// </summary>
        public static string PARTIALLY_CONNECTED {
            get {
                return ResourceManager.GetString("PARTIALLY_CONNECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Partially Licensed ähnelt.
        /// </summary>
        public static string PARTIALLY_LICENSED {
            get {
                return ResourceManager.GetString("PARTIALLY_LICENSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fair ähnelt.
        /// </summary>
        public static string PASSPHRASE_STRENGTH_FAIR {
            get {
                return ResourceManager.GetString("PASSPHRASE_STRENGTH_FAIR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Good ähnelt.
        /// </summary>
        public static string PASSPHRASE_STRENGTH_GOOD {
            get {
                return ResourceManager.GetString("PASSPHRASE_STRENGTH_GOOD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Low ähnelt.
        /// </summary>
        public static string PASSPHRASE_STRENGTH_LOW {
            get {
                return ResourceManager.GetString("PASSPHRASE_STRENGTH_LOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Password strength: {0} ähnelt.
        /// </summary>
        public static string PASSPHRASE_STRENGTH_PROMPT {
            get {
                return ResourceManager.GetString("PASSPHRASE_STRENGTH_PROMPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Strong ähnelt.
        /// </summary>
        public static string PASSPHRASE_STRENGTH_STRONG {
            get {
                return ResourceManager.GetString("PASSPHRASE_STRENGTH_STRONG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown ähnelt.
        /// </summary>
        public static string PASSPHRASE_STRENGTH_UNKNOWN {
            get {
                return ResourceManager.GetString("PASSPHRASE_STRENGTH_UNKNOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The password you typed was incorrect ähnelt.
        /// </summary>
        public static string PASSWORD_INCORRECT {
            get {
                return ResourceManager.GetString("PASSWORD_INCORRECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Passwords do not match ähnelt.
        /// </summary>
        public static string PASSWORDS_DONT_MATCH {
            get {
                return ResourceManager.GetString("PASSWORDS_DONT_MATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Passwords cannot be empty ähnelt.
        /// </summary>
        public static string PASSWORDS_EMPTY {
            get {
                return ResourceManager.GetString("PASSWORDS_EMPTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You have set a master password, so &quot;Give Passwords Always&quot; is not available. ähnelt.
        /// </summary>
        public static string PASSWORDS_REQUEST_ALWAYS_DISABLED_TOOLTIP_BODY {
            get {
                return ResourceManager.GetString("PASSWORDS_REQUEST_ALWAYS_DISABLED_TOOLTIP_BODY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Paste ähnelt.
        /// </summary>
        public static string PASTE {
            get {
                return ResourceManager.GetString("PASTE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Update &apos;{0}&apos; Applied to Server &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string PATCH_APPLIED {
            get {
                return ResourceManager.GetString("PATCH_APPLIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} 
        ///Installation size: {1} ähnelt.
        /// </summary>
        public static string PATCH_DESCRIPTION_AND_INSTALLATION_SIZE {
            get {
                return ResourceManager.GetString("PATCH_DESCRIPTION_AND_INSTALLATION_SIZE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed to download {0} from &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string PATCH_DOWNLOAD_FAILED {
            get {
                return ResourceManager.GetString("PATCH_DOWNLOAD_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed to download the update {0} from &apos;{1}&apos;.
        ///
        ///The update is installed on &apos;{1}&apos;, but the update installation file may have since been deleted.
        ///
        ///Upload the update from an .{2} file instead. ähnelt.
        /// </summary>
        public static string PATCH_DOWNLOAD_FAILED_MORE_INFO {
            get {
                return ResourceManager.GetString("PATCH_DOWNLOAD_FAILED_MORE_INFO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed to download the update {0} from &apos;{1}&apos;.
        ///
        ///The update has previously been uploaded to &apos;{1}&apos;, but the update installation file may have since been deleted.
        ///
        ///Upload the update from an .{2} file instead. ähnelt.
        /// </summary>
        public static string PATCH_DOWNLOAD_FAILED_MORE_INFO_NOT_APPLIED {
            get {
                return ResourceManager.GetString("PATCH_DOWNLOAD_FAILED_MORE_INFO_NOT_APPLIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} 
        ///Date modified: {1}
        ///Date created: {2}
        ///Size: {3} ähnelt.
        /// </summary>
        public static string PATCH_EXPANDED_DESCRIPTION {
            get {
                return ResourceManager.GetString("PATCH_EXPANDED_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: This patch is for servers with version matching the regular expression &apos;{1}&apos;. ähnelt.
        /// </summary>
        public static string PATCH_FOR_XENSERVER_VERSION {
            get {
                return ResourceManager.GetString("PATCH_FOR_XENSERVER_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Installation size: {0} ähnelt.
        /// </summary>
        public static string PATCH_INSTALLATION_SIZE {
            get {
                return ResourceManager.GetString("PATCH_INSTALLATION_SIZE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This version requires [XenCenter] {0} or newer ähnelt.
        /// </summary>
        public static string PATCH_NEEDS_NEW_XENCENTER {
            get {
                return ResourceManager.GetString("PATCH_NEEDS_NEW_XENCENTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not found ähnelt.
        /// </summary>
        public static string PATCH_NOT_FOUND {
            get {
                return ResourceManager.GetString("PATCH_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}
        ///File not found ähnelt.
        /// </summary>
        public static string PATCH_NOT_FOUND_EXPANDED_DESCRIPTION {
            get {
                return ResourceManager.GetString("PATCH_NOT_FOUND_EXPANDED_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Update uploaded to server &apos;{0}&apos;  ähnelt.
        /// </summary>
        public static string PATCH_UPLOADED {
            get {
                return ResourceManager.GetString("PATCH_UPLOADED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Eject any virtual CDs from your VMs ähnelt.
        /// </summary>
        public static string PATCHING_EJECT_CDS {
            get {
                return ResourceManager.GetString("PATCHING_EJECT_CDS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disable HA until after all the hosts have been rebooted ähnelt.
        /// </summary>
        public static string PATCHING_WARNING_HA {
            get {
                return ResourceManager.GetString("PATCHING_WARNING_HA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} ok. ähnelt.
        /// </summary>
        public static string PATCHING_WIZARD_CHECK_OK {
            get {
                return ResourceManager.GetString("PATCHING_WIZARD_CHECK_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The patch {0} is going to be deleted. Do you want to continue? ähnelt.
        /// </summary>
        public static string PATCHING_WIZARD_CONFIRMATION_DELETE {
            get {
                return ResourceManager.GetString("PATCHING_WIZARD_CONFIRMATION_DELETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0,4}{1} ähnelt.
        /// </summary>
        public static string PATCHING_WIZARD_DESC_CELL_INDENT {
            get {
                return ResourceManager.GetString("PATCHING_WIZARD_DESC_CELL_INDENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} error. ähnelt.
        /// </summary>
        public static string PATCHING_WIZARD_ERROR {
            get {
                return ResourceManager.GetString("PATCHING_WIZARD_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: {1} ok. ähnelt.
        /// </summary>
        public static string PATCHING_WIZARD_HOST_CHECK_OK {
            get {
                return ResourceManager.GetString("PATCHING_WIZARD_HOST_CHECK_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} ... ähnelt.
        /// </summary>
        public static string PATCHING_WIZARD_PRECHECK_STATUS {
            get {
                return ResourceManager.GetString("PATCHING_WIZARD_PRECHECK_STATUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Running prechecks... ähnelt.
        /// </summary>
        public static string PATCHING_WIZARD_RUNNING_PRECHECKS {
            get {
                return ResourceManager.GetString("PATCHING_WIZARD_RUNNING_PRECHECKS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unable to resolve this issue:\n{0}\n\nPlease resolve this issue manually and then click Check Again.
        /// ähnelt.
        /// </summary>
        public static string PATCHING_WIZARD_SOLVE_MANUALLY {
            get {
                return ResourceManager.GetString("PATCHING_WIZARD_SOLVE_MANUALLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Solving problems ähnelt.
        /// </summary>
        public static string PATCHING_WIZARD_SOLVING_PROBLEMS {
            get {
                return ResourceManager.GetString("PATCHING_WIZARD_SOLVING_PROBLEMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Go to web page ähnelt.
        /// </summary>
        public static string PATCHING_WIZARD_WEBPAGE_CELL {
            get {
                return ResourceManager.GetString("PATCHING_WIZARD_WEBPAGE_CELL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The automated updates process was not completed successfully. ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_AUTOUPDATINGPAGE_ERROR {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_AUTOUPDATINGPAGE_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The following error occurred while automated updates were in progress: ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_AUTOUPDATINGPAGE_ERROR_OCCURRED {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_AUTOUPDATINGPAGE_ERROR_OCCURRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The following errors occurred while automated updates were in progress: ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_AUTOUPDATINGPAGE_ERRORS_OCCURRED {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_AUTOUPDATINGPAGE_ERRORS_OCCURRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The update was not completed successfully ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_AUTOUPDATINGPAGE_FAILED {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_AUTOUPDATINGPAGE_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}... ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_AUTOUPDATINGPAGE_IN_PROGRESS_DOTDOTDOT {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_AUTOUPDATINGPAGE_IN_PROGRESS_DOTDOTDOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upload and Install ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_AUTOUPDATINGPAGE_TEXT {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_AUTOUPDATINGPAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Uploading and installing updates ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_AUTOUPDATINGPAGE_TITLE {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_AUTOUPDATINGPAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Clean up... ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_CLEANUP {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_CLEANUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Downloading update {0}... ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_DOWNLOADUPDATE_ACTION_TITLE_DOWNLOADING {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_DOWNLOADUPDATE_ACTION_TITLE_DOWNLOADING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Skipping download: Already downloaded update {0}... ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_DOWNLOADUPDATE_ACTION_TITLE_SKIPPING {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_DOWNLOADUPDATE_ACTION_TITLE_SKIPPING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Waiting to download update {0}... ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_DOWNLOADUPDATE_ACTION_TITLE_WAITING {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_DOWNLOADUPDATE_ACTION_TITLE_WAITING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No action required ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_MODEPAGE_NOACTION {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_MODEPAGE_NOACTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restart these servers in this order (master always first): ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_MODEPAGE_RESTARTSERVERS {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_MODEPAGE_RESTARTSERVERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restart these VMs: ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_MODEPAGE_RESTARTVMS {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_MODEPAGE_RESTARTVMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restart XAPI agent in this order (master always first): ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_MODEPAGE_RESTARTXAPI {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_MODEPAGE_RESTARTXAPI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Update Mode ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_MODEPAGE_TEXT {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_MODEPAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the update mode ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_MODEPAGE_TITLE {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_MODEPAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_MODEPAGE_UNKNOWNACTION {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_MODEPAGE_UNKNOWNACTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die More info... ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_MORE_INFO {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_MORE_INFO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resolve pool problems ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_PATCHINGPAGE_POOL_RESOLVE {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_PATCHINGPAGE_POOL_RESOLVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool problems resolved ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_PATCHINGPAGE_POOL_RESOLVED {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_PATCHINGPAGE_POOL_RESOLVED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resolving pool problems... ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_PATCHINGPAGE_POOL_RESOLVING {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_PATCHINGPAGE_POOL_RESOLVING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Revert pool problems ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_PATCHINGPAGE_POOL_REVERT {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_PATCHINGPAGE_POOL_REVERT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool problems reverted ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_PATCHINGPAGE_POOL_REVERTED {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_PATCHINGPAGE_POOL_REVERTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reverting pool problems... ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_PATCHINGPAGE_POOL_REVERTING {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_PATCHINGPAGE_POOL_REVERTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Revert resolved prechecks ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_PATCHINGPAGE_PRECHECK_REVERT {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_PATCHINGPAGE_PRECHECK_REVERT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resolved prechecks reverted ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_PATCHINGPAGE_PRECHECK_REVERTED {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_PATCHINGPAGE_PRECHECK_REVERTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reverting resolved prechecks... ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_PATCHINGPAGE_PRECHECK_REVERTING {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_PATCHINGPAGE_PRECHECK_REVERTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resolve server problems ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_PATCHINGPAGE_SERVER_RESOLVE {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_PATCHINGPAGE_SERVER_RESOLVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server problems resolved ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_PATCHINGPAGE_SERVER_RESOLVED {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_PATCHINGPAGE_SERVER_RESOLVED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resolving server problems... ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_PATCHINGPAGE_SERVER_RESOLVING {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_PATCHINGPAGE_SERVER_RESOLVING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Revert server problems ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_PATCHINGPAGE_SERVER_REVERT {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_PATCHINGPAGE_SERVER_REVERT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server problems reverted ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_PATCHINGPAGE_SERVER_REVERTED {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_PATCHINGPAGE_SERVER_REVERTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reverting server problems... ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_PATCHINGPAGE_SERVER_REVERTING {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_PATCHINGPAGE_SERVER_REVERTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Install Update ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_PATCHINGPAGE_TEXT {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_PATCHINGPAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Install the update ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_PATCHINGPAGE_TITLE {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_PATCHINGPAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking disk space requirements ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_PRECHECKPAGE_CHECKING_DISK_SPACE {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_PRECHECKPAGE_CHECKING_DISK_SPACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Prechecks failed. ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_PRECHECKPAGE_FAILED {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_PRECHECKPAGE_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Update prechecks are performed to verify that the update &quot;{0}&quot; can be applied to the servers. ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_PRECHECKPAGE_FIRSTLINE {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_PRECHECKPAGE_FIRSTLINE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Prechecks are performed to verify that automated updates can proceed. ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_PRECHECKPAGE_FIRSTLINE_AUTOMATED_UPDATES_MODE {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_PRECHECKPAGE_FIRSTLINE_AUTOMATED_UPDATES_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Update prechecks are performed to verify that the selected update can be applied to the servers. ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_PRECHECKPAGE_FIRSTLINE_NO_PATCH_NAME {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_PRECHECKPAGE_FIRSTLINE_NO_PATCH_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resolve ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_PRECHECKPAGE_RESOLVE {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_PRECHECKPAGE_RESOLVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resolving issues... ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_PRECHECKPAGE_RESOLVING_ALL {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_PRECHECKPAGE_RESOLVING_ALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Prechecks ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_PRECHECKPAGE_TEXT {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_PRECHECKPAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Perform update prechecks on selected servers ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_PRECHECKPAGE_TITLE {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_PRECHECKPAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete update installation files ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_REMOVE_UPDATES {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_REMOVE_UPDATES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleted update installation files ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_REMOVED_UPDATES {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_REMOVED_UPDATES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleting update installation files ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_REMOVING_UPDATES {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_REMOVING_UPDATES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose Update File ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_SELECTPATCHPAGE_CHOOSE {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_SELECTPATCHPAGE_CHOOSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select Update ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_SELECTPATCHPAGE_TEXT {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_SELECTPATCHPAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose an existing update to install or upload a new one ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_SELECTPATCHPAGE_TITLE {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_SELECTPATCHPAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer] Updates and Supplemental Packs (*.{0}, *.iso,*.zip)|*.{0};*.iso;*.zip ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_SELECTPATCHPAGE_UPDATESEXT {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_SELECTPATCHPAGE_UPDATESEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Also apply all released updates on the new version ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_SELECTSERVERPAGE_APPLY_UPDATES {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_SELECTSERVERPAGE_APPLY_UPDATES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Also apply all released updates on the new version (only on pools licensed for automated updates) ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_SELECTSERVERPAGE_APPLY_UPDATES_MIXED {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_SELECTSERVERPAGE_APPLY_UPDATES_MIXED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Automated updates are not supported on this [XenServer] version ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_SELECTSERVERPAGE_AUTOMATED_UPDATES_NOT_SUPPORTED_HOST_VERSION {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_SELECTSERVERPAGE_AUTOMATED_UPDATES_NOT_SUPPORTED_HOST_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Automated updates are not supported on partially upgraded [XenServer] pools ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_SELECTSERVERPAGE_AUTOMATED_UPDATES_NOT_SUPPORTED_PARTIALLY_UPGRADED {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_SELECTSERVERPAGE_AUTOMATED_UPDATES_NOT_SUPPORTED_PARTIALLY_UPGRADE" +
                        "D", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot install supplemental packs on this [XenServer] version ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_SELECTSERVERPAGE_CANNOT_INSTALL_SUPP_PACKS {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_SELECTSERVERPAGE_CANNOT_INSTALL_SUPP_PACKS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Subscription Advantage required ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_SELECTSERVERPAGE_HOST_UNLICENSED {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_SELECTSERVERPAGE_HOST_UNLICENSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The server is not licensed for automated updates ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_SELECTSERVERPAGE_HOST_UNLICENSED_FOR_AUTOMATED_UPDATES {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_SELECTSERVERPAGE_HOST_UNLICENSED_FOR_AUTOMATED_UPDATES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The server is unreachable ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_SELECTSERVERPAGE_HOST_UNREACHABLE {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_SELECTSERVERPAGE_HOST_UNREACHABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The same update cannot be applied to {0} and {1} versions of [XenServer] ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_SELECTSERVERPAGE_MIXED_VERSIONS {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_SELECTSERVERPAGE_MIXED_VERSIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Update already applied ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_SELECTSERVERPAGE_PATCH_ALREADY_APPLIED {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_SELECTSERVERPAGE_PATCH_ALREADY_APPLIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Update not applicable ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_SELECTSERVERPAGE_PATCH_NOT_APPLICABLE {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_SELECTSERVERPAGE_PATCH_NOT_APPLICABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select one or more pools or standalone servers that you want to have updated.
        ///Servers that cannot be updated with automated updates appear disabled in this list. ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_SELECTSERVERPAGE_RUBRIC_AUTOMATED_MODE {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_SELECTSERVERPAGE_RUBRIC_AUTOMATED_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select one or more servers where you want to apply the selected update.
        ///Servers where this update cannot be applied appear disabled in this list. ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_SELECTSERVERPAGE_RUBRIC_DEFAULT {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_SELECTSERVERPAGE_RUBRIC_DEFAULT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select one or more pools or standalone servers that you want to update to the new version.
        ///Servers where this update cannot be applied appear disabled in this list. ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_SELECTSERVERPAGE_RUBRIC_NEW_VERSION_MODE {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_SELECTSERVERPAGE_RUBRIC_NEW_VERSION_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select one or more pools or standalone servers where you want to apply the selected update.
        ///Servers where this update cannot be applied appear disabled in this list. ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_SELECTSERVERPAGE_RUBRIC_POOL_SELECTION {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_SELECTSERVERPAGE_RUBRIC_POOL_SELECTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This server cannot be updated with automated updates ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_SELECTSERVERPAGE_SERVER_NOT_AUTO_UPGRADABLE {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_SELECTSERVERPAGE_SERVER_NOT_AUTO_UPGRADABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This server is already up-to-date ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_SELECTSERVERPAGE_SERVER_UP_TO_DATE {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_SELECTSERVERPAGE_SERVER_UP_TO_DATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select Servers ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_SELECTSERVERPAGE_TEXT {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_SELECTSERVERPAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the servers you want to update ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_SELECTSERVERPAGE_TITLE {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_SELECTSERVERPAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The new version has been installed. ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_UPDATES_DONE_AUTOMATED_NEW_VERSION_MODE {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_UPDATES_DONE_AUTOMATED_NEW_VERSION_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Automated updates have finished. ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_UPDATES_DONE_AUTOMATED_UPDATES_MODE {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_UPDATES_DONE_AUTOMATED_UPDATES_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Installing updates: ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_UPLOAD_AND_INSTALL_TITLE_AUTOMATED_MODE {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_UPLOAD_AND_INSTALL_TITLE_AUTOMATED_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Installing new version: ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_UPLOAD_AND_INSTALL_TITLE_NEW_VERSION_AUTOMATED_MODE {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_UPLOAD_AND_INSTALL_TITLE_NEW_VERSION_AUTOMATED_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenCenter] is now downloading your update and uploading it to the servers specified in the previous step.
        ///Please wait for these operations to complete, then click Next to continue with the installation. ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_UPLOADPAGE_MESSAGE_DOWNLOAD_AND_UPLOAD {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_UPLOADPAGE_MESSAGE_DOWNLOAD_AND_UPLOAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenCenter] is now uploading your update to the servers specified in the previous step.
        ///Please wait for this operation to complete, then click Next to continue with the installation. ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_UPLOADPAGE_MESSAGE_ONLY_UPLOAD {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_UPLOADPAGE_MESSAGE_ONLY_UPLOAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upload ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_UPLOADPAGE_TEXT {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_UPLOADPAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Downloading and uploading the selected file to your servers ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_UPLOADPAGE_TITLE_DOWNLOAD_AND_UPLOAD {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_UPLOADPAGE_TITLE_DOWNLOAD_AND_UPLOAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Uploading the selected file to your servers ähnelt.
        /// </summary>
        public static string PATCHINGWIZARD_UPLOADPAGE_TITLE_ONLY_UPLOAD {
            get {
                return ResourceManager.GetString("PATCHINGWIZARD_UPLOADPAGE_TITLE_ONLY_UPLOAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die XVA (*.xva)|*.xva|XVA Version 1 (ova.xml)|ova.xml ähnelt.
        /// </summary>
        public static string PATHPICKER_FILETYPE {
            get {
                return ResourceManager.GetString("PATHPICKER_FILETYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Storage connection check ähnelt.
        /// </summary>
        public static string PBDS_CHECK_DESCRIPTION {
            get {
                return ResourceManager.GetString("PBDS_CHECK_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Title ähnelt.
        /// </summary>
        public static string PDSECTION_TITLE {
            get {
                return ResourceManager.GetString("PDSECTION_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pending restart check ähnelt.
        /// </summary>
        public static string PENDING_RESTART_CHECK {
            get {
                return ResourceManager.GetString("PENDING_RESTART_CHECK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Interval must be a multiple of 5 ähnelt.
        /// </summary>
        public static string PERFORM_ALERT_EDIT_INTERVAL_WRONG_MULTIPLE {
            get {
                return ResourceManager.GetString("PERFORM_ALERT_EDIT_INTERVAL_WRONG_MULTIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Perform the rolling pool upgrade (Manual Mode) ähnelt.
        /// </summary>
        public static string PERFORM_ROLLING_UPGRADE_INTERACTIVE_MODE {
            get {
                return ResourceManager.GetString("PERFORM_ROLLING_UPGRADE_INTERACTIVE_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Performance Graphs ähnelt.
        /// </summary>
        public static string PERFORMANCE_TAB_TITLE {
            get {
                return ResourceManager.GetString("PERFORMANCE_TAB_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Permission Denied ähnelt.
        /// </summary>
        public static string PERMISSION_DENIED {
            get {
                return ResourceManager.GetString("PERMISSION_DENIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [Citrix] [XenServer product] Per-&amp;Socket ({0} required) ähnelt.
        /// </summary>
        public static string PERSOCKET_LICENSES_X_REQUIRED {
            get {
                return ResourceManager.GetString("PERSOCKET_LICENSES_X_REQUIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Physical device ähnelt.
        /// </summary>
        public static string PHYSICAL_DEVICE {
            get {
                return ResourceManager.GetString("PHYSICAL_DEVICE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bond {0} ähnelt.
        /// </summary>
        public static string PIF_BOND {
            get {
                return ResourceManager.GetString("PIF_BOND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DHCP ähnelt.
        /// </summary>
        public static string PIF_DHCP {
            get {
                return ResourceManager.GetString("PIF_DHCP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die in use by VMs ähnelt.
        /// </summary>
        public static string PIF_IN_USE_BY_VMS {
            get {
                return ResourceManager.GetString("PIF_IN_USE_BY_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Management Interfaces ähnelt.
        /// </summary>
        public static string PIF_MANAGEMENT_INTERFACES {
            get {
                return ResourceManager.GetString("PIF_MANAGEMENT_INTERFACES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NIC {0} ähnelt.
        /// </summary>
        public static string PIF_NIC {
            get {
                return ResourceManager.GetString("PIF_NIC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die None ähnelt.
        /// </summary>
        public static string PIF_NONE {
            get {
                return ResourceManager.GetString("PIF_NONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Static ähnelt.
        /// </summary>
        public static string PIF_STATIC {
            get {
                return ResourceManager.GetString("PIF_STATIC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown ähnelt.
        /// </summary>
        public static string PIF_UNKNOWN {
            get {
                return ResourceManager.GetString("PIF_UNKNOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die These files may contain personally identifiable information if customized. ähnelt.
        /// </summary>
        public static string PII_CUSTOMISED {
            get {
                return ResourceManager.GetString("PII_CUSTOMISED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die These files may contain personally identifiable information. ähnelt.
        /// </summary>
        public static string PII_MAYBE {
            get {
                return ResourceManager.GetString("PII_MAYBE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die These files will contain no personally identifiable information. ähnelt.
        /// </summary>
        public static string PII_NO {
            get {
                return ResourceManager.GetString("PII_NO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die These files will contain personally identifiable information. ähnelt.
        /// </summary>
        public static string PII_YES {
            get {
                return ResourceManager.GetString("PII_YES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disabling host server ähnelt.
        /// </summary>
        public static string PLAN_ACTION_STATUS_DISABLING_HOST_SERVER {
            get {
                return ResourceManager.GetString("PLAN_ACTION_STATUS_DISABLING_HOST_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Host has been upgraded ähnelt.
        /// </summary>
        public static string PLAN_ACTION_STATUS_HOST_UPGRADED {
            get {
                return ResourceManager.GetString("PLAN_ACTION_STATUS_HOST_UPGRADED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Installing [XenServer] ähnelt.
        /// </summary>
        public static string PLAN_ACTION_STATUS_INSTALLING_XENSERVER {
            get {
                return ResourceManager.GetString("PLAN_ACTION_STATUS_INSTALLING_XENSERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Migrating VM {0} of {1} back to Host ähnelt.
        /// </summary>
        public static string PLAN_ACTION_STATUS_MIGRATING_VM_X_OF_Y {
            get {
                return ResourceManager.GetString("PLAN_ACTION_STATUS_MIGRATING_VM_X_OF_Y", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Migrating VMs from host ähnelt.
        /// </summary>
        public static string PLAN_ACTION_STATUS_MIGRATING_VMS_FROM_HOST {
            get {
                return ResourceManager.GetString("PLAN_ACTION_STATUS_MIGRATING_VMS_FROM_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reconnecting storage ähnelt.
        /// </summary>
        public static string PLAN_ACTION_STATUS_RECONNECTING_STORAGE {
            get {
                return ResourceManager.GetString("PLAN_ACTION_STATUS_RECONNECTING_STORAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Re-enabling host ähnelt.
        /// </summary>
        public static string PLAN_ACTION_STATUS_REENABLING_HOST {
            get {
                return ResourceManager.GetString("PLAN_ACTION_STATUS_REENABLING_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Migrate VMs from Server ähnelt.
        /// </summary>
        public static string PLANACTION_VMS_MIGRATE {
            get {
                return ResourceManager.GetString("PLANACTION_VMS_MIGRATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VMs migrated from Server ähnelt.
        /// </summary>
        public static string PLANACTION_VMS_MIGRATED {
            get {
                return ResourceManager.GetString("PLANACTION_VMS_MIGRATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Migrating VMs off server &apos;{0}&apos; ...  ähnelt.
        /// </summary>
        public static string PLANACTION_VMS_MIGRATING {
            get {
                return ResourceManager.GetString("PLANACTION_VMS_MIGRATING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reboot specified VMs ähnelt.
        /// </summary>
        public static string PLANACTION_VMS_REBOOT {
            get {
                return ResourceManager.GetString("PLANACTION_VMS_REBOOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rebooted specified VMs ähnelt.
        /// </summary>
        public static string PLANACTION_VMS_REBOOTED {
            get {
                return ResourceManager.GetString("PLANACTION_VMS_REBOOTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rebooting specified VMs ...  ähnelt.
        /// </summary>
        public static string PLANACTION_VMS_REBOOTING {
            get {
                return ResourceManager.GetString("PLANACTION_VMS_REBOOTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}
        ///
        ///Please reconnect the host and try again ähnelt.
        /// </summary>
        public static string PLEASE_RECONNECT_HOST {
            get {
                return ResourceManager.GetString("PLEASE_RECONNECT_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Running plug-in &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string PLUGIN_CALLING {
            get {
                return ResourceManager.GetString("PLUGIN_CALLING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copyright ähnelt.
        /// </summary>
        public static string PLUGIN_COPYRIGHT {
            get {
                return ResourceManager.GetString("PLUGIN_COPYRIGHT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} plugins enabled ähnelt.
        /// </summary>
        public static string PLUGIN_ENABLED_COUNT {
            get {
                return ResourceManager.GetString("PLUGIN_ENABLED_COUNT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 1 plugin enabled ähnelt.
        /// </summary>
        public static string PLUGIN_ENABLED_COUNT_ONE {
            get {
                return ResourceManager.GetString("PLUGIN_ENABLED_COUNT_ONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Features ähnelt.
        /// </summary>
        public static string PLUGIN_FEATURES {
            get {
                return ResourceManager.GetString("PLUGIN_FEATURES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Link ähnelt.
        /// </summary>
        public static string PLUGIN_LINK {
            get {
                return ResourceManager.GetString("PLUGIN_LINK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Plug-in &apos;{0}&apos; completed successfully. ähnelt.
        /// </summary>
        public static string PLUGIN_SUCCEED {
            get {
                return ResourceManager.GetString("PLUGIN_SUCCEED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Call plug-in &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string PLUGIN_TITLE {
            get {
                return ResourceManager.GetString("PLUGIN_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Version ähnelt.
        /// </summary>
        public static string PLUGIN_VERSION {
            get {
                return ResourceManager.GetString("PLUGIN_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Plugins ähnelt.
        /// </summary>
        public static string PLUGINS {
            get {
                return ResourceManager.GetString("PLUGINS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adjust settings for plugins to [XenCenter] ähnelt.
        /// </summary>
        public static string PLUGINS_DESC {
            get {
                return ResourceManager.GetString("PLUGINS_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Menu item features must only have a single command XML node as a child ähnelt.
        /// </summary>
        public static string PLUGINS_MENU_ITEMS_ONLY_ONE_CHILD_ALLOWED {
            get {
                return ResourceManager.GetString("PLUGINS_MENU_ITEMS_ONLY_ONE_CHILD_ALLOWED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unexpected XML node &apos;{0}&apos; found as child of node &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string PLUGINS_UNRECOGNISED_XML_NODE {
            get {
                return ResourceManager.GetString("PLUGINS_UNRECOGNISED_XML_NODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Custom ähnelt.
        /// </summary>
        public static string PM_MODE_CUSTOM {
            get {
                return ResourceManager.GetString("PM_MODE_CUSTOM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disabled ähnelt.
        /// </summary>
        public static string PM_MODE_DISABLED {
            get {
                return ResourceManager.GetString("PM_MODE_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dell DRAC ähnelt.
        /// </summary>
        public static string PM_MODE_DRAC {
            get {
                return ResourceManager.GetString("PM_MODE_DRAC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die iLO ähnelt.
        /// </summary>
        public static string PM_MODE_ILO {
            get {
                return ResourceManager.GetString("PM_MODE_ILO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wake on LAN ähnelt.
        /// </summary>
        public static string PM_MODE_WOL {
            get {
                return ResourceManager.GetString("PM_MODE_WOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Policy Name ähnelt.
        /// </summary>
        public static string POLICY_NAME {
            get {
                return ResourceManager.GetString("POLICY_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Policy na&amp;me: ähnelt.
        /// </summary>
        public static string POLICY_NAME_FIELD_TEXT {
            get {
                return ResourceManager.GetString("POLICY_NAME_FIELD_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die What do you want to call this policy? ähnelt.
        /// </summary>
        public static string POLICY_NAME_TITLE {
            get {
                return ResourceManager.GetString("POLICY_NAME_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Job name:\r\n    {0}\r\n\r\nSelected VMs:\r\n    {1}\r\n\r\nSnapshot type:\r\n    {2}\r\n\r\nSchedule:\r\n    {3}\r\n\r\nArchive:\r\n    {4} ähnelt.
        /// </summary>
        public static string POLICY_SUMMARY {
            get {
                return ResourceManager.GetString("POLICY_SUMMARY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool ähnelt.
        /// </summary>
        public static string POOL {
            get {
                return ResourceManager.GetString("POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool: ähnelt.
        /// </summary>
        public static string POOL_COLON {
            get {
                return ResourceManager.GetString("POOL_COLON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The configuration for this pool is currently being modified ähnelt.
        /// </summary>
        public static string POOL_EDIT_IN_PROGRESS {
            get {
                return ResourceManager.GetString("POOL_EDIT_IN_PROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} failure tolerated ähnelt.
        /// </summary>
        public static string POOL_FAILURE_TOLERATE {
            get {
                return ResourceManager.GetString("POOL_FAILURE_TOLERATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} failures tolerated ähnelt.
        /// </summary>
        public static string POOL_FAILURES_TOLERATE {
            get {
                return ResourceManager.GetString("POOL_FAILURES_TOLERATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Automated updates are not supported for this server. ähnelt.
        /// </summary>
        public static string POOL_FORBIDS_AUTOMATED_UPDATES {
            get {
                return ResourceManager.GetString("POOL_FORBIDS_AUTOMATED_UPDATES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Post-update tasks cannot be carried out automatically for all the servers to be updated. ähnelt.
        /// </summary>
        public static string POOL_FORBIDS_AUTOMATIC_RESTARTS {
            get {
                return ResourceManager.GetString("POOL_FORBIDS_AUTOMATIC_RESTARTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool General Properties ähnelt.
        /// </summary>
        public static string POOL_GENERAL_TAB_TITLE {
            get {
                return ResourceManager.GetString("POOL_GENERAL_TAB_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool has disappeared! ähnelt.
        /// </summary>
        public static string POOL_GONE {
            get {
                return ResourceManager.GetString("POOL_GONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This pool has hosts with different types of license. ähnelt.
        /// </summary>
        public static string POOL_HAS_MIXED_LICENSES {
            get {
                return ResourceManager.GetString("POOL_HAS_MIXED_LICENSES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This pool has no shared storage ähnelt.
        /// </summary>
        public static string POOL_HAS_NO_SHARED_STORAGE {
            get {
                return ResourceManager.GetString("POOL_HAS_NO_SHARED_STORAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The pool is partially licensed ähnelt.
        /// </summary>
        public static string POOL_IS_PARTIALLY_LICENSED {
            get {
                return ResourceManager.GetString("POOL_IS_PARTIALLY_LICENSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die HA is enabled on the pool ähnelt.
        /// </summary>
        public static string POOL_JOIN_FORBIDDEN_BY_HA {
            get {
                return ResourceManager.GetString("POOL_JOIN_FORBIDDEN_BY_HA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool join not possible ähnelt.
        /// </summary>
        public static string POOL_JOIN_IMPOSSIBLE {
            get {
                return ResourceManager.GetString("POOL_JOIN_IMPOSSIBLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This server must not have any bonds, non management VLANs or cross-server private networks ähnelt.
        /// </summary>
        public static string POOL_JOIN_NON_COMPATIBLE_MANAGEMENT_INTERFACE {
            get {
                return ResourceManager.GetString("POOL_JOIN_NON_COMPATIBLE_MANAGEMENT_INTERFACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This server must not have any bonds, VLANs or cross-server private networks ähnelt.
        /// </summary>
        public static string POOL_JOIN_NOT_PHYSICAL_PIF {
            get {
                return ResourceManager.GetString("POOL_JOIN_NOT_PHYSICAL_PIF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool License ähnelt.
        /// </summary>
        public static string POOL_LICENSE {
            get {
                return ResourceManager.GetString("POOL_LICENSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool master ähnelt.
        /// </summary>
        public static string POOL_MASTER {
            get {
                return ResourceManager.GetString("POOL_MASTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool name cannot be empty ähnelt.
        /// </summary>
        public static string POOL_NAME_EMPTY {
            get {
                return ResourceManager.GetString("POOL_NAME_EMPTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool Networks ähnelt.
        /// </summary>
        public static string POOL_NETWORK_TAB_TITLE {
            get {
                return ResourceManager.GetString("POOL_NETWORK_TAB_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool or host is not connected ähnelt.
        /// </summary>
        public static string POOL_OR_HOST_IS_NOT_CONNECTED {
            get {
                return ResourceManager.GetString("POOL_OR_HOST_IS_NOT_CONNECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select a pool or stand alone server to import this VM to. The home server setting will be taken from the template.\n\nIf this value does not correspond to a server within the selected resource pool then it will be ignored for all resourcing decisions. ähnelt.
        /// </summary>
        public static string POOL_PICKER_BLURB_NO_AFFINITY {
            get {
                return ResourceManager.GetString("POOL_PICKER_BLURB_NO_AFFINITY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool partially upgraded to [XenServer] {0} ähnelt.
        /// </summary>
        public static string POOL_VERSIONS_LINK_TEXT {
            get {
                return ResourceManager.GetString("POOL_VERSIONS_LINK_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Partially upgraded ähnelt.
        /// </summary>
        public static string POOL_VERSIONS_LINK_TEXT_SHORT {
            get {
                return ResourceManager.GetString("POOL_VERSIONS_LINK_TEXT_SHORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die pool &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string POOL_X {
            get {
                return ResourceManager.GetString("POOL_X", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  Pool {0} ähnelt.
        /// </summary>
        public static string POOL_X_READYUPGRADE {
            get {
                return ResourceManager.GetString("POOL_X_READYUPGRADE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Added to pool ähnelt.
        /// </summary>
        public static string POOLCREATE_ADDED {
            get {
                return ResourceManager.GetString("POOLCREATE_ADDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adding to Pool ähnelt.
        /// </summary>
        public static string POOLCREATE_ADDING {
            get {
                return ResourceManager.GetString("POOLCREATE_ADDING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating pool ähnelt.
        /// </summary>
        public static string POOLCREATE_CREATING {
            get {
                return ResourceManager.GetString("POOLCREATE_CREATING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Made pool into standalone server ähnelt.
        /// </summary>
        public static string POOLCREATE_DESTROYED {
            get {
                return ResourceManager.GetString("POOLCREATE_DESTROYED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Making pool into standalone server ähnelt.
        /// </summary>
        public static string POOLCREATE_DESTROYING {
            get {
                return ResourceManager.GetString("POOLCREATE_DESTROYING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Removed from pool ähnelt.
        /// </summary>
        public static string POOLCREATE_REMOVED {
            get {
                return ResourceManager.GetString("POOLCREATE_REMOVED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Removing from pool ähnelt.
        /// </summary>
        public static string POOLCREATE_REMOVING {
            get {
                return ResourceManager.GetString("POOLCREATE_REMOVING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pools ähnelt.
        /// </summary>
        public static string POOLS {
            get {
                return ResourceManager.GetString("POOLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Power On ähnelt.
        /// </summary>
        public static string POWER_ON {
            get {
                return ResourceManager.GetString("POWER_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Power on request to {0} failed. Check the network connectivity. ähnelt.
        /// </summary>
        public static string POWER_ON_REQUEST_FAILED {
            get {
                return ResourceManager.GetString("POWER_ON_REQUEST_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Power state ähnelt.
        /// </summary>
        public static string POWER_STATE {
            get {
                return ResourceManager.GetString("POWER_STATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Power usage (W) ähnelt.
        /// </summary>
        public static string POWER_USAGE {
            get {
                return ResourceManager.GetString("POWER_USAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Privacy Warning ähnelt.
        /// </summary>
        public static string PRIVACY_WARNING {
            get {
                return ResourceManager.GetString("PRIVACY_WARNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Probing for LUNs finished ähnelt.
        /// </summary>
        public static string PROBED_HBA {
            get {
                return ResourceManager.GetString("PROBED_HBA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Probing for LUNs... ähnelt.
        /// </summary>
        public static string PROBING_HBA {
            get {
                return ResourceManager.GetString("PROBING_HBA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Probing for LUNs on {0} ähnelt.
        /// </summary>
        public static string PROBING_HBA_TITLE {
            get {
                return ResourceManager.GetString("PROBING_HBA_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string PROBLEM_HOSTPROBLEM_TITLE {
            get {
                return ResourceManager.GetString("PROBLEM_HOSTPROBLEM_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The MAC address entered has already been assigned to the VM: \n {1} \n\n Are you sure you want to continue? ähnelt.
        /// </summary>
        public static string PROBLEM_MAC_ADDRESS_IS_DUPLICATE {
            get {
                return ResourceManager.GetString("PROBLEM_MAC_ADDRESS_IS_DUPLICATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Duplicate MAC address ähnelt.
        /// </summary>
        public static string PROBLEM_MAC_ADDRESS_IS_DUPLICATE_TITLE {
            get {
                return ResourceManager.GetString("PROBLEM_MAC_ADDRESS_IS_DUPLICATE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: The master needs to be rebooted first ähnelt.
        /// </summary>
        public static string PROBLEM_MASTER_PENDING_RESTART_HOST {
            get {
                return ResourceManager.GetString("PROBLEM_MASTER_PENDING_RESTART_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: This update requires the master to be rebooted first ähnelt.
        /// </summary>
        public static string PROBLEM_MASTER_PENDING_RESTART_HOST_THIS_UPDATE {
            get {
                return ResourceManager.GetString("PROBLEM_MASTER_PENDING_RESTART_HOST_THIS_UPDATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: Toolstack on master needs to be restarted first ähnelt.
        /// </summary>
        public static string PROBLEM_MASTER_PENDING_RESTART_TOOLSTACK {
            get {
                return ResourceManager.GetString("PROBLEM_MASTER_PENDING_RESTART_TOOLSTACK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: This update requires the toolstack on master to be restarted first ähnelt.
        /// </summary>
        public static string PROBLEM_MASTER_PENDING_RESTART_TOOLSTACK_THIS_UPDATE {
            get {
                return ResourceManager.GetString("PROBLEM_MASTER_PENDING_RESTART_TOOLSTACK_THIS_UPDATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string PROBLEM_POOLPROBLEM_TITLE {
            get {
                return ResourceManager.GetString("PROBLEM_POOLPROBLEM_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SR &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string PROBLEM_SRPROBLEM_TITLE {
            get {
                return ResourceManager.GetString("PROBLEM_SRPROBLEM_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An error has occurred while attempting to connect to Storage Link Gateway: \n\n{0}\n\nPlease review the settings for this host and reconnect. ähnelt.
        /// </summary>
        public static string PROBLEM_STORAGELINK_CONNECTION_FAILED {
            get {
                return ResourceManager.GetString("PROBLEM_STORAGELINK_CONNECTION_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The use of StorageLink SRs was removed in [XenServer]. Remove StorageLink SRs before upgrading. ähnelt.
        /// </summary>
        public static string PROBLEM_UNSUPPORTED_STORAGELINK_SR {
            get {
                return ResourceManager.GetString("PROBLEM_UNSUPPORTED_STORAGELINK_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die vApp {0} ähnelt.
        /// </summary>
        public static string PROBLEM_VMAPPLIANCEPROBLEM_TITLE {
            get {
                return ResourceManager.GetString("PROBLEM_VMAPPLIANCEPROBLEM_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VM &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string PROBLEM_VMPROBLEM_TITLE {
            get {
                return ResourceManager.GetString("PROBLEM_VMPROBLEM_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenCenter] version ähnelt.
        /// </summary>
        public static string PROBLEM_XENCENTER_VERSION_TITLE {
            get {
                return ResourceManager.GetString("PROBLEM_XENCENTER_VERSION_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Proceed ähnelt.
        /// </summary>
        public static string PROCEED {
            get {
                return ResourceManager.GetString("PROCEED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please insert the [XenServer] CD into the physical drive on server &apos;{0}&apos;.
        ///Press OK to continue the wizard and return to the server and follow the instructions on screen. ähnelt.
        /// </summary>
        public static string PROMPT_XS_CD {
            get {
                return ResourceManager.GetString("PROMPT_XS_CD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; Properties ähnelt.
        /// </summary>
        public static string PROPERTIES_DIALOG_TITLE {
            get {
                return ResourceManager.GetString("PROPERTIES_DIALOG_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} on &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string PROPERTY_ON_OBJECT {
            get {
                return ResourceManager.GetString("PROPERTY_ON_OBJECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Protected VMs ähnelt.
        /// </summary>
        public static string PROTECTED_VMS {
            get {
                return ResourceManager.GetString("PROTECTED_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the VMs that you want to protect with this policy ähnelt.
        /// </summary>
        public static string PROTECTED_VMS_TITLE {
            get {
                return ResourceManager.GetString("PROTECTED_VMS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Provisioning Options ähnelt.
        /// </summary>
        public static string PROVISIONING_OPTIONS {
            get {
                return ResourceManager.GetString("PROVISIONING_OPTIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Provisioning Type ähnelt.
        /// </summary>
        public static string PROVISIONING_TYPE {
            get {
                return ResourceManager.GetString("PROVISIONING_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Provisioning VM ähnelt.
        /// </summary>
        public static string PROVISIONING_VM {
            get {
                return ResourceManager.GetString("PROVISIONING_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Proxy servers are not supported. ähnelt.
        /// </summary>
        public static string PROXY_SERVERS_NOT_SUPPORTED {
            get {
                return ResourceManager.GetString("PROXY_SERVERS_NOT_SUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer product] Tools not installed ähnelt.
        /// </summary>
        public static string PV_DRIVERS_NOT_INSTALLED {
            get {
                return ResourceManager.GetString("PV_DRIVERS_NOT_INSTALLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer product] Tools out of date (version {0} installed) ähnelt.
        /// </summary>
        public static string PV_DRIVERS_OUT_OF_DATE {
            get {
                return ResourceManager.GetString("PV_DRIVERS_OUT_OF_DATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer product] Tools out of date ähnelt.
        /// </summary>
        public static string PV_DRIVERS_OUT_OF_DATE_UNKNOWN_VERSION {
            get {
                return ResourceManager.GetString("PV_DRIVERS_OUT_OF_DATE_UNKNOWN_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PVS-Accelerator configuration - &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string PVS_CACHE_CONFIG_DIALOG_TITLE {
            get {
                return ResourceManager.GetString("PVS_CACHE_CONFIG_DIALOG_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} (Incomplete PVS configuration) ähnelt.
        /// </summary>
        public static string PVS_CACHE_INCOMPLETE_CONFIGURATION {
            get {
                return ResourceManager.GetString("PVS_CACHE_INCOMPLETE_CONFIGURATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Memory and disk ähnelt.
        /// </summary>
        public static string PVS_CACHE_MEMORY_AND_DISK {
            get {
                return ResourceManager.GetString("PVS_CACHE_MEMORY_AND_DISK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Memory only ähnelt.
        /// </summary>
        public static string PVS_CACHE_MEMORY_ONLY {
            get {
                return ResourceManager.GetString("PVS_CACHE_MEMORY_ONLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Memory only (Not enough Control Domain memory) ähnelt.
        /// </summary>
        public static string PVS_CACHE_MEMORY_ONLY_DISABLED {
            get {
                return ResourceManager.GetString("PVS_CACHE_MEMORY_ONLY_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MemorySR ähnelt.
        /// </summary>
        public static string PVS_CACHE_MEMORY_SR_NAME {
            get {
                return ResourceManager.GetString("PVS_CACHE_MEMORY_SR_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not configured ähnelt.
        /// </summary>
        public static string PVS_CACHE_NOT_CONFIGURED {
            get {
                return ResourceManager.GetString("PVS_CACHE_NOT_CONFIGURED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This PVS cache storage cannot be changed because it is in use. ähnelt.
        /// </summary>
        public static string PVS_CACHE_STORAGE_CANNOT_BE_CHANGED {
            get {
                return ResourceManager.GetString("PVS_CACHE_STORAGE_CANNOT_BE_CHANGED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} (Incomplete Cache Storage configuration) ähnelt.
        /// </summary>
        public static string PVS_CACHE_STORAGE_NOT_CONFIGURED {
            get {
                return ResourceManager.GetString("PVS_CACHE_STORAGE_NOT_CONFIGURED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This cache configuration cannot be removed because there are VMs that are streamed from this site. ähnelt.
        /// </summary>
        public static string PVS_SITE_CANNOT_BE_REMOVED {
            get {
                return ResourceManager.GetString("PVS_SITE_CANNOT_BE_REMOVED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PVS Servers on site {0}&apos; ähnelt.
        /// </summary>
        public static string PVS_SITE_DIALOG_TITLE {
            get {
                return ResourceManager.GetString("PVS_SITE_DIALOG_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PVS Site ähnelt.
        /// </summary>
        public static string PVS_SITE_NAME {
            get {
                return ResourceManager.GetString("PVS_SITE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PVS-Accelerator ähnelt.
        /// </summary>
        public static string PVS_TAB_TITLE {
            get {
                return ResourceManager.GetString("PVS_TAB_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die QoS limit must be between 1 and 2147483647 (or left empty). ähnelt.
        /// </summary>
        public static string QOS_LIMIT_INVALID {
            get {
                return ResourceManager.GetString("QOS_LIMIT_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}/{1} ähnelt.
        /// </summary>
        public static string QUERY_DATA_AVG_MAX {
            get {
                return ResourceManager.GetString("QUERY_DATA_AVG_MAX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}% of {1} ähnelt.
        /// </summary>
        public static string QUERY_MEMORY_PERCENT {
            get {
                return ResourceManager.GetString("QUERY_MEMORY_PERCENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} of {1} ähnelt.
        /// </summary>
        public static string QUERY_MEMORY_USAGE {
            get {
                return ResourceManager.GetString("QUERY_MEMORY_USAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}% of 1 CPU ähnelt.
        /// </summary>
        public static string QUERY_PERCENT_OF_CPU {
            get {
                return ResourceManager.GetString("QUERY_PERCENT_OF_CPU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}% of {1} CPUs ähnelt.
        /// </summary>
        public static string QUERY_PERCENT_OF_CPUS {
            get {
                return ResourceManager.GetString("QUERY_PERCENT_OF_CPUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are about to log out {0} users.
        ///
        ///Do you want to continue? ähnelt.
        /// </summary>
        public static string QUESTION_LOGOUT_AD_USER_MANY {
            get {
                return ResourceManager.GetString("QUESTION_LOGOUT_AD_USER_MANY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are about to log out the user &apos;{0}&apos;.
        ///
        ///Do you want to continue? ähnelt.
        /// </summary>
        public static string QUESTION_LOGOUT_AD_USER_ONE {
            get {
                return ResourceManager.GetString("QUESTION_LOGOUT_AD_USER_ONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ? ähnelt.
        /// </summary>
        public static string QUESTION_MARK {
            get {
                return ResourceManager.GetString("QUESTION_MARK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are about to remove {0} users.
        ///
        ///Do you want to continue? ähnelt.
        /// </summary>
        public static string QUESTION_REMOVE_AD_USER_MANY {
            get {
                return ResourceManager.GetString("QUESTION_REMOVE_AD_USER_MANY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are about to remove the user &apos;{0}&apos;.
        ///
        ///Do you want to continue? ähnelt.
        /// </summary>
        public static string QUESTION_REMOVE_AD_USER_ONE {
            get {
                return ResourceManager.GetString("QUESTION_REMOVE_AD_USER_ONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Quiesced snapshots ähnelt.
        /// </summary>
        public static string QUIESCED_SNAPSHOTS {
            get {
                return ResourceManager.GetString("QUIESCED_SNAPSHOTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die RAID type ähnelt.
        /// </summary>
        public static string RAID_TYPE {
            get {
                return ResourceManager.GetString("RAID_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die RAID Types ähnelt.
        /// </summary>
        public static string RAID_TYPES {
            get {
                return ResourceManager.GetString("RAID_TYPES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your current role is &apos;{0}&apos;.
        ///
        ///To access this console switch to an account with one of the following roles: 
        ///
        ///{1} ähnelt.
        /// </summary>
        public static string RBAC_CONSOLE_WARNING_MANY {
            get {
                return ResourceManager.GetString("RBAC_CONSOLE_WARNING_MANY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your current role is &apos;{0}&apos;.
        ///
        ///To access this console switch to an account with the following role: 
        ///
        ///{1} ähnelt.
        /// </summary>
        public static string RBAC_CONSOLE_WARNING_ONE {
            get {
                return ResourceManager.GetString("RBAC_CONSOLE_WARNING_ONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current access levels do not allow migration of VMs across pools. Log in as a different user with sufficient privileges on both source and target hosts and try again. ähnelt.
        /// </summary>
        public static string RBAC_CROSS_POOL_MIGRATE_VM_BLOCKED {
            get {
                return ResourceManager.GetString("RBAC_CROSS_POOL_MIGRATE_VM_BLOCKED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die User {0} does not have sufficient permissions to run a Disaster Recovery wizard. Login as a different user with sufficient privileges and try again. ähnelt.
        /// </summary>
        public static string RBAC_DR_WIZARD_MESSAGE {
            get {
                return ResourceManager.GetString("RBAC_DR_WIZARD_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your current role is &apos;{1}&apos;.
        ///
        ///To configure HA settings, switch to an account with one of the following roles: 
        ///
        ///{0} ähnelt.
        /// </summary>
        public static string RBAC_HA_TAB_WARNING {
            get {
                return ResourceManager.GetString("RBAC_HA_TAB_WARNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A {0} user cannot perform this action. ähnelt.
        /// </summary>
        public static string RBAC_HTTP_FAILURE {
            get {
                return ResourceManager.GetString("RBAC_HTTP_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check complete, you have full access to the features in this wizard. ähnelt.
        /// </summary>
        public static string RBAC_NO_WIZARD_LIMITS {
            get {
                return ResourceManager.GetString("RBAC_NO_WIZARD_LIMITS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die User {0} does not have sufficient permissions to apply software updates to {1}. Either log in with different user credentials or deselect this server before continuing. ähnelt.
        /// </summary>
        public static string RBAC_UPDATES_WIZARD {
            get {
                return ResourceManager.GetString("RBAC_UPDATES_WIZARD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die User {0} does not have sufficient permissions to perform a rolling pool upgrade on {1}. 
        ///
        ///You must reconnect to {1} using an account with Pool Administrator permissions before you can upgrade it using the Rolling Pool Upgrade wizard. ähnelt.
        /// </summary>
        public static string RBAC_UPGRADE_WIZARD_MESSAGE {
            get {
                return ResourceManager.GetString("RBAC_UPGRADE_WIZARD_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A {0} user cannot export appliances. Login as a different user with sufficient privileges and try again. ähnelt.
        /// </summary>
        public static string RBAC_WARNING_EXPORT_WIZARD_APPLIANCE {
            get {
                return ResourceManager.GetString("RBAC_WARNING_EXPORT_WIZARD_APPLIANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A {0} user cannot export VMs. Login as a different user with sufficient privileges and try again. ähnelt.
        /// </summary>
        public static string RBAC_WARNING_EXPORT_WIZARD_XVA {
            get {
                return ResourceManager.GetString("RBAC_WARNING_EXPORT_WIZARD_XVA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A {0} user cannot alter the Home Server setting. The value will be taken from the template, and if it relates to a server outside the resource pool then it will be ignored. ähnelt.
        /// </summary>
        public static string RBAC_WARNING_IMPORT_WIZARD_AFFINITY {
            get {
                return ResourceManager.GetString("RBAC_WARNING_IMPORT_WIZARD_AFFINITY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A {0} user cannot import appliances. Login as a different user with sufficient privileges and try again. ähnelt.
        /// </summary>
        public static string RBAC_WARNING_IMPORT_WIZARD_APPLIANCE {
            get {
                return ResourceManager.GetString("RBAC_WARNING_IMPORT_WIZARD_APPLIANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A {0} user cannot import virtual disk images. Login as a different user with sufficient privileges and try again. ähnelt.
        /// </summary>
        public static string RBAC_WARNING_IMPORT_WIZARD_IMAGE {
            get {
                return ResourceManager.GetString("RBAC_WARNING_IMPORT_WIZARD_IMAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A {0} user cannot import VMs. Log in as a different user with sufficient privileges and try again. ähnelt.
        /// </summary>
        public static string RBAC_WARNING_IMPORT_WIZARD_XVA {
            get {
                return ResourceManager.GetString("RBAC_WARNING_IMPORT_WIZARD_XVA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Before you can proceed through this wizard, role-based security checks are made to ensure that you have sufficient privileges to attach storage repositories and use all the features in this wizard. ähnelt.
        /// </summary>
        public static string RBAC_WARNING_PAGE_DESCRIPTION_SR_ATTACH {
            get {
                return ResourceManager.GetString("RBAC_WARNING_PAGE_DESCRIPTION_SR_ATTACH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Before you can proceed through this wizard, role-based security checks are made to ensure that you have sufficient privileges to create new storage repositories and use all the features in this wizard. ähnelt.
        /// </summary>
        public static string RBAC_WARNING_PAGE_DESCRIPTION_SR_CREATE {
            get {
                return ResourceManager.GetString("RBAC_WARNING_PAGE_DESCRIPTION_SR_CREATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking permissions for {0} ({1}) in &apos;{2}&apos; ... ähnelt.
        /// </summary>
        public static string RBAC_WARNING_PAGE_HEADER_ROW_DESC {
            get {
                return ResourceManager.GetString("RBAC_WARNING_PAGE_HEADER_ROW_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Permission Checks ähnelt.
        /// </summary>
        public static string RBAC_WARNING_PAGE_TEXT_TITLE {
            get {
                return ResourceManager.GetString("RBAC_WARNING_PAGE_TEXT_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A {0} user cannot attach SRs. Log in as a different user with sufficient privileges and try again. ähnelt.
        /// </summary>
        public static string RBAC_WARNING_SR_WIZARD_ATTACH {
            get {
                return ResourceManager.GetString("RBAC_WARNING_SR_WIZARD_ATTACH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A {0} user cannot create new SRs. Log in as a different user with sufficient privileges and try again. ähnelt.
        /// </summary>
        public static string RBAC_WARNING_SR_WIZARD_CREATE {
            get {
                return ResourceManager.GetString("RBAC_WARNING_SR_WIZARD_CREATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A {0} user cannot create vApps. Log in as a different user with sufficient privileges and try again. ähnelt.
        /// </summary>
        public static string RBAC_WARNING_VM_APPLIANCE {
            get {
                return ResourceManager.GetString("RBAC_WARNING_VM_APPLIANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A {0} user cannot alter the Home Server setting. Your choice of storage may be limited by the Home Server defined in the Template you select ähnelt.
        /// </summary>
        public static string RBAC_WARNING_VM_WIZARD_AFFINITY {
            get {
                return ResourceManager.GetString("RBAC_WARNING_VM_WIZARD_AFFINITY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A {0} user cannot create VMs. Log in as a different user with sufficient privileges and try again. ähnelt.
        /// </summary>
        public static string RBAC_WARNING_VM_WIZARD_BLOCK {
            get {
                return ResourceManager.GetString("RBAC_WARNING_VM_WIZARD_BLOCK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A {0} user cannot assign a virtual GPU and will be restricted to the settings on the template. ähnelt.
        /// </summary>
        public static string RBAC_WARNING_VM_WIZARD_GPU {
            get {
                return ResourceManager.GetString("RBAC_WARNING_VM_WIZARD_GPU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A {0} user cannot alter memory values and will be restricted to the settings on the template. ähnelt.
        /// </summary>
        public static string RBAC_WARNING_VM_WIZARD_MEM {
            get {
                return ResourceManager.GetString("RBAC_WARNING_VM_WIZARD_MEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A {0} user cannot create a snapshot schedule. Log in as a different user with sufficient privileges and try again. ähnelt.
        /// </summary>
        public static string RBAC_WARNING_VMSS {
            get {
                return ResourceManager.GetString("RBAC_WARNING_VMSS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Read Only ähnelt.
        /// </summary>
        public static string READ_ONLY {
            get {
                return ResourceManager.GetString("READ_ONLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You cannot perform this action because you only have Read Only access on {0}.
        ///Disconnect from these servers, or reconnect as a more privileged user. ähnelt.
        /// </summary>
        public static string READ_ONLY_ON_PLURAL {
            get {
                return ResourceManager.GetString("READ_ONLY_ON_PLURAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You cannot perform this action because you only have Read Only access on {0}.
        ///Disconnect from this server, or reconnect as a more privileged user. ähnelt.
        /// </summary>
        public static string READ_ONLY_ON_SINGULAR {
            get {
                return ResourceManager.GetString("READ_ONLY_ON_SINGULAR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Read / Write ähnelt.
        /// </summary>
        public static string READ_WRITE {
            get {
                return ResourceManager.GetString("READ_WRITE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ready to Upgrade ähnelt.
        /// </summary>
        public static string READY_UPGRADE {
            get {
                return ResourceManager.GetString("READY_UPGRADE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die R&amp;eattach ähnelt.
        /// </summary>
        public static string REATTACH_SR {
            get {
                return ResourceManager.GetString("REATTACH_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Reboot Now ähnelt.
        /// </summary>
        public static string REBOOT {
            get {
                return ResourceManager.GetString("REBOOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Reboot again ähnelt.
        /// </summary>
        public static string REBOOT_AGAIN_BUTTON_LABEL {
            get {
                return ResourceManager.GetString("REBOOT_AGAIN_BUTTON_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rebooted with the same version ähnelt.
        /// </summary>
        public static string REBOOT_WITH_SAME_VERSION {
            get {
                return ResourceManager.GetString("REBOOT_WITH_SAME_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are currently logged in to &apos;{0}&apos; as &apos;{1}&apos;.
        ///
        ///To log out of this server and log in again using a different user account, enter the account credentials below and click OK. ähnelt.
        /// </summary>
        public static string RECONNECT_AS_BLURB {
            get {
                return ResourceManager.GetString("RECONNECT_AS_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Region: ähnelt.
        /// </summary>
        public static string REGION_LABLE {
            get {
                return ResourceManager.GetString("REGION_LABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remote ({0}) ähnelt.
        /// </summary>
        public static string REMOTE {
            get {
                return ResourceManager.GetString("REMOTE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remote Storage Repositories ähnelt.
        /// </summary>
        public static string REMOTE_SRS {
            get {
                return ResourceManager.GetString("REMOTE_SRS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove ähnelt.
        /// </summary>
        public static string REMOVE {
            get {
                return ResourceManager.GetString("REMOVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove Crash Dump Files ähnelt.
        /// </summary>
        public static string REMOVE_CRASHDUMP_FILES {
            get {
                return ResourceManager.GetString("REMOVE_CRASHDUMP_FILES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Would you like to remove crash dump files on the selected servers? ähnelt.
        /// </summary>
        public static string REMOVE_CRASHDUMP_QUESTION {
            get {
                return ResourceManager.GetString("REMOVE_CRASHDUMP_QUESTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This will permanently remove all crash dump files from {0}. It is recommended you compile these files as part of a Server Status Report before you remove them.
        ///
        ///Click Server Status Report to open the Compile Server Status Report Wizard or click Remove Files to remove the crash dump files without compiling.
        /// ähnelt.
        /// </summary>
        public static string REMOVE_CRASHDUMP_WARNING {
            get {
                return ResourceManager.GetString("REMOVE_CRASHDUMP_WARNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove from &amp;folder ähnelt.
        /// </summary>
        public static string REMOVE_FROM_FOLDER {
            get {
                return ResourceManager.GetString("REMOVE_FROM_FOLDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove Grouping ähnelt.
        /// </summary>
        public static string REMOVE_GROUPING {
            get {
                return ResourceManager.GetString("REMOVE_GROUPING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove Update ähnelt.
        /// </summary>
        public static string REMOVE_PATCH {
            get {
                return ResourceManager.GetString("REMOVE_PATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Remove Server... ähnelt.
        /// </summary>
        public static string REMOVE_SERVER {
            get {
                return ResourceManager.GetString("REMOVE_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove Server from &amp;Pool ähnelt.
        /// </summary>
        public static string REMOVE_SERVER_FROM_POOL_CONTEXT_MENU_ITEM_TEXT {
            get {
                return ResourceManager.GetString("REMOVE_SERVER_FROM_POOL_CONTEXT_MENU_ITEM_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Remove Servers... ähnelt.
        /// </summary>
        public static string REMOVE_SERVERS {
            get {
                return ResourceManager.GetString("REMOVE_SERVERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove Snapshot ähnelt.
        /// </summary>
        public static string REMOVE_SNAPSHOT {
            get {
                return ResourceManager.GetString("REMOVE_SNAPSHOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to delete {0}?  This operation cannot be undone. ähnelt.
        /// </summary>
        public static string REMOVE_SNAPSHOT_TEXT {
            get {
                return ResourceManager.GetString("REMOVE_SNAPSHOT_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to delete the selected snapshots?  This operation cannot be undone. ähnelt.
        /// </summary>
        public static string REMOVE_SNAPSHOTS_TEXT {
            get {
                return ResourceManager.GetString("REMOVE_SNAPSHOTS_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die R&amp;emove Storage System ähnelt.
        /// </summary>
        public static string REMOVE_STORAGE_SYSTEM {
            get {
                return ResourceManager.GetString("REMOVE_STORAGE_SYSTEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die R&amp;emove Storage Systems ähnelt.
        /// </summary>
        public static string REMOVE_STORAGE_SYSTEMS {
            get {
                return ResourceManager.GetString("REMOVE_STORAGE_SYSTEMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Removed StorageLink Volume &apos;{0}&apos; from &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string REMOVE_STORAGELINK_VOLUME_ACTION_FINSH {
            get {
                return ResourceManager.GetString("REMOVE_STORAGELINK_VOLUME_ACTION_FINSH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Removing StorageLink Volume &apos;{0}&apos; from &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string REMOVE_STORAGELINK_VOLUME_ACTION_START {
            get {
                return ResourceManager.GetString("REMOVE_STORAGELINK_VOLUME_ACTION_START", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove StorageLink Volume &apos;{0}&apos; from &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string REMOVE_STORAGELINK_VOLUME_ACTION_TITLE {
            get {
                return ResourceManager.GetString("REMOVE_STORAGELINK_VOLUME_ACTION_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to remove &apos;{0}&apos;? ähnelt.
        /// </summary>
        public static string REMOVE_STORAGELINK_VOLUME_MESSAGEBOX_TEXT {
            get {
                return ResourceManager.GetString("REMOVE_STORAGELINK_VOLUME_MESSAGEBOX_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove StorageLink Volume ähnelt.
        /// </summary>
        public static string REMOVE_STORAGELINK_VOLUME_MESSAGEBOX_TITLE {
            get {
                return ResourceManager.GetString("REMOVE_STORAGELINK_VOLUME_MESSAGEBOX_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove Virtual Disk ähnelt.
        /// </summary>
        public static string REMOVE_VIRTUAL_DISK {
            get {
                return ResourceManager.GetString("REMOVE_VIRTUAL_DISK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove VM &apos;{0}&apos; from vApp &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string REMOVE_VM_FROM_APPLIANCE {
            get {
                return ResourceManager.GetString("REMOVE_VM_FROM_APPLIANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove VM &apos;{0}&apos; from snapshot schedule &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string REMOVE_VM_FROM_VMSS {
            get {
                return ResourceManager.GetString("REMOVE_VM_FROM_VMSS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove VMs from vApp &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string REMOVE_VMS_FROM_APPLIANCE {
            get {
                return ResourceManager.GetString("REMOVE_VMS_FROM_APPLIANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove VMs from snapshot schedule &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string REMOVE_VMS_FROM_VMSS {
            get {
                return ResourceManager.GetString("REMOVE_VMS_FROM_VMSS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Removed from folder ähnelt.
        /// </summary>
        public static string REMOVED_FROM_FOLDER {
            get {
                return ResourceManager.GetString("REMOVED_FROM_FOLDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Removed Update &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string REMOVED_UPDATE {
            get {
                return ResourceManager.GetString("REMOVED_UPDATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Removed from vApp  ähnelt.
        /// </summary>
        public static string REMOVED_VMS_FROM_APPLIANCE {
            get {
                return ResourceManager.GetString("REMOVED_VMS_FROM_APPLIANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Removed from snapshot schedule ähnelt.
        /// </summary>
        public static string REMOVED_VMS_FROM_VMSS {
            get {
                return ResourceManager.GetString("REMOVED_VMS_FROM_VMSS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Removing from folder ähnelt.
        /// </summary>
        public static string REMOVING_FROM_FOLDER {
            get {
                return ResourceManager.GetString("REMOVING_FROM_FOLDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Removing server &apos;{0}&apos; from pool &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string REMOVING_SERVER_FROM_POOL {
            get {
                return ResourceManager.GetString("REMOVING_SERVER_FROM_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Removing servers from pool ähnelt.
        /// </summary>
        public static string REMOVING_SERVERS_FROM_POOL {
            get {
                return ResourceManager.GetString("REMOVING_SERVERS_FROM_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Removing Update &apos;{0}&apos;... ähnelt.
        /// </summary>
        public static string REMOVING_UPDATE {
            get {
                return ResourceManager.GetString("REMOVING_UPDATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Removing from vApp ähnelt.
        /// </summary>
        public static string REMOVING_VMS_FROM_APPLIANCE {
            get {
                return ResourceManager.GetString("REMOVING_VMS_FROM_APPLIANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Removing from snapshot schedule ähnelt.
        /// </summary>
        public static string REMOVING_VMS_FROM_VMSS {
            get {
                return ResourceManager.GetString("REMOVING_VMS_FROM_VMSS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Rename Folder... ähnelt.
        /// </summary>
        public static string RENAME_FOLDER {
            get {
                return ResourceManager.GetString("RENAME_FOLDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rename tag &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string RENAME_TAG {
            get {
                return ResourceManager.GetString("RENAME_TAG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Renamed ähnelt.
        /// </summary>
        public static string RENAMED {
            get {
                return ResourceManager.GetString("RENAMED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Private Network ähnelt.
        /// </summary>
        public static string RENAMED_BOND {
            get {
                return ResourceManager.GetString("RENAMED_BOND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Renamed tag &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string RENAMED_TAG {
            get {
                return ResourceManager.GetString("RENAMED_TAG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Renaming... ähnelt.
        /// </summary>
        public static string RENAMING {
            get {
                return ResourceManager.GetString("RENAMING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Renaming folder &apos;{0}&apos; to &apos;{1}&apos;... ähnelt.
        /// </summary>
        public static string RENAMING_FOLDER {
            get {
                return ResourceManager.GetString("RENAMING_FOLDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Renaming tag &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string RENAMING_TAG {
            get {
                return ResourceManager.GetString("RENAMING_TAG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Repair ähnelt.
        /// </summary>
        public static string REPAIR_SR {
            get {
                return ResourceManager.GetString("REPAIR_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connection Missing ähnelt.
        /// </summary>
        public static string REPAIR_SR_DIALOG_CONNECTION_MISSING {
            get {
                return ResourceManager.GetString("REPAIR_SR_DIALOG_CONNECTION_MISSING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Repair Storage Repositories ähnelt.
        /// </summary>
        public static string REPAIR_SR_DIALOG_TITLE_MULTIPLE {
            get {
                return ResourceManager.GetString("REPAIR_SR_DIALOG_TITLE_MULTIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Repair Storage Repository - {0} ähnelt.
        /// </summary>
        public static string REPAIR_SR_DIALOG_TITLE_SINGLE {
            get {
                return ResourceManager.GetString("REPAIR_SR_DIALOG_TITLE_SINGLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unplugged ähnelt.
        /// </summary>
        public static string REPAIR_SR_DIALOG_UNPLUGGED {
            get {
                return ResourceManager.GetString("REPAIR_SR_DIALOG_UNPLUGGED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Multipaths are not fully functional ähnelt.
        /// </summary>
        public static string REPAIR_SR_WARNING_MULTIPATHS_DOWN {
            get {
                return ResourceManager.GetString("REPAIR_SR_WARNING_MULTIPATHS_DOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server ähnelt.
        /// </summary>
        public static string REPAIRSR_SERVER {
            get {
                return ResourceManager.GetString("REPAIRSR_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Repeated key ähnelt.
        /// </summary>
        public static string REPEATED_KEY {
            get {
                return ResourceManager.GetString("REPEATED_KEY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: The required hotfix is not installed ähnelt.
        /// </summary>
        public static string REQUIRED_HOTFIX_ISNOT_INSTALLED {
            get {
                return ResourceManager.GetString("REQUIRED_HOTFIX_ISNOT_INSTALLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Required Updates ähnelt.
        /// </summary>
        public static string REQUIRED_UPDATES {
            get {
                return ResourceManager.GetString("REQUIRED_UPDATES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resolved as {0} ähnelt.
        /// </summary>
        public static string RESOLVED_AS {
            get {
                return ResourceManager.GetString("RESOLVED_AS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restore dismissed updates ähnelt.
        /// </summary>
        public static string RESTORE_DISMISSED_UPDATES {
            get {
                return ResourceManager.GetString("RESTORE_DISMISSED_UPDATES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Backup file loaded to server &apos;{0}&apos;.  Refer to the &quot;[XenServer product] Administrator&apos;s Guide&quot; for instructions on how to complete the restore procedure. ähnelt.
        /// </summary>
        public static string RESTORE_FROM_BACKUP_FINALIZE {
            get {
                return ResourceManager.GetString("RESTORE_FROM_BACKUP_FINALIZE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restore From Backup... ähnelt.
        /// </summary>
        public static string RESTORE_HOST {
            get {
                return ResourceManager.GetString("RESTORE_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restoring... ähnelt.
        /// </summary>
        public static string RESTORING {
            get {
                return ResourceManager.GetString("RESTORING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restoring server &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string RESTORING_HOST {
            get {
                return ResourceManager.GetString("RESTORING_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restrictions: ähnelt.
        /// </summary>
        public static string RESTRICTIONS {
            get {
                return ResourceManager.GetString("RESTRICTIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resume On ähnelt.
        /// </summary>
        public static string RESUME_ON {
            get {
                return ResourceManager.GetString("RESUME_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resume suspended VMs ähnelt.
        /// </summary>
        public static string RESUME_SUSPENDED_VMS {
            get {
                return ResourceManager.GetString("RESUME_SUSPENDED_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resumed suspended VMs ähnelt.
        /// </summary>
        public static string RESUMED_SUSPENDED_VMS {
            get {
                return ResourceManager.GetString("RESUMED_SUSPENDED_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resuming suspended VMs ähnelt.
        /// </summary>
        public static string RESUMING_SUSPENDED_VMS {
            get {
                return ResourceManager.GetString("RESUMING_SUSPENDED_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Retail ähnelt.
        /// </summary>
        public static string RETAIL {
            get {
                return ResourceManager.GetString("RETAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Retrieving the WLB configuration. ähnelt.
        /// </summary>
        public static string RETRIEVING_WLB_CONFIGURATION {
            get {
                return ResourceManager.GetString("RETRIEVING_WLB_CONFIGURATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Retrieving the WLB configuration for pool &apos;{0}.&apos; ähnelt.
        /// </summary>
        public static string RETRIEVING_WLB_CONFIGURATION_FOR {
            get {
                return ResourceManager.GetString("RETRIEVING_WLB_CONFIGURATION_FOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Retrieving WLB default configuration ähnelt.
        /// </summary>
        public static string RETRIEVING_WLB_DEFAULT_CONFIGURATION {
            get {
                return ResourceManager.GetString("RETRIEVING_WLB_DEFAULT_CONFIGURATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Retry ähnelt.
        /// </summary>
        public static string RETRY {
            get {
                return ResourceManager.GetString("RETRY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Retry ähnelt.
        /// </summary>
        public static string RETRY_BUTTON_LABEL {
            get {
                return ResourceManager.GetString("RETRY_BUTTON_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die         Revert pool state ähnelt.
        /// </summary>
        public static string REVERT_POOL_STATE {
            get {
                return ResourceManager.GetString("REVERT_POOL_STATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Revert precheck actions ähnelt.
        /// </summary>
        public static string REVERT_PRECHECK_ACTIONS {
            get {
                return ResourceManager.GetString("REVERT_PRECHECK_ACTIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Revert all changes done by this wizard ähnelt.
        /// </summary>
        public static string REVERT_WIZARD_CHANGES {
            get {
                return ResourceManager.GetString("REVERT_WIZARD_CHANGES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reverted all changes done by this wizard ähnelt.
        /// </summary>
        public static string REVERTED_WIZARD_CHANGES {
            get {
                return ResourceManager.GetString("REVERTED_WIZARD_CHANGES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reverting the power state of {0} ähnelt.
        /// </summary>
        public static string REVERTING_POWER_STATE {
            get {
                return ResourceManager.GetString("REVERTING_POWER_STATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reverting resolved prechecks ähnelt.
        /// </summary>
        public static string REVERTING_RESOLVED_PRECHECKS {
            get {
                return ResourceManager.GetString("REVERTING_RESOLVED_PRECHECKS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reverting resolved prechecks in {0}... ähnelt.
        /// </summary>
        public static string REVERTING_RESOLVED_PRECHECKS_POOL {
            get {
                return ResourceManager.GetString("REVERTING_RESOLVED_PRECHECKS_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reverting all changes done by this wizard ähnelt.
        /// </summary>
        public static string REVERTING_WIZARD_CHANGES {
            get {
                return ResourceManager.GetString("REVERTING_WIZARD_CHANGES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Right Ctrl ähnelt.
        /// </summary>
        public static string RIGHT_CTRL {
            get {
                return ResourceManager.GetString("RIGHT_CTRL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Role ähnelt.
        /// </summary>
        public static string ROLE {
            get {
                return ResourceManager.GetString("ROLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} on &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string ROLE_ON_CONNECTION {
            get {
                return ResourceManager.GetString("ROLE_ON_CONNECTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rolling Pool Upgrade ähnelt.
        /// </summary>
        public static string ROLLING_POOL_UPGRADE {
            get {
                return ResourceManager.GetString("ROLLING_POOL_UPGRADE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rolling Pool &amp;Upgrade... ähnelt.
        /// </summary>
        public static string ROLLING_POOL_UPGRADE_ELLIPSIS {
            get {
                return ResourceManager.GetString("ROLLING_POOL_UPGRADE_ELLIPSIS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This upgrade can be resumed by launching the Rolling Pool Upgrade wizard again. ähnelt.
        /// </summary>
        public static string ROLLING_UPGRADE_CAN_RESUME_UPGRADE {
            get {
                return ResourceManager.GetString("ROLLING_UPGRADE_CAN_RESUME_UPGRADE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No longer connected to {0}. Please review your selection and try again. ähnelt.
        /// </summary>
        public static string ROLLING_UPGRADE_DISCONNECTED_SERVER {
            get {
                return ResourceManager.GetString("ROLLING_UPGRADE_DISCONNECTED_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Locate the network install files (Automatic Mode) ähnelt.
        /// </summary>
        public static string ROLLING_UPGRADE_METHOD_PAGE_TEXT {
            get {
                return ResourceManager.GetString("ROLLING_UPGRADE_METHOD_PAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose the upgrade mode: Automatic or Manual ähnelt.
        /// </summary>
        public static string ROLLING_UPGRADE_MODE_PAGE {
            get {
                return ResourceManager.GetString("ROLLING_UPGRADE_MODE_PAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upgrade failed. The server &apos;{0}&apos; has rebooted with the same version.
        ///
        ///Check the boot order in the server and reboot again. ähnelt.
        /// </summary>
        public static string ROLLING_UPGRADE_REBOOT_AGAIN_MESSAGE {
            get {
                return ResourceManager.GetString("ROLLING_UPGRADE_REBOOT_AGAIN_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die To install the [XenServer] upgrade on {0}, follow these steps:
        ///    
        ///1. Insert the [XenServer] installation CD-ROM in the server’s CD/DVD drive or set up a PXE network boot.
        ///2. Click the Reboot Now button below to reboot the server and begin the installation.
        ///3. Go to the server’s console and follow the on-screen instructions to install the upgrade.
        ///
        ///To skip this server and continue to the next server in the pool, click Skip This Server. Note that running a pool with servers on different versions of [X [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string ROLLING_UPGRADE_REBOOT_MESSAGE {
            get {
                return ResourceManager.GetString("ROLLING_UPGRADE_REBOOT_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Still waiting for the upgrade to complete.\n\nThere maybe a problem check the server console.\n\nClick Keep Waiting if the upgrade is still running or Cancel if there was an error. ähnelt.
        /// </summary>
        public static string ROLLING_UPGRADE_TIMEOUT {
            get {
                return ResourceManager.GetString("ROLLING_UPGRADE_TIMEOUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upgrade Mode ähnelt.
        /// </summary>
        public static string ROLLING_UPGRADE_TITLE_MODE {
            get {
                return ResourceManager.GetString("ROLLING_UPGRADE_TITLE_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This server is not licensed for rolling pool upgrade ähnelt.
        /// </summary>
        public static string ROLLING_UPGRADE_UNLICENSED_HOST {
            get {
                return ResourceManager.GetString("ROLLING_UPGRADE_UNLICENSED_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This pool is not licensed for rolling pool upgrade ähnelt.
        /// </summary>
        public static string ROLLING_UPGRADE_UNLICENSED_POOL {
            get {
                return ResourceManager.GetString("ROLLING_UPGRADE_UNLICENSED_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rolling pool upgrade is complete. ähnelt.
        /// </summary>
        public static string ROLLING_UPGRADE_UPGRADE_COMPLETED {
            get {
                return ResourceManager.GetString("ROLLING_UPGRADE_UPGRADE_COMPLETED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rolling pool upgrade did not complete. ähnelt.
        /// </summary>
        public static string ROLLING_UPGRADE_UPGRADE_NOT_COMPLETED {
            get {
                return ResourceManager.GetString("ROLLING_UPGRADE_UPGRADE_NOT_COMPLETED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upgrade prechecks are performed on all the pools you selected to ensure that all the servers can be upgraded. ähnelt.
        /// </summary>
        public static string ROLLINGUPGRADE_PRECHECKS {
            get {
                return ResourceManager.GetString("ROLLINGUPGRADE_PRECHECKS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Running policy &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string RUN_POLICY {
            get {
                return ResourceManager.GetString("RUN_POLICY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Policy started ähnelt.
        /// </summary>
        public static string RUN_POLICY_STARTED {
            get {
                return ResourceManager.GetString("RUN_POLICY_STARTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Run Prechecks ähnelt.
        /// </summary>
        public static string RUN_PRECHECKS_WITH_ACCESS_KEY {
            get {
                return ResourceManager.GetString("RUN_PRECHECKS_WITH_ACCESS_KEY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Run Report ähnelt.
        /// </summary>
        public static string RUN_REPORT {
            get {
                return ResourceManager.GetString("RUN_REPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Archiving ähnelt.
        /// </summary>
        public static string RUNNING_ARCHIVE {
            get {
                return ResourceManager.GetString("RUNNING_ARCHIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Running on ähnelt.
        /// </summary>
        public static string RUNNING_ON {
            get {
                return ResourceManager.GetString("RUNNING_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Saturday ähnelt.
        /// </summary>
        public static string SATURDAY_LONG {
            get {
                return ResourceManager.GetString("SATURDAY_LONG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sat ähnelt.
        /// </summary>
        public static string SATURDAY_SHORT {
            get {
                return ResourceManager.GetString("SATURDAY_SHORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save ähnelt.
        /// </summary>
        public static string SAVE {
            get {
                return ResourceManager.GetString("SAVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save and Restore ähnelt.
        /// </summary>
        public static string SAVE_AND_RESTORE {
            get {
                return ResourceManager.GetString("SAVE_AND_RESTORE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save and restore server connection state on startup ähnelt.
        /// </summary>
        public static string SAVE_AND_RESTORE_DESC {
            get {
                return ResourceManager.GetString("SAVE_AND_RESTORE_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save as a Template ähnelt.
        /// </summary>
        public static string SAVE_AS_TEMPLATE {
            get {
                return ResourceManager.GetString("SAVE_AS_TEMPLATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you want to save the changes for policy &apos;{0}&apos;? ähnelt.
        /// </summary>
        public static string SAVE_CHANGES_FOR_POLICY {
            get {
                return ResourceManager.GetString("SAVE_CHANGES_FOR_POLICY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save Search &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string SAVE_SEARCH {
            get {
                return ResourceManager.GetString("SAVE_SEARCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Instance is already locked ähnelt.
        /// </summary>
        public static string SAVECHANGES_LOCKED {
            get {
                return ResourceManager.GetString("SAVECHANGES_LOCKED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Saving file {0} ähnelt.
        /// </summary>
        public static string SAVING_FILE_X {
            get {
                return ResourceManager.GetString("SAVING_FILE_X", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Saving metadata... ähnelt.
        /// </summary>
        public static string SAVING_METADATA {
            get {
                return ResourceManager.GetString("SAVING_METADATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Saving search &apos;{0}&apos;... ähnelt.
        /// </summary>
        public static string SAVING_SEARCH {
            get {
                return ResourceManager.GetString("SAVING_SEARCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Saving configuration... ähnelt.
        /// </summary>
        public static string SAVING_VMS_ACTION_DESC {
            get {
                return ResourceManager.GetString("SAVING_VMS_ACTION_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Saving VM Configuration ähnelt.
        /// </summary>
        public static string SAVING_VMS_ACTION_TITLE {
            get {
                return ResourceManager.GetString("SAVING_VMS_ACTION_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Saving Workload Balancing configuration. ähnelt.
        /// </summary>
        public static string SAVING_WLB_CONFIGURATION {
            get {
                return ResourceManager.GetString("SAVING_WLB_CONFIGURATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Saving Workload Balancing configuration for &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string SAVING_WLB_CONFIGURATION_FOR {
            get {
                return ResourceManager.GetString("SAVING_WLB_CONFIGURATION_FOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This SR already has a scan in progress ähnelt.
        /// </summary>
        public static string SCAN_IN_PROGRESS_TOOLTIP {
            get {
                return ResourceManager.GetString("SCAN_IN_PROGRESS_TOOLTIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scanning adapters ähnelt.
        /// </summary>
        public static string SCANNING_ADAPTERS {
            get {
                return ResourceManager.GetString("SCANNING_ADAPTERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scanning VMs... ähnelt.
        /// </summary>
        public static string SCANNING_VMS {
            get {
                return ResourceManager.GetString("SCANNING_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Search... ähnelt.
        /// </summary>
        public static string SEARCH_ELLIPSIS {
            get {
                return ResourceManager.GetString("SEARCH_ELLIPSIS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Search... ähnelt.
        /// </summary>
        public static string SEARCH_TEXT_BOX_INITIAL_TEXT {
            get {
                return ResourceManager.GetString("SEARCH_TEXT_BOX_INITIAL_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: Overview ähnelt.
        /// </summary>
        public static string SEARCH_TITLE_HOST {
            get {
                return ResourceManager.GetString("SEARCH_TITLE_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All Servers, VMs, Custom Templates &amp; Remote SRs ähnelt.
        /// </summary>
        public static string SEARCH_TITLE_OVERVIEW {
            get {
                return ResourceManager.GetString("SEARCH_TITLE_OVERVIEW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: Overview ähnelt.
        /// </summary>
        public static string SEARCH_TITLE_POOL {
            get {
                return ResourceManager.GetString("SEARCH_TITLE_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Find resources in the Resources Pane ähnelt.
        /// </summary>
        public static string SEARCHBOX_TOOLTIP {
            get {
                return ResourceManager.GetString("SEARCHBOX_TOOLTIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Secret access key: ähnelt.
        /// </summary>
        public static string SECRET_ACCESS_KEY_LABLE {
            get {
                return ResourceManager.GetString("SECRET_ACCESS_KEY_LABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Security ähnelt.
        /// </summary>
        public static string SECURITY {
            get {
                return ResourceManager.GetString("SECURITY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Security Checks ähnelt.
        /// </summary>
        public static string SECURITY_CHECKS {
            get {
                return ResourceManager.GetString("SECURITY_CHECKS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SSL certificate options ähnelt.
        /// </summary>
        public static string SECURITY_DESC {
            get {
                return ResourceManager.GetString("SECURITY_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Security Groups ähnelt.
        /// </summary>
        public static string SECURITY_GROUPS {
            get {
                return ResourceManager.GetString("SECURITY_GROUPS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the security protocols that can be used for communicating with this server. ähnelt.
        /// </summary>
        public static string SECURITYEDITPAGE_RUBRIC_HOST {
            get {
                return ResourceManager.GetString("SECURITYEDITPAGE_RUBRIC_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Backwards compatibility ähnelt.
        /// </summary>
        public static string SECURITYEDITPAGE_SUBTEXT_SSL {
            get {
                return ResourceManager.GetString("SECURITYEDITPAGE_SUBTEXT_SSL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die TLS 1.2 only ähnelt.
        /// </summary>
        public static string SECURITYEDITPAGE_SUBTEXT_TLS {
            get {
                return ResourceManager.GetString("SECURITYEDITPAGE_SUBTEXT_TLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select a filter... ähnelt.
        /// </summary>
        public static string SELECT_A_FILTER {
            get {
                return ResourceManager.GetString("SELECT_A_FILTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select Default SR ähnelt.
        /// </summary>
        public static string SELECT_DEFAULT_SR {
            get {
                return ResourceManager.GetString("SELECT_DEFAULT_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There are no networks available for this network interface ähnelt.
        /// </summary>
        public static string SELECT_NETWORK_TOOLTIP {
            get {
                return ResourceManager.GetString("SELECT_NETWORK_TOOLTIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select Pools ähnelt.
        /// </summary>
        public static string SELECT_POOL {
            get {
                return ResourceManager.GetString("SELECT_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} - not enough available space on the SR ähnelt.
        /// </summary>
        public static string SELECT_STORAGE_DROPDOWN_ERROR_NOT_ENOUGH_SPACE {
            get {
                return ResourceManager.GetString("SELECT_STORAGE_DROPDOWN_ERROR_NOT_ENOUGH_SPACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select target IQN ähnelt.
        /// </summary>
        public static string SELECT_TARGET_IQN {
            get {
                return ResourceManager.GetString("SELECT_TARGET_IQN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select target LUN ähnelt.
        /// </summary>
        public static string SELECT_TARGET_LUN {
            get {
                return ResourceManager.GetString("SELECT_TARGET_LUN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select VMs to Suspend - server &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string SELECT_VMS_TO_SUSPEND_DLOG_TITLE {
            get {
                return ResourceManager.GetString("SELECT_VMS_TO_SUSPEND_DLOG_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The hosts or pools selected are not connected ähnelt.
        /// </summary>
        public static string SELECTED_HOST_POOL_NOT_CONNECTED {
            get {
                return ResourceManager.GetString("SELECTED_HOST_POOL_NOT_CONNECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Different versions of [XenServer] must be licensed separately ähnelt.
        /// </summary>
        public static string SELECTION_CANNOT_BE_MIXED_FOR_LICENSING {
            get {
                return ResourceManager.GetString("SELECTION_CANNOT_BE_MIXED_FOR_LICENSING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server ähnelt.
        /// </summary>
        public static string SERVER {
            get {
                return ResourceManager.GetString("SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This server is using an API that is incompatible with [XenCenter]. ähnelt.
        /// </summary>
        public static string SERVER_API_INCOMPATIBLE {
            get {
                return ResourceManager.GetString("SERVER_API_INCOMPATIBLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server: ähnelt.
        /// </summary>
        public static string SERVER_COLON {
            get {
                return ResourceManager.GetString("SERVER_COLON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server failure: {0} ähnelt.
        /// </summary>
        public static string SERVER_FAILURE {
            get {
                return ResourceManager.GetString("SERVER_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Server: ähnelt.
        /// </summary>
        public static string SERVER_LABLE {
            get {
                return ResourceManager.GetString("SERVER_LABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer] Out of Date ähnelt.
        /// </summary>
        public static string SERVER_OUT_OF_DATE {
            get {
                return ResourceManager.GetString("SERVER_OUT_OF_DATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server &apos;{0}&apos; is out of date and can no longer be connected to. ähnelt.
        /// </summary>
        public static string SERVER_OUT_OF_DATE_DETAIL {
            get {
                return ResourceManager.GetString("SERVER_OUT_OF_DATE_DETAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A server request is in progress ähnelt.
        /// </summary>
        public static string SERVER_REQUEST_IN_PROGRESS {
            get {
                return ResourceManager.GetString("SERVER_REQUEST_IN_PROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server selection check ähnelt.
        /// </summary>
        public static string SERVER_SELECTION_CHECK_DESCRIPTION {
            get {
                return ResourceManager.GetString("SERVER_SELECTION_CHECK_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disk space check ähnelt.
        /// </summary>
        public static string SERVER_SIDE_CHECK_AUTO_MODE_DESCRIPTION {
            get {
                return ResourceManager.GetString("SERVER_SIDE_CHECK_AUTO_MODE_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server side patch check ähnelt.
        /// </summary>
        public static string SERVER_SIDE_CHECK_DESCRIPTION {
            get {
                return ResourceManager.GetString("SERVER_SIDE_CHECK_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server Status Report ähnelt.
        /// </summary>
        public static string SERVER_STATUS_REPORT {
            get {
                return ResourceManager.GetString("SERVER_STATUS_REPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The selected servers failed when asked for their capabilities.  Please select different servers. ähnelt.
        /// </summary>
        public static string SERVER_STATUS_REPORT_CAPABILITIES_FAILED {
            get {
                return ResourceManager.GetString("SERVER_STATUS_REPORT_CAPABILITIES_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Querying server capabilities... ähnelt.
        /// </summary>
        public static string SERVER_STATUS_REPORT_GET_CAPABILITIES {
            get {
                return ResourceManager.GetString("SERVER_STATUS_REPORT_GET_CAPABILITIES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The current time on the pool master is: {0} ähnelt.
        /// </summary>
        public static string SERVER_TIME {
            get {
                return ResourceManager.GetString("SERVER_TIME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This version of [XenCenter] supports [XenServer] [BRANDING_VERSION_6_2] onwards. ähnelt.
        /// </summary>
        public static string SERVER_TOO_OLD {
            get {
                return ResourceManager.GetString("SERVER_TOO_OLD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use an earlier version of [XenCenter] to manage this server. ähnelt.
        /// </summary>
        public static string SERVER_TOO_OLD_SOLUTION {
            get {
                return ResourceManager.GetString("SERVER_TOO_OLD_SOLUTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die server &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string SERVER_X {
            get {
                return ResourceManager.GetString("SERVER_X", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Servers ähnelt.
        /// </summary>
        public static string SERVERS {
            get {
                return ResourceManager.GetString("SERVERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Servers and VMs ähnelt.
        /// </summary>
        public static string SERVERS_AND_VMS {
            get {
                return ResourceManager.GetString("SERVERS_AND_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Servers, VMs, Custom Templates and all SRs ähnelt.
        /// </summary>
        public static string SERVERS_AND_VMS_AND_CUSTOM_TEMPLATES_AND_ALL_SRS {
            get {
                return ResourceManager.GetString("SERVERS_AND_VMS_AND_CUSTOM_TEMPLATES_AND_ALL_SRS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Servers, VMs, Custom Templates and Remote SRs ähnelt.
        /// </summary>
        public static string SERVERS_AND_VMS_AND_CUSTOM_TEMPLATES_AND_REMOTE_SRS {
            get {
                return ResourceManager.GetString("SERVERS_AND_VMS_AND_CUSTOM_TEMPLATES_AND_REMOTE_SRS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bond load balancing changed ähnelt.
        /// </summary>
        public static string SET_BOND_HASHING_ALGORITHM_ACTION_END {
            get {
                return ResourceManager.GetString("SET_BOND_HASHING_ALGORITHM_ACTION_END", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changing bond load balancing ähnelt.
        /// </summary>
        public static string SET_BOND_HASHING_ALGORITHM_ACTION_START {
            get {
                return ResourceManager.GetString("SET_BOND_HASHING_ALGORITHM_ACTION_START", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change bond load balancing ähnelt.
        /// </summary>
        public static string SET_BOND_HASHING_ALGORITHM_ACTION_TITLE {
            get {
                return ResourceManager.GetString("SET_BOND_HASHING_ALGORITHM_ACTION_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bond mode changed ähnelt.
        /// </summary>
        public static string SET_BOND_MODE_ACTION_END {
            get {
                return ResourceManager.GetString("SET_BOND_MODE_ACTION_END", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changing bond mode ähnelt.
        /// </summary>
        public static string SET_BOND_MODE_ACTION_START {
            get {
                return ResourceManager.GetString("SET_BOND_MODE_ACTION_START", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change bond mode ähnelt.
        /// </summary>
        public static string SET_BOND_MODE_ACTION_TITLE {
            get {
                return ResourceManager.GetString("SET_BOND_MODE_ACTION_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Setting GPU placement policy ähnelt.
        /// </summary>
        public static string SET_GPU_PLACEMENT_POLICY_ACTION_DESCRIPTION {
            get {
                return ResourceManager.GetString("SET_GPU_PLACEMENT_POLICY_ACTION_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die GPU placement policy set ähnelt.
        /// </summary>
        public static string SET_GPU_PLACEMENT_POLICY_ACTION_DONE {
            get {
                return ResourceManager.GetString("SET_GPU_PLACEMENT_POLICY_ACTION_DONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set GPU placement policy ähnelt.
        /// </summary>
        public static string SET_GPU_PLACEMENT_POLICY_ACTION_TITLE {
            get {
                return ResourceManager.GetString("SET_GPU_PLACEMENT_POLICY_ACTION_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die It is highly recommended you confirm this setting matches the MTU on related network &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string SET_MTU_ON_CHINS_UNDER_NETWORK {
            get {
                return ResourceManager.GetString("SET_MTU_ON_CHINS_UNDER_NETWORK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Setting StorageLink Credentials ähnelt.
        /// </summary>
        public static string SET_STORAGELINK_CREDS_ACTION_DESCRIPTION {
            get {
                return ResourceManager.GetString("SET_STORAGELINK_CREDS_ACTION_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set StorageLink Credentials ähnelt.
        /// </summary>
        public static string SET_STORAGELINK_CREDS_ACTION_TITLE {
            get {
                return ResourceManager.GetString("SET_STORAGELINK_CREDS_ACTION_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Setting StorageLink Credentials to &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string SET_STORAGELINK_CREDS_TO_POOL_ACTION_DESCRIPTION {
            get {
                return ResourceManager.GetString("SET_STORAGELINK_CREDS_TO_POOL_ACTION_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set StorageLink Credentials to &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string SET_STORAGELINK_CREDS_TO_POOL_ACTION_TITLE {
            get {
                return ResourceManager.GetString("SET_STORAGELINK_CREDS_TO_POOL_ACTION_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Setting security settings ähnelt.
        /// </summary>
        public static string SETTING_SECURITY_SETTINGS {
            get {
                return ResourceManager.GetString("SETTING_SECURITY_SETTINGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Setting VM properties ähnelt.
        /// </summary>
        public static string SETTING_VM_PROPERTIES {
            get {
                return ResourceManager.GetString("SETTING_VM_PROPERTIES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Setting VM startup options ähnelt.
        /// </summary>
        public static string SETTING_VM_STARTUP_OPTIONS {
            get {
                return ResourceManager.GetString("SETTING_VM_STARTUP_OPTIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Setting VM startup options on {0} ähnelt.
        /// </summary>
        public static string SETTING_VM_STARTUP_OPTIONS_ON_X {
            get {
                return ResourceManager.GetString("SETTING_VM_STARTUP_OPTIONS_ON_X", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Settings ähnelt.
        /// </summary>
        public static string SETTINGS {
            get {
                return ResourceManager.GetString("SETTINGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Severity ähnelt.
        /// </summary>
        public static string SEVERITY {
            get {
                return ResourceManager.GetString("SEVERITY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Unknown ähnelt.
        /// </summary>
        public static string SEVERITY_FILTER_0 {
            get {
                return ResourceManager.GetString("SEVERITY_FILTER_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown severity ähnelt.
        /// </summary>
        public static string SEVERITY_FILTER_0_DETAIL {
            get {
                return ResourceManager.GetString("SEVERITY_FILTER_0_DETAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Critical ähnelt.
        /// </summary>
        public static string SEVERITY_FILTER_1 {
            get {
                return ResourceManager.GetString("SEVERITY_FILTER_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Data loss imminent ähnelt.
        /// </summary>
        public static string SEVERITY_FILTER_1_DETAIL {
            get {
                return ResourceManager.GetString("SEVERITY_FILTER_1_DETAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Major ähnelt.
        /// </summary>
        public static string SEVERITY_FILTER_2 {
            get {
                return ResourceManager.GetString("SEVERITY_FILTER_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Service loss imminent ähnelt.
        /// </summary>
        public static string SEVERITY_FILTER_2_DETAIL {
            get {
                return ResourceManager.GetString("SEVERITY_FILTER_2_DETAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Warning ähnelt.
        /// </summary>
        public static string SEVERITY_FILTER_3 {
            get {
                return ResourceManager.GetString("SEVERITY_FILTER_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Service degraded ähnelt.
        /// </summary>
        public static string SEVERITY_FILTER_3_DETAIL {
            get {
                return ResourceManager.GetString("SEVERITY_FILTER_3_DETAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mi&amp;nor ähnelt.
        /// </summary>
        public static string SEVERITY_FILTER_4 {
            get {
                return ResourceManager.GetString("SEVERITY_FILTER_4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Service recovered ähnelt.
        /// </summary>
        public static string SEVERITY_FILTER_4_DETAIL {
            get {
                return ResourceManager.GetString("SEVERITY_FILTER_4_DETAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Information ähnelt.
        /// </summary>
        public static string SEVERITY_FILTER_5 {
            get {
                return ResourceManager.GetString("SEVERITY_FILTER_5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Informational ähnelt.
        /// </summary>
        public static string SEVERITY_FILTER_5_DETAIL {
            get {
                return ResourceManager.GetString("SEVERITY_FILTER_5_DETAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shadow memory multiplier: {0} ähnelt.
        /// </summary>
        public static string SHADOW_MEMORY_MULTIPLIER {
            get {
                return ResourceManager.GetString("SHADOW_MEMORY_MULTIPLIER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value should be a number greater than or equal to 1.0 ähnelt.
        /// </summary>
        public static string SHADOW_MEMORY_MULTIPLIER_VALUE {
            get {
                return ResourceManager.GetString("SHADOW_MEMORY_MULTIPLIER_VALUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Share ähnelt.
        /// </summary>
        public static string SHARE_SR {
            get {
                return ResourceManager.GetString("SHARE_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shared ähnelt.
        /// </summary>
        public static string SHARED {
            get {
                return ResourceManager.GetString("SHARED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show Details ähnelt.
        /// </summary>
        public static string SHOW_DETAILS {
            get {
                return ResourceManager.GetString("SHOW_DETAILS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show Run History ähnelt.
        /// </summary>
        public static string SHOW_RUN_HISTORY {
            get {
                return ResourceManager.GetString("SHOW_RUN_HISTORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} are pool masters. It is strongly recommended to nominate a new master for each affected pool before proceeding. ähnelt.
        /// </summary>
        public static string SHUT_DOWN_POOL_MASTER_MULTIPLE {
            get {
                return ResourceManager.GetString("SHUT_DOWN_POOL_MASTER_MULTIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} is the pool master. It is strongly recommended to nominate a new master for the pool before proceeding. ähnelt.
        /// </summary>
        public static string SHUT_DOWN_POOL_MASTER_SINGLE {
            get {
                return ResourceManager.GetString("SHUT_DOWN_POOL_MASTER_SINGLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shut down ähnelt.
        /// </summary>
        public static string SHUTDOWN {
            get {
                return ResourceManager.GetString("SHUTDOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You need to shut down or suspend the VM before exporting it. ähnelt.
        /// </summary>
        public static string SHUTDOWN_BEFORE_EXPORT {
            get {
                return ResourceManager.GetString("SHUTDOWN_BEFORE_EXPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shut down VM ähnelt.
        /// </summary>
        public static string SHUTDOWN_VM {
            get {
                return ResourceManager.GetString("SHUTDOWN_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shutting down specified VMs ähnelt.
        /// </summary>
        public static string SHUTTING_DOWN_SPECIFIED_VMS {
            get {
                return ResourceManager.GetString("SHUTTING_DOWN_SPECIFIED_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shutting down VM {0} out of {1} ähnelt.
        /// </summary>
        public static string SHUTTING_DOWN_VM_OUT_OF {
            get {
                return ResourceManager.GetString("SHUTTING_DOWN_VM_OUT_OF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Applying digital signature to appliance... ähnelt.
        /// </summary>
        public static string SIGNING_APPLIANCE {
            get {
                return ResourceManager.GetString("SIGNING_APPLIANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Single-server private network ähnelt.
        /// </summary>
        public static string SINGLE_SERVER_PRIVATE_NETWORK {
            get {
                return ResourceManager.GetString("SINGLE_SERVER_PRIVATE_NETWORK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Size ähnelt.
        /// </summary>
        public static string SIZE {
            get {
                return ResourceManager.GetString("SIZE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Size and Location ähnelt.
        /// </summary>
        public static string SIZE_AND_LOCATION {
            get {
                return ResourceManager.GetString("SIZE_AND_LOCATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die size is ähnelt.
        /// </summary>
        public static string SIZE_IS {
            get {
                return ResourceManager.GetString("SIZE_IS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}, {1} ähnelt.
        /// </summary>
        public static string SIZE_LOCATION_SUB {
            get {
                return ResourceManager.GetString("SIZE_LOCATION_SUB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Negligible ähnelt.
        /// </summary>
        public static string SIZE_NEGLIGIBLE {
            get {
                return ResourceManager.GetString("SIZE_NEGLIGIBLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Skip This Server ähnelt.
        /// </summary>
        public static string SKIP_SERVER {
            get {
                return ResourceManager.GetString("SKIP_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Slack: ähnelt.
        /// </summary>
        public static string SLACK_LABEL {
            get {
                return ResourceManager.GetString("SLACK_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server &apos;{0}&apos; is a member of pool &apos;{1}&apos; and is already connected. ähnelt.
        /// </summary>
        public static string SLAVE_ALREADY_CONNECTED {
            get {
                return ResourceManager.GetString("SLAVE_ALREADY_CONNECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server &apos;{0}&apos; is in a pool.  To connect to a pool, you must connect to the pool master.
        ///Do you want to connect to the pool master &apos;{1}&apos;? ähnelt.
        /// </summary>
        public static string SLAVE_CONNECTION_ERROR {
            get {
                return ResourceManager.GetString("SLAVE_CONNECTION_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die smaller than ähnelt.
        /// </summary>
        public static string SMALLER_THAN {
            get {
                return ResourceManager.GetString("SMALLER_THAN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This SMB ISO storage is already attached to &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string SMB_ISO_STORAGE_ALREADY_ATTACHED {
            get {
                return ResourceManager.GetString("SMB_ISO_STORAGE_ALREADY_ATTACHED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} (snapshot) ähnelt.
        /// </summary>
        public static string SNAPSHOT_BRACKETS {
            get {
                return ResourceManager.GetString("SNAPSHOT_BRACKETS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Created on {0} ähnelt.
        /// </summary>
        public static string SNAPSHOT_CREATED_ON {
            get {
                return ResourceManager.GetString("SNAPSHOT_CREATED_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Snapshot &apos;{0}&apos; deleted. ähnelt.
        /// </summary>
        public static string SNAPSHOT_DELETED {
            get {
                return ResourceManager.GetString("SNAPSHOT_DELETED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleting snapshots ... ähnelt.
        /// </summary>
        public static string SNAPSHOT_DELETING {
            get {
                return ResourceManager.GetString("SNAPSHOT_DELETING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Snapshot Schedule ähnelt.
        /// </summary>
        public static string SNAPSHOT_FREQUENCY {
            get {
                return ResourceManager.GetString("SNAPSHOT_FREQUENCY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die When do you want snapshots to be taken? ähnelt.
        /// </summary>
        public static string SNAPSHOT_FREQUENCY_TITLE {
            get {
                return ResourceManager.GetString("SNAPSHOT_FREQUENCY_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Snapshot General Properties ähnelt.
        /// </summary>
        public static string SNAPSHOT_GENERAL_TAB_TITLE {
            get {
                return ResourceManager.GetString("SNAPSHOT_GENERAL_TAB_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Snapshot of ähnelt.
        /// </summary>
        public static string SNAPSHOT_OF {
            get {
                return ResourceManager.GetString("SNAPSHOT_OF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} (snapshot of &apos;{1}&apos; {2}) ähnelt.
        /// </summary>
        public static string SNAPSHOT_OF_TITLE {
            get {
                return ResourceManager.GetString("SNAPSHOT_OF_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Snapshot revert ähnelt.
        /// </summary>
        public static string SNAPSHOT_REVERT {
            get {
                return ResourceManager.GetString("SNAPSHOT_REVERT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Taken on: {0} ähnelt.
        /// </summary>
        public static string SNAPSHOT_TAKEN_ON {
            get {
                return ResourceManager.GetString("SNAPSHOT_TAKEN_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Snapshot taken on {0} ähnelt.
        /// </summary>
        public static string SNAPSHOT_TAKEN_ON_2 {
            get {
                return ResourceManager.GetString("SNAPSHOT_TAKEN_ON_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Snapshot tree view ähnelt.
        /// </summary>
        public static string SNAPSHOT_TREE_VIEW {
            get {
                return ResourceManager.GetString("SNAPSHOT_TREE_VIEW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Snapshot Type ähnelt.
        /// </summary>
        public static string SNAPSHOT_TYPE {
            get {
                return ResourceManager.GetString("SNAPSHOT_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die What type of snapshot do you want to use for scheduled snapshots? ähnelt.
        /// </summary>
        public static string SNAPSHOT_TYPE_TITLE {
            get {
                return ResourceManager.GetString("SNAPSHOT_TYPE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Snapshots ähnelt.
        /// </summary>
        public static string SNAPSHOTS {
            get {
                return ResourceManager.GetString("SNAPSHOTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Snapshots deleted. ähnelt.
        /// </summary>
        public static string SNAPSHOTS_DELETED {
            get {
                return ResourceManager.GetString("SNAPSHOTS_DELETED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleting snapshots ähnelt.
        /// </summary>
        public static string SNAPSHOTS_DELETING {
            get {
                return ResourceManager.GetString("SNAPSHOTS_DELETING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There are currently no snapshots of this VM. To create a snapshot, click Take Snapshot. ähnelt.
        /// </summary>
        public static string SNAPSHOTS_EMPTY {
            get {
                return ResourceManager.GetString("SNAPSHOTS_EMPTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Virtual Machine Snapshots ähnelt.
        /// </summary>
        public static string SNAPSHOTS_PAGE_TITLE {
            get {
                return ResourceManager.GetString("SNAPSHOTS_PAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} snapshots selected ähnelt.
        /// </summary>
        public static string SNAPSHOTS_SELECTED {
            get {
                return ResourceManager.GetString("SNAPSHOTS_SELECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Snapshot created ähnelt.
        /// </summary>
        public static string SNAPSHOTTED {
            get {
                return ResourceManager.GetString("SNAPSHOTTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating a snapshot... ähnelt.
        /// </summary>
        public static string SNAPSHOTTING {
            get {
                return ResourceManager.GetString("SNAPSHOTTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer] build number ähnelt.
        /// </summary>
        public static string SOFTWARE_VERSION_BUILD_NUMBER {
            get {
                return ResourceManager.GetString("SOFTWARE_VERSION_BUILD_NUMBER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer] build date ähnelt.
        /// </summary>
        public static string SOFTWARE_VERSION_DATE {
            get {
                return ResourceManager.GetString("SOFTWARE_VERSION_DATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer] version ähnelt.
        /// </summary>
        public static string SOFTWARE_VERSION_PRODUCT_VERSION {
            get {
                return ResourceManager.GetString("SOFTWARE_VERSION_PRODUCT_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Try again using a correct user name and password. ähnelt.
        /// </summary>
        public static string SOLUTION_AUTHENTICATION {
            get {
                return ResourceManager.GetString("SOLUTION_AUTHENTICATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check that the proxy server on &apos;{0}&apos; is configured correctly and [XenCenter]&apos;s connection settings are correct and try again. ähnelt.
        /// </summary>
        public static string SOLUTION_CHECK_PROXY {
            get {
                return ResourceManager.GetString("SOLUTION_CHECK_PROXY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check that [XenServer] is configured correctly on &apos;{0}&apos; and try again. ähnelt.
        /// </summary>
        public static string SOLUTION_CHECK_XENSERVER {
            get {
                return ResourceManager.GetString("SOLUTION_CHECK_XENSERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check the proxy settings and that [XenServer] is configured correctly on &apos;{0}&apos; and try again. ähnelt.
        /// </summary>
        public static string SOLUTION_CHECK_XENSERVER_WITH_PROXY {
            get {
                return ResourceManager.GetString("SOLUTION_CHECK_XENSERVER_WITH_PROXY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please wait and then try again. ähnelt.
        /// </summary>
        public static string SOLUTION_HOST_STILL_BOOTING {
            get {
                return ResourceManager.GetString("SOLUTION_HOST_STILL_BOOTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Try again with a more privileged user account. ähnelt.
        /// </summary>
        public static string SOLUTION_NO_PERMISSION {
            get {
                return ResourceManager.GetString("SOLUTION_NO_PERMISSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter a valid hostname or IP address and try again. ähnelt.
        /// </summary>
        public static string SOLUTION_NOT_FOUND {
            get {
                return ResourceManager.GetString("SOLUTION_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  ähnelt.
        /// </summary>
        public static string SOLUTION_UNKNOWN {
            get {
                return ResourceManager.GetString("SOLUTION_UNKNOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Some errors were encountered. See the [XenCenter] log for more information. ähnelt.
        /// </summary>
        public static string SOME_ERRORS_ENCOUNTERED {
            get {
                return ResourceManager.GetString("SOME_ERRORS_ENCOUNTERED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  -  ähnelt.
        /// </summary>
        public static string SPACED_HYPHEN {
            get {
                return ResourceManager.GetString("SPACED_HYPHEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Speed ähnelt.
        /// </summary>
        public static string SPEED {
            get {
                return ResourceManager.GetString("SPEED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Storage Repository ähnelt.
        /// </summary>
        public static string SR {
            get {
                return ResourceManager.GetString("SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There is currently an action in progress on this SR. ähnelt.
        /// </summary>
        public static string SR_ACTION_IN_PROGRESS {
            get {
                return ResourceManager.GetString("SR_ACTION_IN_PROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This SR cannot be destroyed with [XenCenter]. ähnelt.
        /// </summary>
        public static string SR_CANNOT_BE_DESTROYED_WITH_XC {
            get {
                return ResourceManager.GetString("SR_CANNOT_BE_DESTROYED_WITH_XC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This SR cannot be detached with [XenCenter]. ähnelt.
        /// </summary>
        public static string SR_CANNOT_BE_DETACHED_WITH_XC {
            get {
                return ResourceManager.GetString("SR_CANNOT_BE_DETACHED_WITH_XC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This SR cannot be forgotten with [XenCenter]. ähnelt.
        /// </summary>
        public static string SR_CANNOT_BE_FORGOTTEN_WITH_XC {
            get {
                return ResourceManager.GetString("SR_CANNOT_BE_FORGOTTEN_WITH_XC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This storage repository cannot be seen from {0} ähnelt.
        /// </summary>
        public static string SR_CANNOT_BE_SEEN {
            get {
                return ResourceManager.GetString("SR_CANNOT_BE_SEEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The SR could not be contacted. ähnelt.
        /// </summary>
        public static string SR_COULD_NOT_BE_CONTACTED {
            get {
                return ResourceManager.GetString("SR_COULD_NOT_BE_CONTACTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The SR is currently detached. ähnelt.
        /// </summary>
        public static string SR_DETACHED {
            get {
                return ResourceManager.GetString("SR_DETACHED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initial allocation: {0}
        ///Incremental allocation: {1} ähnelt.
        /// </summary>
        public static string SR_DISK_SPACE_ALLOCATION {
            get {
                return ResourceManager.GetString("SR_DISK_SPACE_ALLOCATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This SR does not need to be upgraded. ähnelt.
        /// </summary>
        public static string SR_DOES_NOT_NEED_UPGRADE {
            get {
                return ResourceManager.GetString("SR_DOES_NOT_NEED_UPGRADE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SR {0} forgotten ähnelt.
        /// </summary>
        public static string SR_FORGOTTEN_0 {
            get {
                return ResourceManager.GetString("SR_FORGOTTEN_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Storage General Properties ähnelt.
        /// </summary>
        public static string SR_GENERAL_TAB_TITLE {
            get {
                return ResourceManager.GetString("SR_GENERAL_TAB_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This SR contains running VMs. ähnelt.
        /// </summary>
        public static string SR_HAS_RUNNING_VMS {
            get {
                return ResourceManager.GetString("SR_HAS_RUNNING_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This storage repository is broken ähnelt.
        /// </summary>
        public static string SR_IS_BROKEN {
            get {
                return ResourceManager.GetString("SR_IS_BROKEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VMs without a home server cannot have disks on local storage ähnelt.
        /// </summary>
        public static string SR_IS_LOCAL {
            get {
                return ResourceManager.GetString("SR_IS_LOCAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disk size ({0}) exceeds SR size ({1}) ähnelt.
        /// </summary>
        public static string SR_PICKER_DISK_TOO_BIG {
            get {
                return ResourceManager.GetString("SR_PICKER_DISK_TOO_BIG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} required when only {1} available ähnelt.
        /// </summary>
        public static string SR_PICKER_INSUFFICIENT_SPACE {
            get {
                return ResourceManager.GetString("SR_PICKER_INSUFFICIENT_SPACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Incremental allocation limits are as follows: 
        ///The lower limit: SR size / {0} (no lower than {1})
        ///The upper limit: SR size / {2} ähnelt.
        /// </summary>
        public static string SR_QUANTUM_ALLOCATION_LIMITS_INFO {
            get {
                return ResourceManager.GetString("SR_QUANTUM_ALLOCATION_LIMITS_INFO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scanning SR ähnelt.
        /// </summary>
        public static string SR_REFRESH_ACTION_DESC {
            get {
                return ResourceManager.GetString("SR_REFRESH_ACTION_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scanning SR &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string SR_REFRESH_ACTION_TITLE {
            get {
                return ResourceManager.GetString("SR_REFRESH_ACTION_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reverting {0} to unshared completed. ähnelt.
        /// </summary>
        public static string SR_SHARE_REVERTED {
            get {
                return ResourceManager.GetString("SR_SHARE_REVERTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unable to share {0}. Reverting to original state. ähnelt.
        /// </summary>
        public static string SR_SHARE_REVERTING {
            get {
                return ResourceManager.GetString("SR_SHARE_REVERTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reverting {0} to unshared. ähnelt.
        /// </summary>
        public static string SR_SHARE_REVERTING2 {
            get {
                return ResourceManager.GetString("SR_SHARE_REVERTING2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Setting {0} as shared. ähnelt.
        /// </summary>
        public static string SR_SHARE_SETTING {
            get {
                return ResourceManager.GetString("SR_SHARE_SETTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} used of {1} total ({2} allocated) ähnelt.
        /// </summary>
        public static string SR_SIZE_USED {
            get {
                return ResourceManager.GetString("SR_SIZE_USED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot reclaim freed space, because the SR is detached. ähnelt.
        /// </summary>
        public static string SR_TRIM_NO_STORAGE_HOST_ERROR {
            get {
                return ResourceManager.GetString("SR_TRIM_NO_STORAGE_HOST_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unable to connect to iSCSI target ähnelt.
        /// </summary>
        public static string SR_UNABLE_TO_CONNECT_TO_SCSI_TARGET {
            get {
                return ResourceManager.GetString("SR_UNABLE_TO_CONNECT_TO_SCSI_TARGET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SR {0} on {1} ähnelt.
        /// </summary>
        public static string SR_X_ON_Y {
            get {
                return ResourceManager.GetString("SR_X_ON_Y", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Active ähnelt.
        /// </summary>
        public static string SRPANEL_ACTIVE {
            get {
                return ResourceManager.GetString("SRPANEL_ACTIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} free of {1} ähnelt.
        /// </summary>
        public static string SRPICKER_DISK_FREE {
            get {
                return ResourceManager.GetString("SRPICKER_DISK_FREE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Local storage must belong to resident host ähnelt.
        /// </summary>
        public static string SRPICKER_ERROR_LOCAL_SR_MUST_BE_RESIDENT_HOSTS {
            get {
                return ResourceManager.GetString("SRPICKER_ERROR_LOCAL_SR_MUST_BE_RESIDENT_HOSTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VDI has disappeared... ähnelt.
        /// </summary>
        public static string SRPICKER_NETWORK_GONE {
            get {
                return ResourceManager.GetString("SRPICKER_NETWORK_GONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This storage repository is full ähnelt.
        /// </summary>
        public static string SRPICKER_SR_FULL {
            get {
                return ResourceManager.GetString("SRPICKER_SR_FULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SRs forgotten ähnelt.
        /// </summary>
        public static string SRS_FORGOTTEN {
            get {
                return ResourceManager.GetString("SRS_FORGOTTEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SMB ISO library ähnelt.
        /// </summary>
        public static string SRWIZARD_CIFS_LIBRARY {
            get {
                return ResourceManager.GetString("SRWIZARD_CIFS_LIBRARY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SMB virtual storage ähnelt.
        /// </summary>
        public static string SRWIZARD_CIFS_STORAGE {
            get {
                return ResourceManager.GetString("SRWIZARD_CIFS_STORAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die iSCSI virtual disk storage ähnelt.
        /// </summary>
        public static string SRWIZARD_ISCSI_STORAGE {
            get {
                return ResourceManager.GetString("SRWIZARD_ISCSI_STORAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NFS ISO library ähnelt.
        /// </summary>
        public static string SRWIZARD_NFS_LIBRARY {
            get {
                return ResourceManager.GetString("SRWIZARD_NFS_LIBRARY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NFS virtual disk storage ähnelt.
        /// </summary>
        public static string SRWIZARD_NFS_STORAGE {
            get {
                return ResourceManager.GetString("SRWIZARD_NFS_STORAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} virtual disk storage ähnelt.
        /// </summary>
        public static string SRWIZARD_STORAGE_NAME {
            get {
                return ResourceManager.GetString("SRWIZARD_STORAGE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer product] &amp;Standard Per-Socket ({0} required) ähnelt.
        /// </summary>
        public static string STANDARD_PERSOCKET_LICENSES_X_REQUIRED {
            get {
                return ResourceManager.GetString("STANDARD_PERSOCKET_LICENSES_X_REQUIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start host ähnelt.
        /// </summary>
        public static string START_HOST {
            get {
                return ResourceManager.GetString("START_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start in Recovery Mode ähnelt.
        /// </summary>
        public static string START_IN_RECOVERY_MODE {
            get {
                return ResourceManager.GetString("START_IN_RECOVERY_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start On ähnelt.
        /// </summary>
        public static string START_ON {
            get {
                return ResourceManager.GetString("START_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start shut down VMs ähnelt.
        /// </summary>
        public static string START_SHUTDOWN_VMS {
            get {
                return ResourceManager.GetString("START_SHUTDOWN_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start time ähnelt.
        /// </summary>
        public static string START_TIME {
            get {
                return ResourceManager.GetString("START_TIME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start Options ähnelt.
        /// </summary>
        public static string START_UP_OPTIONS {
            get {
                return ResourceManager.GetString("START_UP_OPTIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start &amp;Upgrade ähnelt.
        /// </summary>
        public static string START_UPGRADE {
            get {
                return ResourceManager.GetString("START_UPGRADE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Started ähnelt.
        /// </summary>
        public static string STARTED {
            get {
                return ResourceManager.GetString("STARTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Started VM in recovery mode ähnelt.
        /// </summary>
        public static string STARTED_IN_RECOVERY_MODE {
            get {
                return ResourceManager.GetString("STARTED_IN_RECOVERY_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Started shut down VMs ähnelt.
        /// </summary>
        public static string STARTED_SHUTDOWN_VMS {
            get {
                return ResourceManager.GetString("STARTED_SHUTDOWN_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Starting VM in recovery mode ähnelt.
        /// </summary>
        public static string STARTING_IN_RECOVERY_MODE {
            get {
                return ResourceManager.GetString("STARTING_IN_RECOVERY_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Starting VM {0} in recovery mode ähnelt.
        /// </summary>
        public static string STARTING_IN_RECOVERY_MODE_TITLE {
            get {
                return ResourceManager.GetString("STARTING_IN_RECOVERY_MODE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Starting shut down VMs ähnelt.
        /// </summary>
        public static string STARTING_SHUTDOWN_VMS {
            get {
                return ResourceManager.GetString("STARTING_SHUTDOWN_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Starting VM ähnelt.
        /// </summary>
        public static string STARTING_VM {
            get {
                return ResourceManager.GetString("STARTING_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Starting VM ähnelt.
        /// </summary>
        public static string STARTING_VM_MESSAGEBOX_TITLE {
            get {
                return ResourceManager.GetString("STARTING_VM_MESSAGEBOX_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Starting VMs ähnelt.
        /// </summary>
        public static string STARTING_VMS_MESSAGEBOX_TITLE {
            get {
                return ResourceManager.GetString("STARTING_VMS_MESSAGEBOX_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die starts with ähnelt.
        /// </summary>
        public static string STARTS_WITH {
            get {
                return ResourceManager.GetString("STARTS_WITH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Static maximum ähnelt.
        /// </summary>
        public static string STATIC_MAX {
            get {
                return ResourceManager.GetString("STATIC_MAX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Static maximum ähnelt.
        /// </summary>
        public static string STATIC_MAX_AMP {
            get {
                return ResourceManager.GetString("STATIC_MAX_AMP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Static maximum: ähnelt.
        /// </summary>
        public static string STATIC_MAX_COLON {
            get {
                return ResourceManager.GetString("STATIC_MAX_COLON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Status ähnelt.
        /// </summary>
        public static string STATUS {
            get {
                return ResourceManager.GetString("STATUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Canceled ähnelt.
        /// </summary>
        public static string STATUS_FILTER_CANCEL {
            get {
                return ResourceManager.GetString("STATUS_FILTER_CANCEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Complete ähnelt.
        /// </summary>
        public static string STATUS_FILTER_COMPLETE {
            get {
                return ResourceManager.GetString("STATUS_FILTER_COMPLETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error ähnelt.
        /// </summary>
        public static string STATUS_FILTER_ERROR {
            get {
                return ResourceManager.GetString("STATUS_FILTER_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die In progress ähnelt.
        /// </summary>
        public static string STATUS_FILTER_IN_PROGRESS {
            get {
                return ResourceManager.GetString("STATUS_FILTER_IN_PROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter your MyCitrix credentials (see {0}). These credentials will only be used to authenticate with [Citrix] Insight Services once and will not be stored on this machine or on your server. ähnelt.
        /// </summary>
        public static string STATUS_REPORT_ENTER_CREDENTIALS_MESSAGE {
            get {
                return ResourceManager.GetString("STATUS_REPORT_ENTER_CREDENTIALS_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There was an error while packaging the server status report. Only a partial report may be available ähnelt.
        /// </summary>
        public static string STATUS_REPORT_ZIP_FAILED {
            get {
                return ResourceManager.GetString("STATUS_REPORT_ZIP_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Stopped ähnelt.
        /// </summary>
        public static string STOPPED {
            get {
                return ResourceManager.GetString("STOPPED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Storage Adapter ähnelt.
        /// </summary>
        public static string STORAGE_ADAPTER {
            get {
                return ResourceManager.GetString("STORAGE_ADAPTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 7 (Highest) ähnelt.
        /// </summary>
        public static string STORAGE_BEST {
            get {
                return ResourceManager.GetString("STORAGE_BEST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Device Position ähnelt.
        /// </summary>
        public static string STORAGE_DEVICE_POSITION {
            get {
                return ResourceManager.GetString("STORAGE_DEVICE_POSITION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disk  ähnelt.
        /// </summary>
        public static string STORAGE_DISK {
            get {
                return ResourceManager.GetString("STORAGE_DISK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The SR &apos;{0}&apos; is in use on &apos;{1}&apos; and cannot be introduced.  You must detach the SR from &apos;{1}&apos; before using it again. ähnelt.
        /// </summary>
        public static string STORAGE_IN_USE {
            get {
                return ResourceManager.GetString("STORAGE_IN_USE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Device Path ähnelt.
        /// </summary>
        public static string STORAGE_PANEL_DEVICE_PATH {
            get {
                return ResourceManager.GetString("STORAGE_PANEL_DEVICE_PATH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;unknown&gt; ähnelt.
        /// </summary>
        public static string STORAGE_PANEL_UNKNOWN {
            get {
                return ResourceManager.GetString("STORAGE_PANEL_UNKNOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Storage Pool ähnelt.
        /// </summary>
        public static string STORAGE_POOL {
            get {
                return ResourceManager.GetString("STORAGE_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Priority ähnelt.
        /// </summary>
        public static string STORAGE_PRIORITY {
            get {
                return ResourceManager.GetString("STORAGE_PRIORITY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose storage provisioning method ähnelt.
        /// </summary>
        public static string STORAGE_PROVISIONING_METHOD_TITLE {
            get {
                return ResourceManager.GetString("STORAGE_PROVISIONING_METHOD_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Storage Provisioning Settings ähnelt.
        /// </summary>
        public static string STORAGE_PROVISIONING_SETTINGS {
            get {
                return ResourceManager.GetString("STORAGE_PROVISIONING_SETTINGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Read Only ähnelt.
        /// </summary>
        public static string STORAGE_READ_ONLY {
            get {
                return ResourceManager.GetString("STORAGE_READ_ONLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die storage repository &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string STORAGE_REPOSITORY_X {
            get {
                return ResourceManager.GetString("STORAGE_REPOSITORY_X", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Storage Repository ähnelt.
        /// </summary>
        public static string STORAGE_SR {
            get {
                return ResourceManager.GetString("STORAGE_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Storage System ähnelt.
        /// </summary>
        public static string STORAGE_SYSTEM {
            get {
                return ResourceManager.GetString("STORAGE_SYSTEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Storage Repositories ähnelt.
        /// </summary>
        public static string STORAGE_TAB_TITLE {
            get {
                return ResourceManager.GetString("STORAGE_TAB_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Type ähnelt.
        /// </summary>
        public static string STORAGE_TYPE {
            get {
                return ResourceManager.GetString("STORAGE_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Storage Volume ähnelt.
        /// </summary>
        public static string STORAGE_VOLUME {
            get {
                return ResourceManager.GetString("STORAGE_VOLUME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 0 (Lowest) ähnelt.
        /// </summary>
        public static string STORAGE_WORST {
            get {
                return ResourceManager.GetString("STORAGE_WORST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} free of {1} ähnelt.
        /// </summary>
        public static string STORAGELINK_POOL_DISK_SPACE {
            get {
                return ResourceManager.GetString("STORAGELINK_POOL_DISK_SPACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There is a StorageLink Gateway SR that needs to be reattached. ähnelt.
        /// </summary>
        public static string STORAGELINK_SR_NEEDS_REATTACH {
            get {
                return ResourceManager.GetString("STORAGELINK_SR_NEEDS_REATTACH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die StorageLink SR status ähnelt.
        /// </summary>
        public static string STORAGELINK_UPGRADE_TEST {
            get {
                return ResourceManager.GetString("STORAGELINK_UPGRADE_TEST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Storage Pools ähnelt.
        /// </summary>
        public static string STORAGEPOOLS {
            get {
                return ResourceManager.GetString("STORAGEPOOLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Storage Volumes ähnelt.
        /// </summary>
        public static string STORAGEVOLUMES {
            get {
                return ResourceManager.GetString("STORAGEVOLUMES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} {1} ähnelt.
        /// </summary>
        public static string STRING_SPACE_STRING {
            get {
                return ResourceManager.GetString("STRING_SPACE_STRING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ,  ähnelt.
        /// </summary>
        public static string STRINGIFY_LIST_INNERSEP {
            get {
                return ResourceManager.GetString("STRINGIFY_LIST_INNERSEP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  and  ähnelt.
        /// </summary>
        public static string STRINGIFY_LIST_LASTSEP {
            get {
                return ResourceManager.GetString("STRINGIFY_LIST_LASTSEP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die succeeded ähnelt.
        /// </summary>
        public static string SUCCEEDED {
            get {
                return ResourceManager.GetString("SUCCEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sunday ähnelt.
        /// </summary>
        public static string SUNDAY_LONG {
            get {
                return ResourceManager.GetString("SUNDAY_LONG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sun ähnelt.
        /// </summary>
        public static string SUNDAY_SHORT {
            get {
                return ResourceManager.GetString("SUNDAY_SHORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} (version {1}) ähnelt.
        /// </summary>
        public static string SUPP_PACK_DESCRIPTION {
            get {
                return ResourceManager.GetString("SUPP_PACK_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed to install supplemental pack &apos;{0}&apos; on &apos;{1}&apos;. ähnelt.
        /// </summary>
        public static string SUPP_PACK_INSTALL_FAILED {
            get {
                return ResourceManager.GetString("SUPP_PACK_INSTALL_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}
        ///
        ///Refer to the &quot;[XenServer product] Administrator&apos;s Guide&quot; for instructions on how to manually install a supplemental pack on a server. ähnelt.
        /// </summary>
        public static string SUPP_PACK_INSTALL_FAILED_MORE_INFO {
            get {
                return ResourceManager.GetString("SUPP_PACK_INSTALL_FAILED_MORE_INFO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} (not installed on {1}) ähnelt.
        /// </summary>
        public static string SUPP_PACK_MISSING_ON {
            get {
                return ResourceManager.GetString("SUPP_PACK_MISSING_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Temporary virtual disk used for the installation of Supplemental Packs ähnelt.
        /// </summary>
        public static string SUPP_PACK_TEMP_VDI_DESCRIPTION {
            get {
                return ResourceManager.GetString("SUPP_PACK_TEMP_VDI_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die File uploaded to &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string SUPP_PACK_UPLOADED {
            get {
                return ResourceManager.GetString("SUPP_PACK_UPLOADED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Uploading file ähnelt.
        /// </summary>
        public static string SUPP_PACK_UPLOADING {
            get {
                return ResourceManager.GetString("SUPP_PACK_UPLOADING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Uploading to &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string SUPP_PACK_UPLOADING_TO {
            get {
                return ResourceManager.GetString("SUPP_PACK_UPLOADING_TO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} (not the same version on all hosts) ähnelt.
        /// </summary>
        public static string SUPP_PACK_VERSIONS_DIFFER {
            get {
                return ResourceManager.GetString("SUPP_PACK_VERSIONS_DIFFER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Suspend ähnelt.
        /// </summary>
        public static string SUSPEND {
            get {
                return ResourceManager.GetString("SUSPEND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Preparing to suspend and shut down VMs... ähnelt.
        /// </summary>
        public static string SUSPEND_SHUTDOWN_VMS_ACTION_DESC {
            get {
                return ResourceManager.GetString("SUSPEND_SHUTDOWN_VMS_ACTION_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Suspend specified VMs ähnelt.
        /// </summary>
        public static string SUSPEND_SPECIFIED_VMS {
            get {
                return ResourceManager.GetString("SUSPEND_SPECIFIED_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Suspend VM ähnelt.
        /// </summary>
        public static string SUSPEND_VM {
            get {
                return ResourceManager.GetString("SUSPEND_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Suspend VMs ähnelt.
        /// </summary>
        public static string SUSPEND_VMS {
            get {
                return ResourceManager.GetString("SUSPEND_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Suspended specified VMs ähnelt.
        /// </summary>
        public static string SUSPENDED_SPECIFIED_VMS {
            get {
                return ResourceManager.GetString("SUSPENDED_SPECIFIED_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Suspending specified VMs ähnelt.
        /// </summary>
        public static string SUSPENDING_SPECIFIED_VMS {
            get {
                return ResourceManager.GetString("SUSPENDING_SPECIFIED_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Suspending VM {0} out of {1} ähnelt.
        /// </summary>
        public static string SUSPENDING_VM_OUT_OF {
            get {
                return ResourceManager.GetString("SUSPENDING_VM_OUT_OF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Switch to an account with the required role and try again. ähnelt.
        /// </summary>
        public static string SWITCH_ROLE_DESC {
            get {
                return ResourceManager.GetString("SWITCH_ROLE_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Performing pool database sync ähnelt.
        /// </summary>
        public static string SYNCING_DATABASE {
            get {
                return ResourceManager.GetString("SYNCING_DATABASE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tags ähnelt.
        /// </summary>
        public static string TAGS {
            get {
                return ResourceManager.GetString("TAGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Take Snapshot ähnelt.
        /// </summary>
        public static string TAKE_SNAPSHOT {
            get {
                return ResourceManager.GetString("TAKE_SNAPSHOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Take snapshot is not currently allowed. ähnelt.
        /// </summary>
        public static string TAKE_SNAPSHOT_ERROR {
            get {
                return ResourceManager.GetString("TAKE_SNAPSHOT_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Target ähnelt.
        /// </summary>
        public static string TARGET {
            get {
                return ResourceManager.GetString("TARGET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Target Server ähnelt.
        /// </summary>
        public static string TARGET_SERVER {
            get {
                return ResourceManager.GetString("TARGET_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tell me more ... ähnelt.
        /// </summary>
        public static string TELL_ME_MORE {
            get {
                return ResourceManager.GetString("TELL_ME_MORE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Temperature (°C) ähnelt.
        /// </summary>
        public static string TEMPERATURE {
            get {
                return ResourceManager.GetString("TEMPERATURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Template ähnelt.
        /// </summary>
        public static string TEMPLATE {
            get {
                return ResourceManager.GetString("TEMPLATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Template from snapshot &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string TEMPLATE_FROM_SNAPSHOT_DEFAULT_NAME {
            get {
                return ResourceManager.GetString("TEMPLATE_FROM_SNAPSHOT_DEFAULT_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Template General Properties ähnelt.
        /// </summary>
        public static string TEMPLATE_GENERAL_TAB_TITLE {
            get {
                return ResourceManager.GetString("TEMPLATE_GENERAL_TAB_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Description: {0} ähnelt.
        /// </summary>
        public static string TEMPLATE_INFO_DESCRIPTION {
            get {
                return ResourceManager.GetString("TEMPLATE_INFO_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disk {0}: Size = {1}, SR Type = {2} ähnelt.
        /// </summary>
        public static string TEMPLATE_INFO_DISK {
            get {
                return ResourceManager.GetString("TEMPLATE_INFO_DISK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Memory: {0} ähnelt.
        /// </summary>
        public static string TEMPLATE_INFO_MEMORY {
            get {
                return ResourceManager.GetString("TEMPLATE_INFO_MEMORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die OS: {0} ähnelt.
        /// </summary>
        public static string TEMPLATE_INFO_OS {
            get {
                return ResourceManager.GetString("TEMPLATE_INFO_OS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer product] Tools: Not present ähnelt.
        /// </summary>
        public static string TEMPLATE_INFO_TOOLSNOTPRESENT {
            get {
                return ResourceManager.GetString("TEMPLATE_INFO_TOOLSNOTPRESENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer product] Tools: Out of date (version {0}.{1} installed) ähnelt.
        /// </summary>
        public static string TEMPLATE_INFO_TOOLSOLD {
            get {
                return ResourceManager.GetString("TEMPLATE_INFO_TOOLSOLD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer product] Tools: Up to date ähnelt.
        /// </summary>
        public static string TEMPLATE_INFO_TOOLSUPTODATE {
            get {
                return ResourceManager.GetString("TEMPLATE_INFO_TOOLSUPTODATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die vCPUs: {0} ähnelt.
        /// </summary>
        public static string TEMPLATE_INFO_VCPUS {
            get {
                return ResourceManager.GetString("TEMPLATE_INFO_VCPUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You must install the Linux pack to use this template ähnelt.
        /// </summary>
        public static string TEMPLATE_LINUX_PACK_NEEDED {
            get {
                return ResourceManager.GetString("TEMPLATE_LINUX_PACK_NEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;no description&gt; ähnelt.
        /// </summary>
        public static string TEMPLATE_NO_DESCRIPTION {
            get {
                return ResourceManager.GetString("TEMPLATE_NO_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Terminating sessions... ähnelt.
        /// </summary>
        public static string TERMINATING_SESSIONS {
            get {
                return ResourceManager.GetString("TERMINATING_SESSIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Interface {0}: Network = {1} ähnelt.
        /// </summary>
        public static string TERMPLATE_INFO_VIF {
            get {
                return ResourceManager.GetString("TERMPLATE_INFO_VIF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Test archive target location ähnelt.
        /// </summary>
        public static string TEST_ARCHIVE_LOCATION {
            get {
                return ResourceManager.GetString("TEST_ARCHIVE_LOCATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Text ähnelt.
        /// </summary>
        public static string TEXT {
            get {
                return ResourceManager.GetString("TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die the snapshot &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string THE_SNAPSHOT {
            get {
                return ResourceManager.GetString("THE_SNAPSHOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This VM is currently part of the snapshot schedule &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string THIS_VM_IS_IN_VMSS {
            get {
                return ResourceManager.GetString("THIS_VM_IS_IN_VMSS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This VM is not currently part of a snapshot schedule ähnelt.
        /// </summary>
        public static string THIS_VM_IS_NOT_IN_VMSS {
            get {
                return ResourceManager.GetString("THIS_VM_IS_NOT_IN_VMSS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die is this week ähnelt.
        /// </summary>
        public static string THIS_WEEK {
            get {
                return ResourceManager.GetString("THIS_WEEK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Thursday ähnelt.
        /// </summary>
        public static string THURSDAY_LONG {
            get {
                return ResourceManager.GetString("THURSDAY_LONG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Thu ähnelt.
        /// </summary>
        public static string THURSDAY_SHORT {
            get {
                return ResourceManager.GetString("THURSDAY_SHORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} day ähnelt.
        /// </summary>
        public static string TIME_DAY {
            get {
                return ResourceManager.GetString("TIME_DAY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} days ähnelt.
        /// </summary>
        public static string TIME_DAYS {
            get {
                return ResourceManager.GetString("TIME_DAYS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} hour ähnelt.
        /// </summary>
        public static string TIME_HOUR {
            get {
                return ResourceManager.GetString("TIME_HOUR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} hours ähnelt.
        /// </summary>
        public static string TIME_HOURS {
            get {
                return ResourceManager.GetString("TIME_HOURS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} minute ähnelt.
        /// </summary>
        public static string TIME_MINUTE {
            get {
                return ResourceManager.GetString("TIME_MINUTE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} minutes ähnelt.
        /// </summary>
        public static string TIME_MINUTES {
            get {
                return ResourceManager.GetString("TIME_MINUTES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} months ähnelt.
        /// </summary>
        public static string TIME_MONTHS {
            get {
                return ResourceManager.GetString("TIME_MONTHS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Negligible ähnelt.
        /// </summary>
        public static string TIME_NEGLIGIBLE {
            get {
                return ResourceManager.GetString("TIME_NEGLIGIBLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} - {1} minutes ähnelt.
        /// </summary>
        public static string TIME_RANGE_MINUTES {
            get {
                return ResourceManager.GetString("TIME_RANGE_MINUTES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} - {1} seconds ähnelt.
        /// </summary>
        public static string TIME_RANGE_SECONDS {
            get {
                return ResourceManager.GetString("TIME_RANGE_SECONDS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} seconds ähnelt.
        /// </summary>
        public static string TIME_SECONDS {
            get {
                return ResourceManager.GetString("TIME_SECONDS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die TimeStamp ähnelt.
        /// </summary>
        public static string TIMESTAMP {
            get {
                return ResourceManager.GetString("TIMESTAMP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Title ähnelt.
        /// </summary>
        public static string TITLE {
            get {
                return ResourceManager.GetString("TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die is today ähnelt.
        /// </summary>
        public static string TODAY {
            get {
                return ResourceManager.GetString("TODAY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Virtualization ähnelt.
        /// </summary>
        public static string TOOLS_STATUS {
            get {
                return ResourceManager.GetString("TOOLS_STATUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Networks cannot be activated while the VM is suspended ähnelt.
        /// </summary>
        public static string TOOLTIP_ACTIVATE_VIF_SUSPENDED {
            get {
                return ResourceManager.GetString("TOOLTIP_ACTIVATE_VIF_SUSPENDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Networks cannot be activated on a running VM without tools installed ähnelt.
        /// </summary>
        public static string TOOLTIP_ACTIVATE_VIF_TOOLS {
            get {
                return ResourceManager.GetString("TOOLTIP_ACTIVATE_VIF_TOOLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disks cannot be activated or deactivated while the VM is suspended ähnelt.
        /// </summary>
        public static string TOOLTIP_DEACTIVATE_SUSPENDED {
            get {
                return ResourceManager.GetString("TOOLTIP_DEACTIVATE_SUSPENDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die System disks cannot be activated or deactivated while the VM is running ähnelt.
        /// </summary>
        public static string TOOLTIP_DEACTIVATE_SYSVDI {
            get {
                return ResourceManager.GetString("TOOLTIP_DEACTIVATE_SYSVDI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disks cannot be activated or deactivated from running VMs without [XenServer product] Tools installed ähnelt.
        /// </summary>
        public static string TOOLTIP_DEACTIVATE_VDI_NEED_TOOLS {
            get {
                return ResourceManager.GetString("TOOLTIP_DEACTIVATE_VDI_NEED_TOOLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Networks cannot be deactivated while the VM is suspended ähnelt.
        /// </summary>
        public static string TOOLTIP_DEACTIVATE_VIF_SUSPENDED {
            get {
                return ResourceManager.GetString("TOOLTIP_DEACTIVATE_VIF_SUSPENDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Networks cannot be deactivated on a running VM without tools installed ähnelt.
        /// </summary>
        public static string TOOLTIP_DEACTIVATE_VIF_TOOLS {
            get {
                return ResourceManager.GetString("TOOLTIP_DEACTIVATE_VIF_TOOLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disks cannot be deleted while the VM is suspended ähnelt.
        /// </summary>
        public static string TOOLTIP_DELETE_SUSPENDED {
            get {
                return ResourceManager.GetString("TOOLTIP_DELETE_SUSPENDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die System disks cannot be deleted while the VM is running ähnelt.
        /// </summary>
        public static string TOOLTIP_DELETE_SYSVDI {
            get {
                return ResourceManager.GetString("TOOLTIP_DELETE_SYSVDI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disks cannot be deleted from running VMs without [XenServer product] Tools installed ähnelt.
        /// </summary>
        public static string TOOLTIP_DELETE_VDI_NEED_TOOLS {
            get {
                return ResourceManager.GetString("TOOLTIP_DELETE_VDI_NEED_TOOLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disks cannot be removed while the VM is suspended ähnelt.
        /// </summary>
        public static string TOOLTIP_DETACH_SUSPENDED {
            get {
                return ResourceManager.GetString("TOOLTIP_DETACH_SUSPENDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die System disks cannot be detached while the VM is running ähnelt.
        /// </summary>
        public static string TOOLTIP_DETACH_SYSVDI {
            get {
                return ResourceManager.GetString("TOOLTIP_DETACH_SYSVDI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disks must be deactivated before detaching. ähnelt.
        /// </summary>
        public static string TOOLTIP_DETACH_VDI_MUST_DEACTIVATE {
            get {
                return ResourceManager.GetString("TOOLTIP_DETACH_VDI_MUST_DEACTIVATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disks cannot be removed from running VMs without [XenServer product] Tools installed ähnelt.
        /// </summary>
        public static string TOOLTIP_DETACH_VDI_NEED_TOOLS {
            get {
                return ResourceManager.GetString("TOOLTIP_DETACH_VDI_NEED_TOOLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die I/O drivers must be installed to edit a network on a running VM ähnelt.
        /// </summary>
        public static string TOOLTIP_EDIT_NETWORK_IO_DRIVERS {
            get {
                return ResourceManager.GetString("TOOLTIP_EDIT_NETWORK_IO_DRIVERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer product] Tools must be installed to edit a network on a running VM ähnelt.
        /// </summary>
        public static string TOOLTIP_EDIT_NETWORK_TOOLS {
            get {
                return ResourceManager.GetString("TOOLTIP_EDIT_NETWORK_TOOLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Default templates support a maximum of {0} networks at VM creation ähnelt.
        /// </summary>
        public static string TOOLTIP_MAX_NETWORKS_FROM_DEFAULT_TEMPLATE {
            get {
                return ResourceManager.GetString("TOOLTIP_MAX_NETWORKS_FROM_DEFAULT_TEMPLATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The maximum number of networks for this template has been reached. ähnelt.
        /// </summary>
        public static string TOOLTIP_MAX_NETWORKS_FROM_TEMPLATE {
            get {
                return ResourceManager.GetString("TOOLTIP_MAX_NETWORKS_FROM_TEMPLATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer] only supports {0} NICs per Bond. ähnelt.
        /// </summary>
        public static string TOOLTIP_NICS_PER_BOND_LIMIT {
            get {
                return ResourceManager.GetString("TOOLTIP_NICS_PER_BOND_LIMIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die I/O drivers must be installed to remove a network on a running VM ähnelt.
        /// </summary>
        public static string TOOLTIP_REMOVE_NETWORK_IO_DRIVERS {
            get {
                return ResourceManager.GetString("TOOLTIP_REMOVE_NETWORK_IO_DRIVERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Networks cannot be removed from suspended VMs ähnelt.
        /// </summary>
        public static string TOOLTIP_REMOVE_NETWORK_SUSPENDED {
            get {
                return ResourceManager.GetString("TOOLTIP_REMOVE_NETWORK_SUSPENDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer product] Tools must be installed to remove a network on a running VM ähnelt.
        /// </summary>
        public static string TOOLTIP_REMOVE_NETWORK_TOOLS {
            get {
                return ResourceManager.GetString("TOOLTIP_REMOVE_NETWORK_TOOLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This network cannot be removed because it is a physical device ähnelt.
        /// </summary>
        public static string TOOLTIP_REMOVE_PIF {
            get {
                return ResourceManager.GetString("TOOLTIP_REMOVE_PIF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reclaiming freed space not supported on this SR ähnelt.
        /// </summary>
        public static string TOOLTIP_SR_TRIM_UNSUPPORTED {
            get {
                return ResourceManager.GetString("TOOLTIP_SR_TRIM_UNSUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reclaiming freed space not supported on these SRs ähnelt.
        /// </summary>
        public static string TOOLTIP_SR_TRIM_UNSUPPORTED_MULTIPLE {
            get {
                return ResourceManager.GetString("TOOLTIP_SR_TRIM_UNSUPPORTED_MULTIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Views and Saved Searches ähnelt.
        /// </summary>
        public static string TREESEARCHBOX_DROPDOWN_TOOLTIP {
            get {
                return ResourceManager.GetString("TREESEARCHBOX_DROPDOWN_TOOLTIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die True ähnelt.
        /// </summary>
        public static string TRUE {
            get {
                return ResourceManager.GetString("TRUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die trusted ähnelt.
        /// </summary>
        public static string TRUSTED {
            get {
                return ResourceManager.GetString("TRUSTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tuesday ähnelt.
        /// </summary>
        public static string TUESDAY_LONG {
            get {
                return ResourceManager.GetString("TUESDAY_LONG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tue ähnelt.
        /// </summary>
        public static string TUESDAY_SHORT {
            get {
                return ResourceManager.GetString("TUESDAY_SHORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Turn HA off ähnelt.
        /// </summary>
        public static string TURN_HA_OFF {
            get {
                return ResourceManager.GetString("TURN_HA_OFF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the network on which the temporary VM (Transfer VM) used to perform the export operation will run. ähnelt.
        /// </summary>
        public static string TVM_PAGE_DESCRIPTION_EXPORT {
            get {
                return ResourceManager.GetString("TVM_PAGE_DESCRIPTION_EXPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the network on which the temporary VM (Transfer VM) used to perform the import operation will run. ähnelt.
        /// </summary>
        public static string TVM_PAGE_DESCRIPTION_IMPORT {
            get {
                return ResourceManager.GetString("TVM_PAGE_DESCRIPTION_IMPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Transfer VM Settings ähnelt.
        /// </summary>
        public static string TVM_PAGE_TEXT {
            get {
                return ResourceManager.GetString("TVM_PAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure networking options for the Transfer VM ähnelt.
        /// </summary>
        public static string TVM_PAGE_TITLE {
            get {
                return ResourceManager.GetString("TVM_PAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Type ähnelt.
        /// </summary>
        public static string TYPE {
            get {
                return ResourceManager.GetString("TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Import an appliance from an OVF or OVA package. ähnelt.
        /// </summary>
        public static string TYPE_PAGE_DESCRIPTION_HEADER_OVF {
            get {
                return ResourceManager.GetString("TYPE_PAGE_DESCRIPTION_HEADER_OVF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  ähnelt.
        /// </summary>
        public static string TYPE_PAGE_DESCRIPTION_HEADER_VHD {
            get {
                return ResourceManager.GetString("TYPE_PAGE_DESCRIPTION_HEADER_VHD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Import a locally stored VM, template or snapshot as a new VM. ähnelt.
        /// </summary>
        public static string TYPE_PAGE_DESCRIPTION_HEADER_XVA {
            get {
                return ResourceManager.GetString("TYPE_PAGE_DESCRIPTION_HEADER_XVA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Types ähnelt.
        /// </summary>
        public static string TYPES {
            get {
                return ResourceManager.GetString("TYPES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenCenter] was unable to import a saved search from file &apos;{0}&apos;.
        ///
        ///Verify that the file is a valid {1} export. ähnelt.
        /// </summary>
        public static string UNABLE_TO_IMPORT_SEARCH {
            get {
                return ResourceManager.GetString("UNABLE_TO_IMPORT_SEARCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenCenter] will uncompress the file to &apos;{0}&apos;. After uncompression the original file &apos;{1}&apos; will be deleted. Continue? ähnelt.
        /// </summary>
        public static string UNCOMPRESS_APPLIANCE_DESCRIPTION {
            get {
                return ResourceManager.GetString("UNCOMPRESS_APPLIANCE_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete ähnelt.
        /// </summary>
        public static string UNINSTALL {
            get {
                return ResourceManager.GetString("UNINSTALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown ähnelt.
        /// </summary>
        public static string UNKNOWN {
            get {
                return ResourceManager.GetString("UNKNOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;unknown AD user&gt; ähnelt.
        /// </summary>
        public static string UNKNOWN_AD_USER {
            get {
                return ResourceManager.GetString("UNKNOWN_AD_USER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die unknown object ähnelt.
        /// </summary>
        public static string UNKNOWN_OBJECT {
            get {
                return ResourceManager.GetString("UNKNOWN_OBJECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unlimited ähnelt.
        /// </summary>
        public static string UNLIMITED {
            get {
                return ResourceManager.GetString("UNLIMITED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unrecognised plugin version &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string UNRECOGNISED_PLUGIN_VERSION {
            get {
                return ResourceManager.GetString("UNRECOGNISED_PLUGIN_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unsupported SR type ähnelt.
        /// </summary>
        public static string UNSUPPORTED_SR_TYPE {
            get {
                return ResourceManager.GetString("UNSUPPORTED_SR_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Untag Ob&amp;ject ähnelt.
        /// </summary>
        public static string UNTAG {
            get {
                return ResourceManager.GetString("UNTAG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Untag Ob&amp;jects ähnelt.
        /// </summary>
        public static string UNTAG_OBJECTS {
            get {
                return ResourceManager.GetString("UNTAG_OBJECTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Until next restart {0}; after restart {1} ähnelt.
        /// </summary>
        public static string UNTIL_RESTART_X_AFTER_RESTART_Y {
            get {
                return ResourceManager.GetString("UNTIL_RESTART_X_AFTER_RESTART_Y", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You have applied filters to the list of updates. Do you want to dismiss all updates from every connected server, or only the updates you have chosen to view? In both cases the dismissed updates will be removed from the servers permanently.
        ///
        ///Note that if RBAC is enabled, only updates which you have privileges to dismiss will be affected. ähnelt.
        /// </summary>
        public static string UPDATE_DISMISS_ALL_CONTINUE {
            get {
                return ResourceManager.GetString("UPDATE_DISMISS_ALL_CONTINUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This operation will remove permanently all updates from every connected server. Do you want to continue?
        ///
        ///Note that if RBAC is enabled, only updates which you have privileges to dismiss will be affected. ähnelt.
        /// </summary>
        public static string UPDATE_DISMISS_ALL_NO_FILTER_CONTINUE {
            get {
                return ResourceManager.GetString("UPDATE_DISMISS_ALL_NO_FILTER_CONTINUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to dismiss this update? ähnelt.
        /// </summary>
        public static string UPDATE_DISMISS_CONFIRM {
            get {
                return ResourceManager.GetString("UPDATE_DISMISS_CONFIRM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This operation will remove the selected updates from the servers permanently. Do you want to continue?
        ///
        ///Note that if RBAC is enabled, only updates which you have privileges to dismiss will be affected. ähnelt.
        /// </summary>
        public static string UPDATE_DISMISS_SELECTED_CONFIRM {
            get {
                return ResourceManager.GetString("UPDATE_DISMISS_SELECTED_CONFIRM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed to introduce the update. ähnelt.
        /// </summary>
        public static string UPDATE_ERROR_INTRODUCE {
            get {
                return ResourceManager.GetString("UPDATE_ERROR_INTRODUCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You have applied filters to the list of updates. Do you want to export all updates from every connected server, or only the updates you have chosen to view? ähnelt.
        /// </summary>
        public static string UPDATE_EXPORT_ALL_OR_FILTERED {
            get {
                return ResourceManager.GetString("UPDATE_EXPORT_ALL_OR_FILTERED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: This update is not compatible with this server version. ähnelt.
        /// </summary>
        public static string UPDATE_FOR_DIFFERENT_XENSERVER_VERSION {
            get {
                return ResourceManager.GetString("UPDATE_FOR_DIFFERENT_XENSERVER_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot remove an update which is applied to any servers. ähnelt.
        /// </summary>
        public static string UPDATE_MANAGER_CANNOT_REMOVE_APPLIED_PATCH {
            get {
                return ResourceManager.GetString("UPDATE_MANAGER_CANNOT_REMOVE_APPLIED_PATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Update performance monitoring configuration ähnelt.
        /// </summary>
        public static string UPDATE_PERFMON {
            get {
                return ResourceManager.GetString("UPDATE_PERFMON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Updating &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string UPDATE_PROPERTIES {
            get {
                return ResourceManager.GetString("UPDATE_PROPERTIES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Temporary virtual disk used for the installation of an update ähnelt.
        /// </summary>
        public static string UPDATE_TEMP_VDI_DESCRIPTION {
            get {
                return ResourceManager.GetString("UPDATE_TEMP_VDI_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The installation of update {0} was not completed successfully ähnelt.
        /// </summary>
        public static string UPDATE_WAS_NOT_COMPLETED {
            get {
                return ResourceManager.GetString("UPDATE_WAS_NOT_COMPLETED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Update {0} was successfully installed ähnelt.
        /// </summary>
        public static string UPDATE_WAS_SUCCESSFULLY_INSTALLED {
            get {
                return ResourceManager.GetString("UPDATE_WAS_SUCCESSFULLY_INSTALLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Up to date ähnelt.
        /// </summary>
        public static string UPDATED {
            get {
                return ResourceManager.GetString("UPDATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Updated performance monitoring configuration ähnelt.
        /// </summary>
        public static string UPDATED_PERFMON {
            get {
                return ResourceManager.GetString("UPDATED_PERFMON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Updating complete. ähnelt.
        /// </summary>
        public static string UPDATED_PROPERTIES {
            get {
                return ResourceManager.GetString("UPDATED_PROPERTIES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Updates ähnelt.
        /// </summary>
        public static string UPDATES {
            get {
                return ResourceManager.GetString("UPDATES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Automatically check for [XenServer] or [XenCenter] updates ähnelt.
        /// </summary>
        public static string UPDATES_DESC {
            get {
                return ResourceManager.GetString("UPDATES_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die For the update to take effect after application, the following action is required:
        ///  ähnelt.
        /// </summary>
        public static string UPDATES_DIALOG_ACTION_REQUIRED {
            get {
                return ResourceManager.GetString("UPDATES_DIALOG_ACTION_REQUIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} - installed ({1}) ähnelt.
        /// </summary>
        public static string UPDATES_DIALOG_APPLIED {
            get {
                return ResourceManager.GetString("UPDATES_DIALOG_APPLIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fully installed ähnelt.
        /// </summary>
        public static string UPDATES_DIALOG_FULLY_APPLIED_PROMPT {
            get {
                return ResourceManager.GetString("UPDATES_DIALOG_FULLY_APPLIED_PROMPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} - not installed ähnelt.
        /// </summary>
        public static string UPDATES_DIALOG_NOT_APPLIED {
            get {
                return ResourceManager.GetString("UPDATES_DIALOG_NOT_APPLIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not applied.  Click here to apply ähnelt.
        /// </summary>
        public static string UPDATES_DIALOG_NOT_APPLIED_PROMPT {
            get {
                return ResourceManager.GetString("UPDATES_DIALOG_NOT_APPLIED_PROMPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Partially installed. Click here to re-apply ähnelt.
        /// </summary>
        public static string UPDATES_DIALOG_PARTIALLY_APPLIED_PROMPT {
            get {
                return ResourceManager.GetString("UPDATES_DIALOG_PARTIALLY_APPLIED_PROMPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pending updates.  Click here to apply ähnelt.
        /// </summary>
        public static string UPDATES_DIALOG_PENDING_UPDATES_PROMPT {
            get {
                return ResourceManager.GetString("UPDATES_DIALOG_PENDING_UPDATES_PROMPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die After applying this update, all servers must be restarted. ähnelt.
        /// </summary>
        public static string UPDATES_DIALOG_RESTART_ALL_HOSTS {
            get {
                return ResourceManager.GetString("UPDATES_DIALOG_RESTART_ALL_HOSTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die After installing this update, all Windows VMs must be restarted. ähnelt.
        /// </summary>
        public static string UPDATES_DIALOG_RESTART_ALL_HVM_VMS {
            get {
                return ResourceManager.GetString("UPDATES_DIALOG_RESTART_ALL_HVM_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die After applying this update, all Linux VMs must be restarted. ähnelt.
        /// </summary>
        public static string UPDATES_DIALOG_RESTART_ALL_PV_VMS {
            get {
                return ResourceManager.GetString("UPDATES_DIALOG_RESTART_ALL_PV_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die After installing this update, all VMs must be restarted. ähnelt.
        /// </summary>
        public static string UPDATES_DIALOG_RESTART_ALL_VMS {
            get {
                return ResourceManager.GetString("UPDATES_DIALOG_RESTART_ALL_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die After installing this update, server &apos;{0}&apos; must be restarted. ähnelt.
        /// </summary>
        public static string UPDATES_DIALOG_RESTART_HOST {
            get {
                return ResourceManager.GetString("UPDATES_DIALOG_RESTART_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die After installing this update, all Windows VMs on server &apos;{0}&apos; must be restarted. ähnelt.
        /// </summary>
        public static string UPDATES_DIALOG_RESTART_HVM_VMS_ON_HOST {
            get {
                return ResourceManager.GetString("UPDATES_DIALOG_RESTART_HVM_VMS_ON_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die After installing this update, all VMs on server &apos;{0}&apos; must be restarted. ähnelt.
        /// </summary>
        public static string UPDATES_DIALOG_RESTART_PV_VMS_ON_HOST {
            get {
                return ResourceManager.GetString("UPDATES_DIALOG_RESTART_PV_VMS_ON_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die After installing this update, all VMs on server &apos;{0}&apos; must be restarted. ähnelt.
        /// </summary>
        public static string UPDATES_DIALOG_RESTART_VMS_ON_HOST {
            get {
                return ResourceManager.GetString("UPDATES_DIALOG_RESTART_VMS_ON_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Download and Install ähnelt.
        /// </summary>
        public static string UPDATES_DOWNLOAD_AND_INSTALL {
            get {
                return ResourceManager.GetString("UPDATES_DOWNLOAD_AND_INSTALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Download [XenCenter] ähnelt.
        /// </summary>
        public static string UPDATES_DOWNLOAD_REQUIRED_XENCENTER {
            get {
                return ResourceManager.GetString("UPDATES_DOWNLOAD_REQUIRED_XENCENTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Install Update ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Actions for server &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_ACTIONS_FOR_HOST {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_ACTIONS_FOR_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Installed update ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_APPLIED_UPDATE {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_APPLIED_UPDATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The update failed to apply.  Would you like to view the output? ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_APPLY_FAILED {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_APPLY_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Install update ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_APPLY_UPDATE {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_APPLY_UPDATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Installing update {0} to {1}...  ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_APPLYING_UPDATE {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_APPLYING_UPDATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Installing update to {0} servers... ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_APPLYING_UPDATE_MULTIPLE_HOSTS {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_APPLYING_UPDATE_MULTIPLE_HOSTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The {0} storage repository is broken. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_BROKEN_STORAGE {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_BROKEN_STORAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unable to download update from &apos;{0}&apos;: no longer connected.
        ///
        ///Check your settings and try again. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_CANNOT_DOWNLOAD_PATCH {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_CANNOT_DOWNLOAD_PATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot migrate VM &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_CANNOT_MIGRATE_VM {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_CANNOT_MIGRATE_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot migrate VM &apos;{0}&apos; due to license restrictions. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_CANNOT_MIGRATE_VM_LICENSE_REASON {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_CANNOT_MIGRATE_VM_LICENSE_REASON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot migrate VM &apos;{0}&apos;, because it doesn&apos;t have up-to-date drivers installed. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_CANNOT_MIGRATE_VM_NO_TOOLS {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_CANNOT_MIGRATE_VM_NO_TOOLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot migrate VM &apos;{0}&apos;, because it cannot be suspended. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_CANNOT_MIGRATE_VM_SUSPEND_REASON {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_CANNOT_MIGRATE_VM_SUSPEND_REASON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot migrate VM &apos;{0}&apos; for an unknown reason. See application logs for more details. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_CANNOT_MIGRATE_VM_UNKNOWN_REASON {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_CANNOT_MIGRATE_VM_UNKNOWN_REASON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The VM &apos;{0}&apos; uses the network &apos;{1}&apos;, which cannot be seen from all servers. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_CANNOT_SEE_NETWORK {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_CANNOT_SEE_NETWORK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This VM cannot be suspended and will be shut down. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_CANNOT_SUSPEND_VM {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_CANNOT_SUSPEND_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot suspend VM &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_CANNOT_SUSPEND_VM_TITLE {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_CANNOT_SUSPEND_VM_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot upgrade with VM &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_CANNOT_UPGRADE_WITH_VM {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_CANNOT_UPGRADE_WITH_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The connections to your selected servers have been lost.  Select alternate servers or reconnect to your selected servers. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_CONNECTION_LOST {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_CONNECTION_LOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No longer connected to &apos;{0}&apos;. Please review your selection and try again. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_DISCONNECTED_SERVER {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_DISCONNECTED_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Click here to eject CD ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_EJECT_CD {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_EJECT_CD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter maintenance mode ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_ENTER_MAINTENANCE_MODE {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_ENTER_MAINTENANCE_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Entered maintenance mode ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_ENTERED_MAINTENANCE_MODE {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_ENTERED_MAINTENANCE_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Entering maintenance mode... ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_ENTERING_MAINTENANCE_MODE {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_ENTERING_MAINTENANCE_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exit maintenance mode ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_EXIT_MAINTENANCE_MODE {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_EXIT_MAINTENANCE_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exited maintenance mode ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_EXITED_MAINTENANCE_MODE {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_EXITED_MAINTENANCE_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exiting {0} from maintenance mode...  ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_EXITING_MAINTENANCE_MODE {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_EXITING_MAINTENANCE_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Extract {0} ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_EXTRACT_ACTION_TITLE {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_EXTRACT_ACTION_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unable to find the update file &apos;{0}&apos;.
        ///
        ///Check your settings and try again. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_FILE_NOT_FOUND {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_FILE_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool &apos;{0}&apos; cannot have HA enabled. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_HA_ON_DESCRIPTION {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_HA_ON_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die HA is enabled on &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_HA_ON_TITLE {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_HA_ON_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: Check skipped because HA is enabled on pool {1}. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_HA_ON_WARNING {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_HA_ON_WARNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Click here to exit maintenance mode ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_HOST_EXIT_MAINTENANCE_MODE {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_HOST_EXIT_MAINTENANCE_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server {0} should be put into maintenance mode when required.  You must start with all servers enabled. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_HOST_MAINTENANCE_MODE {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_HOST_MAINTENANCE_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_HOST_MAINTENANCE_MODE_TITLE {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_HOST_MAINTENANCE_MODE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: Server is unreachable. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_HOST_NOT_LIVE {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_HOST_NOT_LIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server &apos;{0}&apos; unreachable ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_HOST_NOT_LIVE_TITLE {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_HOST_NOT_LIVE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: Check skipped because the server is unreachable. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_HOST_NOT_LIVE_WARNING {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_HOST_NOT_LIVE_WARNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Click here to install tools ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_INSTALL_TOOLS {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_INSTALL_TOOLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VM &apos;{0}&apos; has a local CD/DVD in its drive. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_LOCAL_CD {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_LOCAL_CD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: The VM &apos;{1}&apos; uses local storage and cannot be migrated. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_LOCAL_STORAGE {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_LOCAL_STORAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenCenter] version {0} or newer is required. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_NEWER_XENCENTER_REQUIRED {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_NEWER_XENCENTER_REQUIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ensure you have upgraded [XenCenter] before upgrading [XenServer]. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_NEWER_XENCENTER_WARNING {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_NEWER_XENCENTER_WARNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No further action is required for this update. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_NO_ACTION {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_NO_ACTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There is no default SR on this pool to suspend VMs to. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_NO_DEFAULT_SR {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_NO_DEFAULT_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No Default SR on Pool &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_NO_DEFAULT_SR_TITLE {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_NO_DEFAULT_SR_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There are no servers available to migrate the VM {0} to. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_NO_HOSTS {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_NO_HOSTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: There is not enough memory available on other servers to migrate all the VMs off this server. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_NO_MEMORY {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_NO_MEMORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: This server does not need to be rebooted. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_NO_REBOOT_NEEDED {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_NO_REBOOT_NEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: This server does not need to be rebooted because live patching is used. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_NO_REBOOT_NEEDED_LIVE_PATCH {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_NO_REBOOT_NEEDED_LIVE_PATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The VM {0} does not have [XenServer product] Tools installed. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_NO_TOOLS {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_NO_TOOLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This storage repository does not have enough space to suspend the required VMs. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_NOT_ENOUGH_SPACE {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_NOT_ENOUGH_SPACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not enough space on default SR &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_NOT_ENOUGH_SPACE_TITLE {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_NOT_ENOUGH_SPACE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The selected file does not have a valid extension. Valid extensions are: *.{0} and *.iso ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_NOTVALID_EXTENSION {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_NOTVALID_EXTENSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No valid update file found in {0} ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_NOTVALID_ZIPFILE {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_NOTVALID_ZIPFILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The VM {0} cannot be suspended until it has up to date [XenServer product] Tools. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_OUT_OF_DATE_TOOLS {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_OUT_OF_DATE_TOOLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the checkboxes for each server you want to update. Select a pool checkbox to select all the available servers in the pool. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_PAGE1_TOPTEXT {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_PAGE1_TOPTEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: The update has already been applied to this server.  This server will be skipped. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_PATCH_ALREADY_APPLIED {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_PATCH_ALREADY_APPLIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Update Already Applied to Server &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_PATCH_ALREADY_APPLIED_TITLE {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_PATCH_ALREADY_APPLIED_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An error occurred trying to carry out plan stage &apos;{0}&apos;.  The error was &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_PLAN_ERROR {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_PLAN_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An error occurred during pre-update checks.  The results may not be reliable. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_PRECHECK_ERROR {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_PRECHECK_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: {1} ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_PRECHECK_FAILED {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_PRECHECK_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: Conflicting update(s) are present: {1} ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_PRECHECK_FAILED_CONFLICTING_UPDATE {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_PRECHECK_FAILED_CONFLICTING_UPDATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pre-update checks failed on the selected servers.  The update will not be applied. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_PRECHECK_FAILED_ON_ALL_SERVERS {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_PRECHECK_FAILED_ON_ALL_SERVERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: Prerequisite update(s) are missing: {1} ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_PRECHECK_FAILED_REQUIRED_UPDATE_MISSING {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_PRECHECK_FAILED_REQUIRED_UPDATE_MISSING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Update precheck failed on server &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_PRECHECK_FAILED_TITLE {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_PRECHECK_FAILED_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reboot ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_REBOOT {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_REBOOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: This server needs to be rebooted after the update is applied. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_REBOOT_NEEDED {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_REBOOT_NEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rebooted ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_REBOOTED {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_REBOOTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rebooting {0} ...  ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_REBOOTING {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_REBOOTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleting update installation file {0} from {1}...  ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_REMOVING_UPDATE {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_REMOVING_UPDATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Removing update files from {0}... ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_REMOVING_UPDATES_FROM_POOL {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_REMOVING_UPDATES_FROM_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Click here to repair ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_REPAIR_SR {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_REPAIR_SR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restart agent ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_RESTART_AGENT {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_RESTART_AGENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reboot these servers:
        /// ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_RESTART_SERVERS {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_RESTART_SERVERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reboot these VMs:
        /// ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_RESTART_VMS {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_RESTART_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restarted agent ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_RESTARTED_AGENT {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_RESTARTED_AGENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restarting agent in {0} ...  ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_RESTARTING_AGENT {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_RESTARTING_AGENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Click here to resume this VM ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_RESUME_VM {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_RESUME_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Precheck for {0} in {1}... ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_RUNNING_PRECHECK {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_RUNNING_PRECHECK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: The update needs to be applied on all servers in the pool. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_SERVER_SELECTION_PROBLEM {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_SERVER_SELECTION_PROBLEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Storage repository &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_SR_TITLE {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_SR_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The VM {0} is suspended with a local or Tools CD ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_SUSPENDED_VM {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_SUSPENDED_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VM &apos;{0}&apos; has the tools CD in its drive. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_TOOLS_CD {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_TOOLS_CD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Uploading update {0} to {1}... ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_UPLOADING_UPDATE {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_UPLOADING_UPDATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The VM &apos;{0}&apos; has one or more virtual GPUs. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_VM_HAS_VGPU {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_VM_HAS_VGPU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: Check skipped because WLB is enabled on pool {1}. ähnelt.
        /// </summary>
        public static string UPDATES_WIZARD_WLB_ON_WARNING {
            get {
                return ResourceManager.GetString("UPDATES_WIZARD_WLB_ON_WARNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Updating performance monitoring configuration ähnelt.
        /// </summary>
        public static string UPDATING_PERFMON {
            get {
                return ResourceManager.GetString("UPDATING_PERFMON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Updating... ähnelt.
        /// </summary>
        public static string UPDATING_PROPERTIES {
            get {
                return ResourceManager.GetString("UPDATING_PROPERTIES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upgrade host {0} ähnelt.
        /// </summary>
        public static string UPGRADE_HOST {
            get {
                return ResourceManager.GetString("UPGRADE_HOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upgrade master {0} ähnelt.
        /// </summary>
        public static string UPGRADE_MASTER {
            get {
                return ResourceManager.GetString("UPGRADE_MASTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Apply Upgrade ähnelt.
        /// </summary>
        public static string UPGRADE_PLAN {
            get {
                return ResourceManager.GetString("UPGRADE_PLAN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upgrade pool {0} ähnelt.
        /// </summary>
        public static string UPGRADE_POOL {
            get {
                return ResourceManager.GetString("UPGRADE_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upgrade pool master &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string UPGRADE_POOL_MASTER {
            get {
                return ResourceManager.GetString("UPGRADE_POOL_MASTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die         Upgrade pool master {0} ähnelt.
        /// </summary>
        public static string UPGRADE_POOL_MASTER_X {
            get {
                return ResourceManager.GetString("UPGRADE_POOL_MASTER_X", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Prechecks ähnelt.
        /// </summary>
        public static string UPGRADE_PRECHECKS_TEXT {
            get {
                return ResourceManager.GetString("UPGRADE_PRECHECKS_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Perform upgrade prechecks on selected pools ähnelt.
        /// </summary>
        public static string UPGRADE_PRECHECKS_TITLE {
            get {
                return ResourceManager.GetString("UPGRADE_PRECHECKS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upgrade server &apos;{0} ähnelt.
        /// </summary>
        public static string UPGRADE_SERVER {
            get {
                return ResourceManager.GetString("UPGRADE_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die         Upgrade server {0} ähnelt.
        /// </summary>
        public static string UPGRADE_SERVER_X {
            get {
                return ResourceManager.GetString("UPGRADE_SERVER_X", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upgrade &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string UPGRADE_SLAVE {
            get {
                return ResourceManager.GetString("UPGRADE_SLAVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Apply Upgrade ähnelt.
        /// </summary>
        public static string UPGRADEWIZARD_PATCHING_TEXT {
            get {
                return ResourceManager.GetString("UPGRADEWIZARD_PATCHING_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Applying the upgrade to the pool. ähnelt.
        /// </summary>
        public static string UPGRADEWIZARD_PATCHING_TITLE {
            get {
                return ResourceManager.GetString("UPGRADEWIZARD_PATCHING_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upgrade Prechecks ähnelt.
        /// </summary>
        public static string UPGRADEWIZARD_PRECHECK_TEXT {
            get {
                return ResourceManager.GetString("UPGRADEWIZARD_PRECHECK_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Problems encountered when performing upgrade prechecks. ähnelt.
        /// </summary>
        public static string UPGRADEWIZARD_PRECHECK_TITLE {
            get {
                return ResourceManager.GetString("UPGRADEWIZARD_PRECHECK_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hosts in pool &apos;{0}&apos; have incompatible CPUs ähnelt.
        /// </summary>
        public static string UPGRADEWIZARD_PROBLEM_INCOMPATIBLE_CPUS {
            get {
                return ResourceManager.GetString("UPGRADEWIZARD_PROBLEM_INCOMPATIBLE_CPUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shut down all VMs ähnelt.
        /// </summary>
        public static string UPGRADEWIZARD_PROBLEM_INCOMPATIBLE_CPUS_HELPMESSAGE {
            get {
                return ResourceManager.GetString("UPGRADEWIZARD_PROBLEM_INCOMPATIBLE_CPUS_HELPMESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VM &apos;{0}&apos; has invalid vCPU settings. ähnelt.
        /// </summary>
        public static string UPGRADEWIZARD_PROBLEM_INVALID_VCPU_SETTINGS {
            get {
                return ResourceManager.GetString("UPGRADEWIZARD_PROBLEM_INVALID_VCPU_SETTINGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fix vCPU configuration ähnelt.
        /// </summary>
        public static string UPGRADEWIZARD_PROBLEM_INVALID_VCPU_SETTINGS_HELPMESSAGE {
            get {
                return ResourceManager.GetString("UPGRADEWIZARD_PROBLEM_INVALID_VCPU_SETTINGS_HELPMESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the servers you want to upgrade. ähnelt.
        /// </summary>
        public static string UPGRADEWIZARD_SELECTSERVERS_TITLE {
            get {
                return ResourceManager.GetString("UPGRADEWIZARD_SELECTSERVERS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: Check skipped because hosts in pool &apos;{1}&apos; have incompatible CPUs ähnelt.
        /// </summary>
        public static string UPGRADEWIZARD_WARNING_INCOMPATIBLE_CPUS {
            get {
                return ResourceManager.GetString("UPGRADEWIZARD_WARNING_INCOMPATIBLE_CPUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upgrading ähnelt.
        /// </summary>
        public static string UPGRADING {
            get {
                return ResourceManager.GetString("UPGRADING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upgrading server &apos;{0}&apos; ... ähnelt.
        /// </summary>
        public static string UPGRADING_SERVER {
            get {
                return ResourceManager.GetString("UPGRADING_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Already uploaded ähnelt.
        /// </summary>
        public static string UPLOAD_PATCH_ALREADY_UPLOADED {
            get {
                return ResourceManager.GetString("UPLOAD_PATCH_ALREADY_UPLOADED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Uploading... ähnelt.
        /// </summary>
        public static string UPLOAD_PATCH_DESCRIPTION {
            get {
                return ResourceManager.GetString("UPLOAD_PATCH_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Update successfully uploaded to selected server(s) ähnelt.
        /// </summary>
        public static string UPLOAD_PATCH_END_DESCRIPTION {
            get {
                return ResourceManager.GetString("UPLOAD_PATCH_END_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upload ähnelt.
        /// </summary>
        public static string UPLOAD_PATCH_TITLE {
            get {
                return ResourceManager.GetString("UPLOAD_PATCH_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Uploaded ähnelt.
        /// </summary>
        public static string UPLOAD_PATCH_UPLOADED {
            get {
                return ResourceManager.GetString("UPLOAD_PATCH_UPLOADED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Uploading Update... ähnelt.
        /// </summary>
        public static string UPLOADING_PATCH {
            get {
                return ResourceManager.GetString("UPLOADING_PATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Uploading - {0}% ähnelt.
        /// </summary>
        public static string UPLOADING_PATCH_PROGRESS {
            get {
                return ResourceManager.GetString("UPLOADING_PATCH_PROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Uploading to server &apos;{0}&apos;... ähnelt.
        /// </summary>
        public static string UPLOADING_PATCH_TO {
            get {
                return ResourceManager.GetString("UPLOADING_PATCH_TO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upgrade your [XenServer] license to enable Active Directory.  Active Directory allows you to configure [XenServer] access control by adding named user accounts. ähnelt.
        /// </summary>
        public static string UPSELL_BLURB_AD {
            get {
                return ResourceManager.GetString("UPSELL_BLURB_AD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upgrade your [XenServer] license to enable Alerting and Reporting capabilities. Email based performance and error alerting will proactively notify administrators of error conditions or performance problems before they affect critical services. ähnelt.
        /// </summary>
        public static string UPSELL_BLURB_ALERTS {
            get {
                return ResourceManager.GetString("UPSELL_BLURB_ALERTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upgrade your [XenServer] license to enable VM live migration. This feature enables you to migrate running VMs on shared or local storage between servers in the same pool or across pools with no VM downtime.  ähnelt.
        /// </summary>
        public static string UPSELL_BLURB_CPM {
            get {
                return ResourceManager.GetString("UPSELL_BLURB_CPM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upgrade your [XenServer] license to enable Heterogeneous Pools. Heterogeneous Pools allows hosts with different CPUs to form a resource pool, and allows virtual machines to migrate between them. ähnelt.
        /// </summary>
        public static string UPSELL_BLURB_CPUMASKING {
            get {
                return ResourceManager.GetString("UPSELL_BLURB_CPUMASKING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upgrade your [XenServer] license to enable Dynamic Memory Control.  Dynamic Memory Control allows [XenServer] to adjust the memory of live virtual machines, and respond dynamically to changing demands on the host server. ähnelt.
        /// </summary>
        public static string UPSELL_BLURB_DMC {
            get {
                return ResourceManager.GetString("UPSELL_BLURB_DMC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upgrade your [XenServer] license to enable Disaster Recovery. The Disaster Recovery feature allows you to recover your critical VMs and vApps at your DR site in the event of a disaster at your primary production site. ähnelt.
        /// </summary>
        public static string UPSELL_BLURB_DR {
            get {
                return ResourceManager.GetString("UPSELL_BLURB_DR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upgrade your [XenServer] license to enable StorageLink™ Technology. StorageLink allows [XenServer] to leverage all the power of your existing storage hardware and offload storage operations automatically. This allows for high performance and space efficient storage provisioning, cloning, and snapshot capabilities to be handled in hardware using your storage hardware&apos;s native features. ähnelt.
        /// </summary>
        public static string UPSELL_BLURB_ENHANCEDSR {
            get {
                return ResourceManager.GetString("UPSELL_BLURB_ENHANCEDSR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upgrade your [XenServer] license to enable GPU pass-through. The GPU pass-through feature allows you to assign a dedicated graphics processing unit to a VM for higher graphics performance. ähnelt.
        /// </summary>
        public static string UPSELL_BLURB_GPU {
            get {
                return ResourceManager.GetString("UPSELL_BLURB_GPU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upgrade your [XenServer] license to enable High Availability. High Availability allows virtual machines to be automatically restarted in the event of an underlying hardware failure or individual VM failure. If the server fails the VMs will be intelligently restarted on other virtualized servers in the resource pool. ähnelt.
        /// </summary>
        public static string UPSELL_BLURB_HA {
            get {
                return ResourceManager.GetString("UPSELL_BLURB_HA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upgrade your [XenServer] license to enable Performance Reporting capabilities. Performance Reporting provides guidance on overall environment performance trends and enables you to accurately plan capacity as business needs change. ähnelt.
        /// </summary>
        public static string UPSELL_BLURB_PERFORMANCE {
            get {
                return ResourceManager.GetString("UPSELL_BLURB_PERFORMANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upgrade your [XenServer] license to enable Role Based Access Control. Using the RBAC feature, you will be able to control access to vital components in your [XenServer] resource pools, with full audit logging capabilities and seamless integration with your current Active Directory setup. ähnelt.
        /// </summary>
        public static string UPSELL_BLURB_RBAC {
            get {
                return ResourceManager.GetString("UPSELL_BLURB_RBAC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 
        ///
        ///To start a [XenServer] trial, click the button below. ähnelt.
        /// </summary>
        public static string UPSELL_BLURB_TRIAL {
            get {
                return ResourceManager.GetString("UPSELL_BLURB_TRIAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upgrade your [XenServer] license to enable vApps. The vApps feature allows you to place your VMs into groups, allowing them to be started or stopped as a unit, and also allowing them to be easily recovered at your DR site in the event of a disaster at your primary production site. ähnelt.
        /// </summary>
        public static string UPSELL_BLURB_VM_APPLIANCES {
            get {
                return ResourceManager.GetString("UPSELL_BLURB_VM_APPLIANCES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upgrade your [XenServer] license to enable VM Scheduled Snapshots. VM Scheduled Snapshots allows you to create automatic snapshots for your critical VMs. ähnelt.
        /// </summary>
        public static string UPSELL_BLURB_VMSS {
            get {
                return ResourceManager.GetString("UPSELL_BLURB_VMSS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upgrade your [XenServer] license to enable Dynamic Workload Balancing. Dynamic Workload Balancing continually profiles your virtual machines’ and [XenServer] hosts’ performance and will intelligently rebalance and optimally place new workloads to ensure the best use of physical server resources in your resource pool. ähnelt.
        /// </summary>
        public static string UPSELL_BLURB_WLB {
            get {
                return ResourceManager.GetString("UPSELL_BLURB_WLB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Uptime ähnelt.
        /// </summary>
        public static string UPTIME {
            get {
                return ResourceManager.GetString("UPTIME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ^(http|https|file|ftp)://* ähnelt.
        /// </summary>
        public static string URI_REGEX {
            get {
                return ResourceManager.GetString("URI_REGEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die USB ähnelt.
        /// </summary>
        public static string USB {
            get {
                return ResourceManager.GetString("USB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot attach USB devices because the VM is currently protected by HA. ähnelt.
        /// </summary>
        public static string USB_ATTACH_NOT_ALLOWED_HA {
            get {
                return ResourceManager.GetString("USB_ATTACH_NOT_ALLOWED_HA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die USB devices can only be attached when the VM is shut down. ähnelt.
        /// </summary>
        public static string USB_ATTACH_NOT_ALLOWED_NOT_HALTED {
            get {
                return ResourceManager.GetString("USB_ATTACH_NOT_ALLOWED_NOT_HALTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Vendor: {0}; Product: {1} ähnelt.
        /// </summary>
        public static string USB_DEVICE_VENDOR_PRODUCT {
            get {
                return ResourceManager.GetString("USB_DEVICE_VENDOR_PRODUCT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die USB devices ähnelt.
        /// </summary>
        public static string USB_DEVICES {
            get {
                return ResourceManager.GetString("USB_DEVICES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 1 device attached ähnelt.
        /// </summary>
        public static string USB_EDIT_SUBTEXT_1_DEVICE {
            get {
                return ResourceManager.GetString("USB_EDIT_SUBTEXT_1_DEVICE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} devices attached ähnelt.
        /// </summary>
        public static string USB_EDIT_SUBTEXT_MULTIPLE_DEVICES {
            get {
                return ResourceManager.GetString("USB_EDIT_SUBTEXT_MULTIPLE_DEVICES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No devices attached ähnelt.
        /// </summary>
        public static string USB_EDIT_SUBTEXT_NODEVICES {
            get {
                return ResourceManager.GetString("USB_EDIT_SUBTEXT_NODEVICES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die USB ähnelt.
        /// </summary>
        public static string USB_EDIT_TEXT {
            get {
                return ResourceManager.GetString("USB_EDIT_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Disable passthrough ähnelt.
        /// </summary>
        public static string USBLIST_DISABLE_PASSTHROUGH_HOTKEY {
            get {
                return ResourceManager.GetString("USBLIST_DISABLE_PASSTHROUGH_HOTKEY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Enable passthrough ähnelt.
        /// </summary>
        public static string USBLIST_ENABLE_PASSTHROUGH_HOTKEY {
            get {
                return ResourceManager.GetString("USBLIST_ENABLE_PASSTHROUGH_HOTKEY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenCenter] was unable to authorize the action as {0}. See the application log files for more information. ähnelt.
        /// </summary>
        public static string USER_AUTHORIZATION_FAILED {
            get {
                return ResourceManager.GetString("USER_AUTHORIZATION_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The user you have entered is not authorized to complete this action ähnelt.
        /// </summary>
        public static string USER_NOT_AUTHORIZED {
            get {
                return ResourceManager.GetString("USER_NOT_AUTHORIZED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die uses ähnelt.
        /// </summary>
        public static string USES {
            get {
                return ResourceManager.GetString("USES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Computer Utilization (%) ähnelt.
        /// </summary>
        public static string UTILIZATION {
            get {
                return ResourceManager.GetString("UTILIZATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die UUID ähnelt.
        /// </summary>
        public static string UUID {
            get {
                return ResourceManager.GetString("UUID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Is ähnelt.
        /// </summary>
        public static string UUID_SEARCH {
            get {
                return ResourceManager.GetString("UUID_SEARCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} B ähnelt.
        /// </summary>
        public static string VAL_B {
            get {
                return ResourceManager.GetString("VAL_B", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die B ähnelt.
        /// </summary>
        public static string VAL_BYTE {
            get {
                return ResourceManager.GetString("VAL_BYTE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} {1} ähnelt.
        /// </summary>
        public static string VAL_FORMAT {
            get {
                return ResourceManager.GetString("VAL_FORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}{1} ähnelt.
        /// </summary>
        public static string VAL_FORMAT_SECONDS {
            get {
                return ResourceManager.GetString("VAL_FORMAT_SECONDS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} GB ähnelt.
        /// </summary>
        public static string VAL_GB {
            get {
                return ResourceManager.GetString("VAL_GB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0:F1} GB ähnelt.
        /// </summary>
        public static string VAL_GB_ONE_DECIMAL {
            get {
                return ResourceManager.GetString("VAL_GB_ONE_DECIMAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die GB ähnelt.
        /// </summary>
        public static string VAL_GIGB {
            get {
                return ResourceManager.GetString("VAL_GIGB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die GBps ähnelt.
        /// </summary>
        public static string VAL_GIGRATE {
            get {
                return ResourceManager.GetString("VAL_GIGRATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} kB ähnelt.
        /// </summary>
        public static string VAL_KB {
            get {
                return ResourceManager.GetString("VAL_KB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die kB ähnelt.
        /// </summary>
        public static string VAL_KILB {
            get {
                return ResourceManager.GetString("VAL_KILB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die kW ähnelt.
        /// </summary>
        public static string VAL_KILOWATT {
            get {
                return ResourceManager.GetString("VAL_KILOWATT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die kBps ähnelt.
        /// </summary>
        public static string VAL_KILRATE {
            get {
                return ResourceManager.GetString("VAL_KILRATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} MB ähnelt.
        /// </summary>
        public static string VAL_MB {
            get {
                return ResourceManager.GetString("VAL_MB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MB ähnelt.
        /// </summary>
        public static string VAL_MEGB {
            get {
                return ResourceManager.GetString("VAL_MEGB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MBps ähnelt.
        /// </summary>
        public static string VAL_MEGRATE {
            get {
                return ResourceManager.GetString("VAL_MEGRATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die μs ähnelt.
        /// </summary>
        public static string VAL_MICSEC {
            get {
                return ResourceManager.GetString("VAL_MICSEC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ms ähnelt.
        /// </summary>
        public static string VAL_MILSEC {
            get {
                return ResourceManager.GetString("VAL_MILSEC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die mW ähnelt.
        /// </summary>
        public static string VAL_MILWATT {
            get {
                return ResourceManager.GetString("VAL_MILWATT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MW ähnelt.
        /// </summary>
        public static string VAL_MWATT {
            get {
                return ResourceManager.GetString("VAL_MWATT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ns ähnelt.
        /// </summary>
        public static string VAL_NANOSEC {
            get {
                return ResourceManager.GetString("VAL_NANOSEC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bps ähnelt.
        /// </summary>
        public static string VAL_RATE {
            get {
                return ResourceManager.GetString("VAL_RATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 0.0 ähnelt.
        /// </summary>
        public static string VAL_RATE_NUM_FORMAT {
            get {
                return ResourceManager.GetString("VAL_RATE_NUM_FORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die s ähnelt.
        /// </summary>
        public static string VAL_SEC {
            get {
                return ResourceManager.GetString("VAL_SEC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die W ähnelt.
        /// </summary>
        public static string VAL_WATT {
            get {
                return ResourceManager.GetString("VAL_WATT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} - {1} ähnelt.
        /// </summary>
        public static string VALUE_HYPHEN_VALUE {
            get {
                return ResourceManager.GetString("VALUE_HYPHEN_VALUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shut Dow&amp;n vApp ähnelt.
        /// </summary>
        public static string VAPP_SHUT_DOWN_MENU {
            get {
                return ResourceManager.GetString("VAPP_SHUT_DOWN_MENU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shut Dow&amp;n vApp ähnelt.
        /// </summary>
        public static string VAPP_SHUTDOWN_CONTEXT_MENU {
            get {
                return ResourceManager.GetString("VAPP_SHUTDOWN_CONTEXT_MENU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Start vApp ähnelt.
        /// </summary>
        public static string VAPP_START_CONTEXT_MENU {
            get {
                return ResourceManager.GetString("VAPP_START_CONTEXT_MENU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die S&amp;tart vApp ähnelt.
        /// </summary>
        public static string VAPP_START_MENU {
            get {
                return ResourceManager.GetString("VAPP_START_MENU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The disk is attached to a VM that is not in halted state. ähnelt.
        /// </summary>
        public static string VBD_EDIT_CURRENTLY_ATTACHED {
            get {
                return ResourceManager.GetString("VBD_EDIT_CURRENTLY_ATTACHED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} - currently in use ähnelt.
        /// </summary>
        public static string VBD_EDIT_CURRENTLY_IN_USE {
            get {
                return ResourceManager.GetString("VBD_EDIT_CURRENTLY_IN_USE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} - currently in use by &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string VBD_EDIT_CURRENTLY_IN_USE_BY {
            get {
                return ResourceManager.GetString("VBD_EDIT_CURRENTLY_IN_USE_BY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The VCPUs can only be changed when the VM is shut down. ähnelt.
        /// </summary>
        public static string VCPU_ONLY_WHEN_HALTED {
            get {
                return ResourceManager.GetString("VCPU_ONLY_WHEN_HALTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VDI ähnelt.
        /// </summary>
        public static string VDI {
            get {
                return ResourceManager.GetString("VDI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copied disk &apos;{0}&apos; from SR &apos;{1}&apos; to SR &apos;{2}&apos; ähnelt.
        /// </summary>
        public static string VDI_COPIED {
            get {
                return ResourceManager.GetString("VDI_COPIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copying disk &apos;{0}&apos; from SR &apos;{1}&apos; to SR &apos;{2}&apos; ähnelt.
        /// </summary>
        public static string VDI_COPYING {
            get {
                return ResourceManager.GetString("VDI_COPYING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} on &apos;{1}&apos; {2} ähnelt.
        /// </summary>
        public static string VDI_ON_SR_TITLE {
            get {
                return ResourceManager.GetString("VDI_ON_SR_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Vendor ähnelt.
        /// </summary>
        public static string VENDOR_NAME {
            get {
                return ResourceManager.GetString("VENDOR_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Verifying Manifest Content... ähnelt.
        /// </summary>
        public static string VERIFYING_MANIFEST {
            get {
                return ResourceManager.GetString("VERIFYING_MANIFEST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Manifest verification failed. {0} ähnelt.
        /// </summary>
        public static string VERIFYING_MANIFEST_ERROR {
            get {
                return ResourceManager.GetString("VERIFYING_MANIFEST_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Verifying Digital Signature... ähnelt.
        /// </summary>
        public static string VERIFYING_SIGNATURE {
            get {
                return ResourceManager.GetString("VERIFYING_SIGNATURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Signature verification failed. {0} ähnelt.
        /// </summary>
        public static string VERIFYING_SIGNATURE_ERROR {
            get {
                return ResourceManager.GetString("VERIFYING_SIGNATURE_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Version ähnelt.
        /// </summary>
        public static string VERSION {
            get {
                return ResourceManager.GetString("VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenCenter] version {0} (build {1}.{2}) {3}-bit ähnelt.
        /// </summary>
        public static string VERSION_NUMBER {
            get {
                return ResourceManager.GetString("VERSION_NUMBER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} virtual GPU ({1} per GPU, {2}, {3} displays) ähnelt.
        /// </summary>
        public static string VGPU_DESCRIPTION_MANY {
            get {
                return ResourceManager.GetString("VGPU_DESCRIPTION_MANY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} virtual GPU ({1} per GPU, {2}, {3} display) ähnelt.
        /// </summary>
        public static string VGPU_DESCRIPTION_ONE {
            get {
                return ResourceManager.GetString("VGPU_DESCRIPTION_ONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} virtual GPU ({1} per GPU) ähnelt.
        /// </summary>
        public static string VGPU_DESCRIPTION_ZEROES {
            get {
                return ResourceManager.GetString("VGPU_DESCRIPTION_ZEROES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pass-through whole GPU ähnelt.
        /// </summary>
        public static string VGPU_PASSTHRU_TOSTRING {
            get {
                return ResourceManager.GetString("VGPU_PASSTHRU_TOSTRING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} virtual GPU ({1} per GPU) ähnelt.
        /// </summary>
        public static string VGPU_TOSTRING {
            get {
                return ResourceManager.GetString("VGPU_TOSTRING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die View folder... ähnelt.
        /// </summary>
        public static string VIEW_FOLDER_MENU_OPTION {
            get {
                return ResourceManager.GetString("VIEW_FOLDER_MENU_OPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Infrastructure ähnelt.
        /// </summary>
        public static string VIEW_INFRASTRUCTURE {
            get {
                return ResourceManager.GetString("VIEW_INFRASTRUCTURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Objects by Type ähnelt.
        /// </summary>
        public static string VIEW_OBJECTS {
            get {
                return ResourceManager.GetString("VIEW_OBJECTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Organization Views ähnelt.
        /// </summary>
        public static string VIEW_ORGANIZATION {
            get {
                return ResourceManager.GetString("VIEW_ORGANIZATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die View tag... ähnelt.
        /// </summary>
        public static string VIEW_TAG_MENU_OPTION {
            get {
                return ResourceManager.GetString("VIEW_TAG_MENU_OPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die View snapshot schedules ähnelt.
        /// </summary>
        public static string VIEW_VMSS_POLICIES {
            get {
                return ResourceManager.GetString("VIEW_VMSS_POLICIES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The virtual network device changes will take effect when you next restart the VM. ähnelt.
        /// </summary>
        public static string VIF_HOTPLUG_FAILED_MESSAGE {
            get {
                return ResourceManager.GetString("VIF_HOTPLUG_FAILED_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Virtual Network Device Changes ähnelt.
        /// </summary>
        public static string VIF_HOTPLUG_FAILED_TITLE {
            get {
                return ResourceManager.GetString("VIF_HOTPLUG_FAILED_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upgrade your license to enable QoS settings ähnelt.
        /// </summary>
        public static string VIF_LICENSE_RESTRICTION {
            get {
                return ResourceManager.GetString("VIF_LICENSE_RESTRICTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die QoS settings should be configured using the vSwitch Controller ähnelt.
        /// </summary>
        public static string VIF_VSWITCH_CONTROLLER {
            get {
                return ResourceManager.GetString("VIF_VSWITCH_CONTROLLER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Virtual Disk ähnelt.
        /// </summary>
        public static string VIRTUAL_DISK {
            get {
                return ResourceManager.GetString("VIRTUAL_DISK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Virtual Disks ähnelt.
        /// </summary>
        public static string VIRTUAL_DISKS {
            get {
                return ResourceManager.GetString("VIRTUAL_DISKS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Virtual Interface Properties ähnelt.
        /// </summary>
        public static string VIRTUAL_INTERFACE_PROPERTIES {
            get {
                return ResourceManager.GetString("VIRTUAL_INTERFACE_PROPERTIES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Virtual Machine ähnelt.
        /// </summary>
        public static string VIRTUAL_MACHINE {
            get {
                return ResourceManager.GetString("VIRTUAL_MACHINE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Virtual Machines ähnelt.
        /// </summary>
        public static string VIRTUAL_MACHINES {
            get {
                return ResourceManager.GetString("VIRTUAL_MACHINES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Optimized (version {0} installed) ähnelt.
        /// </summary>
        public static string VIRTUALIZATION_OPTIMIZED {
            get {
                return ResourceManager.GetString("VIRTUALIZATION_OPTIMIZED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tools out of date (version {0} installed) ähnelt.
        /// </summary>
        public static string VIRTUALIZATION_OUT_OF_DATE {
            get {
                return ResourceManager.GetString("VIRTUALIZATION_OUT_OF_DATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Install I/O drivers and Management Agent ähnelt.
        /// </summary>
        public static string VIRTUALIZATION_STATE_VM_INSTALL_IO_DRIVERS_AND_MANAGEMENT_AGENT {
            get {
                return ResourceManager.GetString("VIRTUALIZATION_STATE_VM_INSTALL_IO_DRIVERS_AND_MANAGEMENT_AGENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Install Management Agent ähnelt.
        /// </summary>
        public static string VIRTUALIZATION_STATE_VM_INSTALL_MANAGEMENT_AGENT {
            get {
                return ResourceManager.GetString("VIRTUALIZATION_STATE_VM_INSTALL_MANAGEMENT_AGENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die I/O drivers and Management Agent installed ähnelt.
        /// </summary>
        public static string VIRTUALIZATION_STATE_VM_IO_DRIVERS_AND_MANAGEMENT_AGENT_INSTALLED {
            get {
                return ResourceManager.GetString("VIRTUALIZATION_STATE_VM_IO_DRIVERS_AND_MANAGEMENT_AGENT_INSTALLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die I/O not optimized ähnelt.
        /// </summary>
        public static string VIRTUALIZATION_STATE_VM_IO_NOT_OPTIMIZED {
            get {
                return ResourceManager.GetString("VIRTUALIZATION_STATE_VM_IO_NOT_OPTIMIZED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die I/O optimized ähnelt.
        /// </summary>
        public static string VIRTUALIZATION_STATE_VM_IO_OPTIMIZED {
            get {
                return ResourceManager.GetString("VIRTUALIZATION_STATE_VM_IO_OPTIMIZED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die I/O optimized only ähnelt.
        /// </summary>
        public static string VIRTUALIZATION_STATE_VM_IO_OPTIMIZED_ONLY {
            get {
                return ResourceManager.GetString("VIRTUALIZATION_STATE_VM_IO_OPTIMIZED_ONLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Management Agent installed ähnelt.
        /// </summary>
        public static string VIRTUALIZATION_STATE_VM_MANAGEMENT_AGENT_INSTALLED {
            get {
                return ResourceManager.GetString("VIRTUALIZATION_STATE_VM_MANAGEMENT_AGENT_INSTALLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Management Agent not installed ähnelt.
        /// </summary>
        public static string VIRTUALIZATION_STATE_VM_MANAGEMENT_AGENT_NOT_INSTALLED {
            get {
                return ResourceManager.GetString("VIRTUALIZATION_STATE_VM_MANAGEMENT_AGENT_NOT_INSTALLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not optimized ähnelt.
        /// </summary>
        public static string VIRTUALIZATION_STATE_VM_NOT_OPTIMIZED {
            get {
                return ResourceManager.GetString("VIRTUALIZATION_STATE_VM_NOT_OPTIMIZED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not able to receive updates from Windows Update ähnelt.
        /// </summary>
        public static string VIRTUALIZATION_STATE_VM_NOT_RECEIVING_UPDATES {
            get {
                return ResourceManager.GetString("VIRTUALIZATION_STATE_VM_NOT_RECEIVING_UPDATES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fully optimized ähnelt.
        /// </summary>
        public static string VIRTUALIZATION_STATE_VM_OPTIMIZED {
            get {
                return ResourceManager.GetString("VIRTUALIZATION_STATE_VM_OPTIMIZED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Able to receive updates from Windows Update ähnelt.
        /// </summary>
        public static string VIRTUALIZATION_STATE_VM_RECEIVING_UPDATES {
            get {
                return ResourceManager.GetString("VIRTUALIZATION_STATE_VM_RECEIVING_UPDATES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown (please wait) ähnelt.
        /// </summary>
        public static string VIRTUALIZATION_UNKNOWN {
            get {
                return ResourceManager.GetString("VIRTUALIZATION_UNKNOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network {0} on VLAN {1} ähnelt.
        /// </summary>
        public static string VLAN_NETWORK_NAME {
            get {
                return ResourceManager.GetString("VLAN_NETWORK_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VM ähnelt.
        /// </summary>
        public static string VM {
            get {
                return ResourceManager.GetString("VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This VM is already suspended. ähnelt.
        /// </summary>
        public static string VM_ALREADY_SUSPENDED {
            get {
                return ResourceManager.GetString("VM_ALREADY_SUSPENDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die vApp ähnelt.
        /// </summary>
        public static string VM_APPLIANCE {
            get {
                return ResourceManager.GetString("VM_APPLIANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die vApp Properties... ähnelt.
        /// </summary>
        public static string VM_APPLIANCE_PROPERTIES {
            get {
                return ResourceManager.GetString("VM_APPLIANCE_PROPERTIES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shut down all VMs in vApp ähnelt.
        /// </summary>
        public static string VM_APPLIANCE_SHUT_DOWN {
            get {
                return ResourceManager.GetString("VM_APPLIANCE_SHUT_DOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shutting down vApp &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string VM_APPLIANCE_SHUTTING_DOWN {
            get {
                return ResourceManager.GetString("VM_APPLIANCE_SHUTTING_DOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shut down vApp &apos;{0}&apos; completed ähnelt.
        /// </summary>
        public static string VM_APPLIANCE_SHUTTING_DOWN_COMPLETED {
            get {
                return ResourceManager.GetString("VM_APPLIANCE_SHUTTING_DOWN_COMPLETED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start all VMs in vApp ähnelt.
        /// </summary>
        public static string VM_APPLIANCE_START {
            get {
                return ResourceManager.GetString("VM_APPLIANCE_START", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start all VMs in vApp in paused mode ähnelt.
        /// </summary>
        public static string VM_APPLIANCE_START_PAUSED {
            get {
                return ResourceManager.GetString("VM_APPLIANCE_START_PAUSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Starting vApp &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string VM_APPLIANCE_STARTING {
            get {
                return ResourceManager.GetString("VM_APPLIANCE_STARTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start vApp &apos;{0}&apos; completed ähnelt.
        /// </summary>
        public static string VM_APPLIANCE_STARTING_COMPLETED {
            get {
                return ResourceManager.GetString("VM_APPLIANCE_STARTING_COMPLETED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Starting vApp &apos;{0}&apos; in paused mode ähnelt.
        /// </summary>
        public static string VM_APPLIANCE_STARTING_PAUSED {
            get {
                return ResourceManager.GetString("VM_APPLIANCE_STARTING_PAUSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start vApp &apos;{0}&apos; in paused mode completed ähnelt.
        /// </summary>
        public static string VM_APPLIANCE_STARTING_PAUSED_COMPLETED {
            get {
                return ResourceManager.GetString("VM_APPLIANCE_STARTING_PAUSED_COMPLETED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die vApp name:\r\n    {0}\r\n\r\nSelected VMs:\r\n    {1} ähnelt.
        /// </summary>
        public static string VM_APPLIANCE_SUMMARY {
            get {
                return ResourceManager.GetString("VM_APPLIANCE_SUMMARY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die vApps ähnelt.
        /// </summary>
        public static string VM_APPLIANCES {
            get {
                return ResourceManager.GetString("VM_APPLIANCES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die vApps defined in pool &apos;{0}&apos;:  ähnelt.
        /// </summary>
        public static string VM_APPLIANCES_DEFINED_FOR_POOL {
            get {
                return ResourceManager.GetString("VM_APPLIANCES_DEFINED_FOR_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die vApps defined in server &apos;{0}&apos;:  ähnelt.
        /// </summary>
        public static string VM_APPLIANCES_DEFINED_FOR_SERVER {
            get {
                return ResourceManager.GetString("VM_APPLIANCES_DEFINED_FOR_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Manage &amp;vApps... ähnelt.
        /// </summary>
        public static string VM_APPLIANCES_MENU {
            get {
                return ResourceManager.GetString("VM_APPLIANCES_MENU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Manage vApps - pool {0} ähnelt.
        /// </summary>
        public static string VM_APPLIANCES_TITLE {
            get {
                return ResourceManager.GetString("VM_APPLIANCES_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unable to retrieve the default cloud-config parameters. ähnelt.
        /// </summary>
        public static string VM_CLOUD_CONFIG_DRIVE_CANNOT_RETRIEVE_DEFAULT {
            get {
                return ResourceManager.GetString("VM_CLOUD_CONFIG_DRIVE_CANNOT_RETRIEVE_DEFAULT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Config drive included ähnelt.
        /// </summary>
        public static string VM_CLOUD_CONFIG_DRIVE_INCLUDED {
            get {
                return ResourceManager.GetString("VM_CLOUD_CONFIG_DRIVE_INCLUDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Config drive not included ähnelt.
        /// </summary>
        public static string VM_CLOUD_CONFIG_DRIVE_NOT_INCLUDED {
            get {
                return ResourceManager.GetString("VM_CLOUD_CONFIG_DRIVE_NOT_INCLUDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The cloud-config parameters can only be changed when the VM is shut down. ähnelt.
        /// </summary>
        public static string VM_CLOUD_CONFIG_DRIVE_READONLY {
            get {
                return ResourceManager.GetString("VM_CLOUD_CONFIG_DRIVE_READONLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The cloud-config parameters could not be retrieved. ähnelt.
        /// </summary>
        public static string VM_CLOUD_CONFIG_DRIVE_UNAVAILABLE {
            get {
                return ResourceManager.GetString("VM_CLOUD_CONFIG_DRIVE_UNAVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current number of v&amp;CPUs: ähnelt.
        /// </summary>
        public static string VM_CPUMEMPAGE_CURRENT_VCPUS_LABEL {
            get {
                return ResourceManager.GetString("VM_CPUMEMPAGE_CURRENT_VCPUS_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The current number of vCPUs can only be changed when the VM is running or shut down.  ähnelt.
        /// </summary>
        public static string VM_CPUMEMPAGE_CURRENT_VCPUS_READONLY {
            get {
                return ResourceManager.GetString("VM_CPUMEMPAGE_CURRENT_VCPUS_READONLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initial number of v&amp;CPUs: ähnelt.
        /// </summary>
        public static string VM_CPUMEMPAGE_INITIAL_VCPUS_LABEL {
            get {
                return ResourceManager.GetString("VM_CPUMEMPAGE_INITIAL_VCPUS_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ma&amp;ximum number of vCPUs: ähnelt.
        /// </summary>
        public static string VM_CPUMEMPAGE_MAX_VCPUS_LABEL {
            get {
                return ResourceManager.GetString("VM_CPUMEMPAGE_MAX_VCPUS_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The maximum number of vCPUs, the topology and the vCPU priority can only be changed when the VM is shut down.  ähnelt.
        /// </summary>
        public static string VM_CPUMEMPAGE_MAX_VCPUS_READONLY {
            get {
                return ResourceManager.GetString("VM_CPUMEMPAGE_MAX_VCPUS_READONLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Specify the number of vCPUs, their topology, and the priority to assign them over other vCPUs.  ähnelt.
        /// </summary>
        public static string VM_CPUMEMPAGE_RUBRIC {
            get {
                return ResourceManager.GetString("VM_CPUMEMPAGE_RUBRIC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die If the initial number of vCPUs is set lower than the maximum number, more vCPUs can be added to the virtual machine while it is running.  ähnelt.
        /// </summary>
        public static string VM_CPUMEMPAGE_RUBRIC_HOTPLUG {
            get {
                return ResourceManager.GetString("VM_CPUMEMPAGE_RUBRIC_HOTPLUG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of v&amp;CPUs: ähnelt.
        /// </summary>
        public static string VM_CPUMEMPAGE_VCPUS_LABEL {
            get {
                return ResourceManager.GetString("VM_CPUMEMPAGE_VCPUS_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Container Management ähnelt.
        /// </summary>
        public static string VM_ENLIGHTENMENT {
            get {
                return ResourceManager.GetString("VM_ENLIGHTENMENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VM General Properties ähnelt.
        /// </summary>
        public static string VM_GENERAL_TAB_TITLE {
            get {
                return ResourceManager.GetString("VM_GENERAL_TAB_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Memory and/or VCPU changes will take effect when you restart the VM. ähnelt.
        /// </summary>
        public static string VM_LIVE_CHANGES_NOT_SUPPORTED_MESSAGE {
            get {
                return ResourceManager.GetString("VM_LIVE_CHANGES_NOT_SUPPORTED_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VM General Changes ähnelt.
        /// </summary>
        public static string VM_LIVE_CHANGES_NOT_SUPPORTED_TITLE {
            get {
                return ResourceManager.GetString("VM_LIVE_CHANGES_NOT_SUPPORTED_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die I/O drivers not installed. ähnelt.
        /// </summary>
        public static string VM_MISSING_IO_DRIVERS {
            get {
                return ResourceManager.GetString("VM_MISSING_IO_DRIVERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A&amp;ctivate ähnelt.
        /// </summary>
        public static string VM_NETWORK_TAB_ACTIVATE_BUTTON_LABEL {
            get {
                return ResourceManager.GetString("VM_NETWORK_TAB_ACTIVATE_BUTTON_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Add Interface... ähnelt.
        /// </summary>
        public static string VM_NETWORK_TAB_ADD_BUTTON_LABEL {
            get {
                return ResourceManager.GetString("VM_NETWORK_TAB_ADD_BUTTON_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dea&amp;ctivate ähnelt.
        /// </summary>
        public static string VM_NETWORK_TAB_DEACTIVATE_BUTTON_LABEL {
            get {
                return ResourceManager.GetString("VM_NETWORK_TAB_DEACTIVATE_BUTTON_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die P&amp;roperties ähnelt.
        /// </summary>
        public static string VM_NETWORK_TAB_EDIT_BUTTON_LABEL {
            get {
                return ResourceManager.GetString("VM_NETWORK_TAB_EDIT_BUTTON_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die R&amp;emove Interface ähnelt.
        /// </summary>
        public static string VM_NETWORK_TAB_REMOVE_BUTTON_LABEL {
            get {
                return ResourceManager.GetString("VM_NETWORK_TAB_REMOVE_BUTTON_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Virtual Network Interfaces ähnelt.
        /// </summary>
        public static string VM_NETWORK_TAB_TITLE {
            get {
                return ResourceManager.GetString("VM_NETWORK_TAB_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} is not in halted or suspended state. Current state: {1} ähnelt.
        /// </summary>
        public static string VM_NOT_HALTED {
            get {
                return ResourceManager.GetString("VM_NOT_HALTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This VM is not shut down. ähnelt.
        /// </summary>
        public static string VM_NOT_SHUT_DOWN {
            get {
                return ResourceManager.GetString("VM_NOT_SHUT_DOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This VM is not suspended. ähnelt.
        /// </summary>
        public static string VM_NOT_SUSPENDED {
            get {
                return ResourceManager.GetString("VM_NOT_SUSPENDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hardware-assisted Virtualization (HVM) ähnelt.
        /// </summary>
        public static string VM_OPERATING_MODE_HVM {
            get {
                return ResourceManager.GetString("VM_OPERATING_MODE_HVM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Paravirtualization (PV) ähnelt.
        /// </summary>
        public static string VM_OPERATING_MODE_PV {
            get {
                return ResourceManager.GetString("VM_OPERATING_MODE_PV", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This VM is paused. ähnelt.
        /// </summary>
        public static string VM_PAUSED {
            get {
                return ResourceManager.GetString("VM_PAUSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This VM is not using read caching ähnelt.
        /// </summary>
        public static string VM_READ_CACHING_DISABLED {
            get {
                return ResourceManager.GetString("VM_READ_CACHING_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This pool is not licensed for read caching ähnelt.
        /// </summary>
        public static string VM_READ_CACHING_DISABLED_REASON_LICENSE {
            get {
                return ResourceManager.GetString("VM_READ_CACHING_DISABLED_REASON_LICENSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This VM does not have any read-only disks or disks with a read-only parent ähnelt.
        /// </summary>
        public static string VM_READ_CACHING_DISABLED_REASON_NO_RO_IMAGE {
            get {
                return ResourceManager.GetString("VM_READ_CACHING_DISABLED_REASON_NO_RO_IMAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This pool was not licensed for read caching when the VM was started ähnelt.
        /// </summary>
        public static string VM_READ_CACHING_DISABLED_REASON_PREV_LICENSE {
            get {
                return ResourceManager.GetString("VM_READ_CACHING_DISABLED_REASON_PREV_LICENSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Read caching is not supported on the type of Storage Repository used by this VM ähnelt.
        /// </summary>
        public static string VM_READ_CACHING_DISABLED_REASON_SR_TYPE {
            get {
                return ResourceManager.GetString("VM_READ_CACHING_DISABLED_REASON_SR_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Read caching has been disabled on the Storage Repository used by this VM ähnelt.
        /// </summary>
        public static string VM_READ_CACHING_DISABLED_REASON_TURNED_OFF {
            get {
                return ResourceManager.GetString("VM_READ_CACHING_DISABLED_REASON_TURNED_OFF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not using read caching ähnelt.
        /// </summary>
        public static string VM_READ_CACHING_DISABLED_SEARCH {
            get {
                return ResourceManager.GetString("VM_READ_CACHING_DISABLED_SEARCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This VM is using read caching ähnelt.
        /// </summary>
        public static string VM_READ_CACHING_ENABLED {
            get {
                return ResourceManager.GetString("VM_READ_CACHING_ENABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Using read caching ähnelt.
        /// </summary>
        public static string VM_READ_CACHING_ENABLED_SEARCH {
            get {
                return ResourceManager.GetString("VM_READ_CACHING_ENABLED_SEARCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VM reverted to &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string VM_REVERTED {
            get {
                return ResourceManager.GetString("VM_REVERTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VM reverting to &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string VM_REVERTING {
            get {
                return ResourceManager.GetString("VM_REVERTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VM reverting... ähnelt.
        /// </summary>
        public static string VM_REVERTING_ELLIPSIS {
            get {
                return ResourceManager.GetString("VM_REVERTING_ELLIPSIS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: Running VM check ähnelt.
        /// </summary>
        public static string VM_RUNNING_CHECK_DESCRIPTION {
            get {
                return ResourceManager.GetString("VM_RUNNING_CHECK_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This VM is shut down. ähnelt.
        /// </summary>
        public static string VM_SHUT_DOWN {
            get {
                return ResourceManager.GetString("VM_SHUT_DOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} ({1} VMs failed) ähnelt.
        /// </summary>
        public static string VM_SNAPSHOT_SCHEDULE_FAILED {
            get {
                return ResourceManager.GetString("VM_SNAPSHOT_SCHEDULE_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VM successfully created ähnelt.
        /// </summary>
        public static string VM_SUCCESSFULLY_CREATED {
            get {
                return ResourceManager.GetString("VM_SUCCESSFULLY_CREATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This VM is suspended. ähnelt.
        /// </summary>
        public static string VM_SUSPENDED {
            get {
                return ResourceManager.GetString("VM_SUSPENDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This VM uses local storage ähnelt.
        /// </summary>
        public static string VM_USES_LOCAL_STORAGE {
            get {
                return ResourceManager.GetString("VM_USES_LOCAL_STORAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The current number of vCPUs is already {0} and cannot be decreased while the VM is running. ähnelt.
        /// </summary>
        public static string VM_VCPU_CANNOT_UNPLUG_LIVE {
            get {
                return ResourceManager.GetString("VM_VCPU_CANNOT_UNPLUG_LIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die vCPU changes will take effect when you restart the VM. ähnelt.
        /// </summary>
        public static string VM_VCPU_CHANGES_NOT_SUPPORTED_MESSAGE {
            get {
                return ResourceManager.GetString("VM_VCPU_CHANGES_NOT_SUPPORTED_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VM &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string VM_X {
            get {
                return ResourceManager.GetString("VM_X", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VMs ähnelt.
        /// </summary>
        public static string VMS {
            get {
                return ResourceManager.GetString("VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VMs in pool &apos;{0}&apos;: ähnelt.
        /// </summary>
        public static string VMS_IN_POOL {
            get {
                return ResourceManager.GetString("VMS_IN_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VMs in server &apos;{0}&apos;: ähnelt.
        /// </summary>
        public static string VMS_IN_SERVER {
            get {
                return ResourceManager.GetString("VMS_IN_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} VMs ähnelt.
        /// </summary>
        public static string VMS_MANY {
            get {
                return ResourceManager.GetString("VMS_MANY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 1 VM ähnelt.
        /// </summary>
        public static string VMS_ONE {
            get {
                return ResourceManager.GetString("VMS_ONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Details: ähnelt.
        /// </summary>
        public static string VMSS_ALERT_DETAILS {
            get {
                return ResourceManager.GetString("VMSS_ALERT_DETAILS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}. {1}: {2} ähnelt.
        /// </summary>
        public static string VMSS_ALERT_VM_ERROR_FORMAT {
            get {
                return ResourceManager.GetString("VMSS_ALERT_VM_ERROR_FORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Snapshot sched&amp;ules ... ähnelt.
        /// </summary>
        public static string VMSS_CONTEXT_MENU {
            get {
                return ResourceManager.GetString("VMSS_CONTEXT_MENU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Send &amp;email notifications about snapshot schedule job alerts ähnelt.
        /// </summary>
        public static string VMSS_EMAIL_CHECKBOX_TEXT {
            get {
                return ResourceManager.GetString("VMSS_EMAIL_CHECKBOX_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer] can send you email notifications when alerts associated with snapshot schedule jobs are raised, such as when a VM snapshot is created or when a snapshot operation fails. ähnelt.
        /// </summary>
        public static string VMSS_EMAIL_PAGE_TEXT {
            get {
                return ResourceManager.GetString("VMSS_EMAIL_PAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Run the new snapshot schedule job when I click Finish ähnelt.
        /// </summary>
        public static string VMSS_FINISH_PAGE_CHECKBOX_TEXT {
            get {
                return ResourceManager.GetString("VMSS_FINISH_PAGE_CHECKBOX_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Review the new snapshot schedule and click Previous if you want to change any settings or Finish to create the new schedule. ähnelt.
        /// </summary>
        public static string VMSS_FINISH_PAGE_TEXT {
            get {
                return ResourceManager.GetString("VMSS_FINISH_PAGE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Create the new schedule ähnelt.
        /// </summary>
        public static string VMSS_FINISH_TITLE {
            get {
                return ResourceManager.GetString("VMSS_FINISH_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool master unreachable ähnelt.
        /// </summary>
        public static string VMSS_HOST_NOT_LIVE {
            get {
                return ResourceManager.GetString("VMSS_HOST_NOT_LIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VM Snaps&amp;hot Schedules... ähnelt.
        /// </summary>
        public static string VMSS_MAIN_MENU {
            get {
                return ResourceManager.GetString("VMSS_MAIN_MENU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Schedule Name ähnelt.
        /// </summary>
        public static string VMSS_NAME {
            get {
                return ResourceManager.GetString("VMSS_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die What do you want to call this schedule? ähnelt.
        /// </summary>
        public static string VMSS_NAME_TITLE {
            get {
                return ResourceManager.GetString("VMSS_NAME_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Job name:\r\n    {0}\r\n\r\nSelected VMs:\r\n    {1}\r\n\r\nSnapshot type:\r\n    {2}\r\n\r\nSchedule:\r\n    {3}\r\n ähnelt.
        /// </summary>
        public static string VMSS_POLICY_SUMMARY {
            get {
                return ResourceManager.GetString("VMSS_POLICY_SUMMARY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Snapshot schedules defined in pool &apos;{0}&apos; ({1} out of {2} VMs currently in schedule): ähnelt.
        /// </summary>
        public static string VMSS_SCHEDULED_SNAPSHOTS_DEFINED_FOR_POOL {
            get {
                return ResourceManager.GetString("VMSS_SCHEDULED_SNAPSHOTS_DEFINED_FOR_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Snapshot schedules defined in server &apos;{0}&apos; ({1} out of {2} VMs currently in schedule): ähnelt.
        /// </summary>
        public static string VMSS_SCHEDULED_SNAPSHOTS_DEFINED_FOR_SERVER {
            get {
                return ResourceManager.GetString("VMSS_SCHEDULED_SNAPSHOTS_DEFINED_FOR_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Succeeded ähnelt.
        /// </summary>
        public static string VMSS_SUCCEEDED {
            get {
                return ResourceManager.GetString("VMSS_SUCCEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die schedule ähnelt.
        /// </summary>
        public static string VMSS_TYPE {
            get {
                return ResourceManager.GetString("VMSS_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Virtual Machines ähnelt.
        /// </summary>
        public static string VMSS_VMS {
            get {
                return ResourceManager.GetString("VMSS_VMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the VMs that you want to schedule snapshots for ähnelt.
        /// </summary>
        public static string VMSS_VMS_TITLE {
            get {
                return ResourceManager.GetString("VMSS_VMS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New snapshot schedule ähnelt.
        /// </summary>
        public static string VMSS_WIZARD_TITLE {
            get {
                return ResourceManager.GetString("VMSS_WIZARD_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not connect to console ähnelt.
        /// </summary>
        public static string VNC_COULD_NOT_CONNECT_CONSOLE {
            get {
                return ResourceManager.GetString("VNC_COULD_NOT_CONNECT_CONSOLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not find any consoles ähnelt.
        /// </summary>
        public static string VNC_COULD_NOT_FIND_CONSOLES {
            get {
                return ResourceManager.GetString("VNC_COULD_NOT_FIND_CONSOLES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sw&amp;itch to Default Desktop ähnelt.
        /// </summary>
        public static string VNC_DEFAULT_DESKTOP {
            get {
                return ResourceManager.GetString("VNC_DEFAULT_DESKTOP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  (Alt+Shift+U) ähnelt.
        /// </summary>
        public static string VNC_DOCK_ALT_SHIFT_U {
            get {
                return ResourceManager.GetString("VNC_DOCK_ALT_SHIFT_U", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  (F11) ähnelt.
        /// </summary>
        public static string VNC_DOCK_F11 {
            get {
                return ResourceManager.GetString("VNC_DOCK_F11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fulls&amp;creen (Ctrl+Alt) ähnelt.
        /// </summary>
        public static string VNC_FULLSCREEN_CTRL_ALT {
            get {
                return ResourceManager.GetString("VNC_FULLSCREEN_CTRL_ALT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fulls&amp;creen (Ctrl+Alt+F) ähnelt.
        /// </summary>
        public static string VNC_FULLSCREEN_CTRL_ALT_F {
            get {
                return ResourceManager.GetString("VNC_FULLSCREEN_CTRL_ALT_F", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fulls&amp;creen (Ctrl+Enter) ähnelt.
        /// </summary>
        public static string VNC_FULLSCREEN_CTRL_ENTER {
            get {
                return ResourceManager.GetString("VNC_FULLSCREEN_CTRL_ENTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fulls&amp;creen (F12) ähnelt.
        /// </summary>
        public static string VNC_FULLSCREEN_F12 {
            get {
                return ResourceManager.GetString("VNC_FULLSCREEN_F12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Press Ctrl+Alt to exit full screen mode ähnelt.
        /// </summary>
        public static string VNC_FULLSCREEN_MESSAGE_CTRL_ALT {
            get {
                return ResourceManager.GetString("VNC_FULLSCREEN_MESSAGE_CTRL_ALT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Press Ctrl+Alt+F to exit full screen mode ähnelt.
        /// </summary>
        public static string VNC_FULLSCREEN_MESSAGE_CTRL_ALT_F {
            get {
                return ResourceManager.GetString("VNC_FULLSCREEN_MESSAGE_CTRL_ALT_F", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Press Ctrl+Enter to exit full screen mode ähnelt.
        /// </summary>
        public static string VNC_FULLSCREEN_MESSAGE_CTRL_ENTER {
            get {
                return ResourceManager.GetString("VNC_FULLSCREEN_MESSAGE_CTRL_ENTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Press F12 to exit full screen mode ähnelt.
        /// </summary>
        public static string VNC_FULLSCREEN_MESSAGE_F12 {
            get {
                return ResourceManager.GetString("VNC_FULLSCREEN_MESSAGE_F12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server has disappeared. ähnelt.
        /// </summary>
        public static string VNC_HOST_GONE {
            get {
                return ResourceManager.GetString("VNC_HOST_GONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Looking for guest console... ähnelt.
        /// </summary>
        public static string VNC_LOOKING {
            get {
                return ResourceManager.GetString("VNC_LOOKING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sw&amp;itch to Remote Desktop ähnelt.
        /// </summary>
        public static string VNC_RDESKTOP {
            get {
                return ResourceManager.GetString("VNC_RDESKTOP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Turn &amp;on Remote Desktop ähnelt.
        /// </summary>
        public static string VNC_RDESKTOP_TURN_ON {
            get {
                return ResourceManager.GetString("VNC_RDESKTOP_TURN_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Redock ähnelt.
        /// </summary>
        public static string VNC_REDOCK {
            get {
                return ResourceManager.GetString("VNC_REDOCK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Undock ähnelt.
        /// </summary>
        public static string VNC_UNDOCK {
            get {
                return ResourceManager.GetString("VNC_UNDOCK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sw&amp;itch to Text Console ähnelt.
        /// </summary>
        public static string VNC_VIRTUAL_CONSOLE {
            get {
                return ResourceManager.GetString("VNC_VIRTUAL_CONSOLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sw&amp;itch to Graphical Console ähnelt.
        /// </summary>
        public static string VNC_X_CONSOLE {
            get {
                return ResourceManager.GetString("VNC_X_CONSOLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Volumes ähnelt.
        /// </summary>
        public static string VOLUMES {
            get {
                return ResourceManager.GetString("VOLUMES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Waiting ähnelt.
        /// </summary>
        public static string WAITING {
            get {
                return ResourceManager.GetString("WAITING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Waiting for user... ähnelt.
        /// </summary>
        public static string WAITING_FOR_USER {
            get {
                return ResourceManager.GetString("WAITING_FOR_USER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wake-on-LAN ähnelt.
        /// </summary>
        public static string WAKE_ON_LAN {
            get {
                return ResourceManager.GetString("WAKE_ON_LAN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Warning ähnelt.
        /// </summary>
        public static string WARNING {
            get {
                return ResourceManager.GetString("WARNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This will delete this ISO permanently, destroying any data on it. ähnelt.
        /// </summary>
        public static string WARNING_DELETE_ISO {
            get {
                return ResourceManager.GetString("WARNING_DELETE_ISO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This will delete these ISOs permanently, destroying any data on them. ähnelt.
        /// </summary>
        public static string WARNING_DELETE_ISO_MULTIPLE {
            get {
                return ResourceManager.GetString("WARNING_DELETE_ISO_MULTIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleting a single snapshot disk is not allowed. This action will delete the entire snapshot, and any other disks attached. ähnelt.
        /// </summary>
        public static string WARNING_DELETE_SNAPSHOT {
            get {
                return ResourceManager.GetString("WARNING_DELETE_SNAPSHOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleting a single snapshot disk is not allowed. This will delete the entire snapshot each disk belongs to, and any other disks attached. ähnelt.
        /// </summary>
        public static string WARNING_DELETE_SNAPSHOT_MULTIPLE {
            get {
                return ResourceManager.GetString("WARNING_DELETE_SNAPSHOT_MULTIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This will delete this system disk permanently, possibly leaving the VM unable to boot. ähnelt.
        /// </summary>
        public static string WARNING_DELETE_SYS_DISK {
            get {
                return ResourceManager.GetString("WARNING_DELETE_SYS_DISK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This will delete these system disks permanently, possibly leaving their VMs unable to boot. ähnelt.
        /// </summary>
        public static string WARNING_DELETE_SYS_DISK_MULTIPLE {
            get {
                return ResourceManager.GetString("WARNING_DELETE_SYS_DISK_MULTIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This will delete this virtual disk permanently, destroying any data on it. ähnelt.
        /// </summary>
        public static string WARNING_DELETE_VD {
            get {
                return ResourceManager.GetString("WARNING_DELETE_VD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This will delete these virtual disks permanently, destroying any data on them. ähnelt.
        /// </summary>
        public static string WARNING_DELETE_VD_MULTIPLE {
            get {
                return ResourceManager.GetString("WARNING_DELETE_VD_MULTIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Web Page ähnelt.
        /// </summary>
        public static string WEB_PAGE {
            get {
                return ResourceManager.GetString("WEB_PAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wednesday ähnelt.
        /// </summary>
        public static string WEDNESDAY_LONG {
            get {
                return ResourceManager.GetString("WEDNESDAY_LONG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wed ähnelt.
        /// </summary>
        public static string WEDNESDAY_SHORT {
            get {
                return ResourceManager.GetString("WEDNESDAY_SHORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Weekly; at {0} every {1} ähnelt.
        /// </summary>
        public static string WEEKLY_SCHEDULE_FORMAT {
            get {
                return ResourceManager.GetString("WEEKLY_SCHEDULE_FORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Windows Update capable ähnelt.
        /// </summary>
        public static string WINDOWS_UPDATE_CAPABLE {
            get {
                return ResourceManager.GetString("WINDOWS_UPDATE_CAPABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not Windows Update capable ähnelt.
        /// </summary>
        public static string WINDOWS_UPDATE_CAPABLE_NOT {
            get {
                return ResourceManager.GetString("WINDOWS_UPDATE_CAPABLE_NOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Next &gt; ähnelt.
        /// </summary>
        public static string WIZARD_BUTTON_NEXT {
            get {
                return ResourceManager.GetString("WIZARD_BUTTON_NEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your new network will be mapped to an existing physical network interface and assigned a VLAN number to use on that interface. You can select the physical interface you would like to use below. ähnelt.
        /// </summary>
        public static string WIZARD_DESC_NETWORK_SETTINGS_EXTERNAL {
            get {
                return ResourceManager.GetString("WIZARD_DESC_NETWORK_SETTINGS_EXTERNAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check the box below if you would like to automatically add this network to new VMs. ähnelt.
        /// </summary>
        public static string WIZARD_DESC_NETWORK_SETTINGS_INTERNAL {
            get {
                return ResourceManager.GetString("WIZARD_DESC_NETWORK_SETTINGS_INTERNAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There was an internal error completing this wizard. Please see the logs for more information. ähnelt.
        /// </summary>
        public static string WIZARD_INTERNAL_ERROR {
            get {
                return ResourceManager.GetString("WIZARD_INTERNAL_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Import OVF/OVA Package ähnelt.
        /// </summary>
        public static string WIZARD_TEXT_IMPORT_OVF {
            get {
                return ResourceManager.GetString("WIZARD_TEXT_IMPORT_OVF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Import Disk Image ähnelt.
        /// </summary>
        public static string WIZARD_TEXT_IMPORT_VHD {
            get {
                return ResourceManager.GetString("WIZARD_TEXT_IMPORT_VHD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Import XVA ähnelt.
        /// </summary>
        public static string WIZARD_TEXT_IMPORT_XVA {
            get {
                return ResourceManager.GetString("WIZARD_TEXT_IMPORT_XVA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Workload Balancing ähnelt.
        /// </summary>
        public static string WLB {
            get {
                return ResourceManager.GetString("WLB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Advanced ähnelt.
        /// </summary>
        public static string WLB_ADVANCED_CONFIGURATION {
            get {
                return ResourceManager.GetString("WLB_ADVANCED_CONFIGURATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  ähnelt.
        /// </summary>
        public static string WLB_ADVANCED_CONFIGURATION_SUBTEXT {
            get {
                return ResourceManager.GetString("WLB_ADVANCED_CONFIGURATION_SUBTEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum ähnelt.
        /// </summary>
        public static string WLB_AUDIT_LOG_MAXIMUM {
            get {
                return ResourceManager.GetString("WLB_AUDIT_LOG_MAXIMUM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Medium ähnelt.
        /// </summary>
        public static string WLB_AUDIT_LOG_MEDIUM {
            get {
                return ResourceManager.GetString("WLB_AUDIT_LOG_MEDIUM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Minimum ähnelt.
        /// </summary>
        public static string WLB_AUDIT_LOG_MINIMUM {
            get {
                return ResourceManager.GetString("WLB_AUDIT_LOG_MINIMUM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ALL ähnelt.
        /// </summary>
        public static string WLB_AUDIT_LOG_USER_OBJECT_ALL {
            get {
                return ResourceManager.GetString("WLB_AUDIT_LOG_USER_OBJECT_ALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Automated optimizations ähnelt.
        /// </summary>
        public static string WLB_AUTO_OPT {
            get {
                return ResourceManager.GetString("WLB_AUTO_OPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Automation ähnelt.
        /// </summary>
        public static string WLB_AUTOMATION {
            get {
                return ResourceManager.GetString("WLB_AUTOMATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure WLB Automation ähnelt.
        /// </summary>
        public static string WLB_AUTOMATION_SUBTEXT {
            get {
                return ResourceManager.GetString("WLB_AUTOMATION_SUBTEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Workload Balancing Configuration for {0} ähnelt.
        /// </summary>
        public static string WLB_CONFIGURATION_DIALOG {
            get {
                return ResourceManager.GetString("WLB_CONFIGURATION_DIALOG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Connect... ähnelt.
        /// </summary>
        public static string WLB_CONNECT {
            get {
                return ResourceManager.GetString("WLB_CONNECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There was an error communicating with the Workload Balancing server.
        ///
        ///Click Reconnect... to update the connection settings. ähnelt.
        /// </summary>
        public static string WLB_CONNECTION_ERROR_BLURB {
            get {
                return ResourceManager.GetString("WLB_CONNECTION_ERROR_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There was an error communicating with the Workload Balancing server:
        ///
        ///A {0} user cannot alter the Workload Balancing settings. ähnelt.
        /// </summary>
        public static string WLB_CONNECTION_ERROR_BLURB_NO_PRIV {
            get {
                return ResourceManager.GetString("WLB_CONNECTION_ERROR_BLURB_NO_PRIV", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Workload Balancing is in control of VM placement. ähnelt.
        /// </summary>
        public static string WLB_CONTROLLING_HOME_SERVER {
            get {
                return ResourceManager.GetString("WLB_CONTROLLING_HOME_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Every Day ähnelt.
        /// </summary>
        public static string WLB_DAY_ALL {
            get {
                return ResourceManager.GetString("WLB_DAY_ALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Weekdays ähnelt.
        /// </summary>
        public static string WLB_DAY_WEEKDAYS {
            get {
                return ResourceManager.GetString("WLB_DAY_WEEKDAYS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Weekends ähnelt.
        /// </summary>
        public static string WLB_DAY_WEEKENDS {
            get {
                return ResourceManager.GetString("WLB_DAY_WEEKENDS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to disable Workload Balancing for pool &apos;{0}&apos;? ähnelt.
        /// </summary>
        public static string WLB_DISABLE_QUERY {
            get {
                return ResourceManager.GetString("WLB_DISABLE_QUERY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disabled ähnelt.
        /// </summary>
        public static string WLB_DISABLED {
            get {
                return ResourceManager.GetString("WLB_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Workload Balancing is currently paused for pool {0}.
        ///
        ///Click Resume to continue analyzing the pool for possible optimizations. ähnelt.
        /// </summary>
        public static string WLB_ENABLE_WLB_BLURB {
            get {
                return ResourceManager.GetString("WLB_ENABLE_WLB_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Workload Balancing is currently paused for pool {0}.
        ///
        ///A {1} user cannot alter the Workload Balancing settings. ähnelt.
        /// </summary>
        public static string WLB_ENABLE_WLB_BLURB_NO_PRIV {
            get {
                return ResourceManager.GetString("WLB_ENABLE_WLB_BLURB_NO_PRIV", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enabled ähnelt.
        /// </summary>
        public static string WLB_ENABLED {
            get {
                return ResourceManager.GetString("WLB_ENABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Workload Balancing is currently analyzing pool {0} for possible optimizations. ähnelt.
        /// </summary>
        public static string WLB_ENABLED_BLURB {
            get {
                return ResourceManager.GetString("WLB_ENABLED_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WLB unknown error. ähnelt.
        /// </summary>
        public static string WLB_ERROR_4000 {
            get {
                return ResourceManager.GetString("WLB_ERROR_4000", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An error occurred when WLB tried to establish a session with [XenServer]. ähnelt.
        /// </summary>
        public static string WLB_ERROR_4001 {
            get {
                return ResourceManager.GetString("WLB_ERROR_4001", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WLB could not log into [XenServer]. It could be due to invalid credentials. ähnelt.
        /// </summary>
        public static string WLB_ERROR_4002 {
            get {
                return ResourceManager.GetString("WLB_ERROR_4002", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WLB cannot connect to [XenServer]. It could be the [XenServer] being offline or an incorrect TCP/IP address. ähnelt.
        /// </summary>
        public static string WLB_ERROR_4003 {
            get {
                return ResourceManager.GetString("WLB_ERROR_4003", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WLB received a null argument from [XenServer], which is not allowed. ähnelt.
        /// </summary>
        public static string WLB_ERROR_4004 {
            get {
                return ResourceManager.GetString("WLB_ERROR_4004", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WLB registry key is missing. ähnelt.
        /// </summary>
        public static string WLB_ERROR_4005 {
            get {
                return ResourceManager.GetString("WLB_ERROR_4005", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WLB received an invalid argument from [XenServer]. ähnelt.
        /// </summary>
        public static string WLB_ERROR_4007 {
            get {
                return ResourceManager.GetString("WLB_ERROR_4007", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WLB data collection service cannot retrieve [XenServer] data. ähnelt.
        /// </summary>
        public static string WLB_ERROR_4008 {
            get {
                return ResourceManager.GetString("WLB_ERROR_4008", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WLB configuration data is missing in WLB database. ähnelt.
        /// </summary>
        public static string WLB_ERROR_4009 {
            get {
                return ResourceManager.GetString("WLB_ERROR_4009", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WLB received an invalid operation from [XenServer]. ähnelt.
        /// </summary>
        public static string WLB_ERROR_4010 {
            get {
                return ResourceManager.GetString("WLB_ERROR_4010", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WLB received an out of range argument from [XenServer]. ähnelt.
        /// </summary>
        public static string WLB_ERROR_4011 {
            get {
                return ResourceManager.GetString("WLB_ERROR_4011", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WLB data collection service is not properly initialized. ähnelt.
        /// </summary>
        public static string WLB_ERROR_4012 {
            get {
                return ResourceManager.GetString("WLB_ERROR_4012", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WLB data collection service cannot migrate or start VMs. ähnelt.
        /// </summary>
        public static string WLB_ERROR_4013 {
            get {
                return ResourceManager.GetString("WLB_ERROR_4013", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WLB received an unknown exception. ähnelt.
        /// </summary>
        public static string WLB_ERROR_4014 {
            get {
                return ResourceManager.GetString("WLB_ERROR_4014", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WLB does not know this pool. ähnelt.
        /// </summary>
        public static string WLB_ERROR_4015 {
            get {
                return ResourceManager.GetString("WLB_ERROR_4015", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WLB does not have current metrics. ähnelt.
        /// </summary>
        public static string WLB_ERROR_4016 {
            get {
                return ResourceManager.GetString("WLB_ERROR_4016", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WLB can&apos;t find a host that has required storage repositories to place a VM.  ähnelt.
        /// </summary>
        public static string WLB_ERROR_4017 {
            get {
                return ResourceManager.GetString("WLB_ERROR_4017", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WLB can&apos;t find required free CPUs to place a VM. ähnelt.
        /// </summary>
        public static string WLB_ERROR_4018 {
            get {
                return ResourceManager.GetString("WLB_ERROR_4018", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WLB can&apos;t find required free memory to place a VM. ähnelt.
        /// </summary>
        public static string WLB_ERROR_4019 {
            get {
                return ResourceManager.GetString("WLB_ERROR_4019", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die One or more hosts in the pool do not have an appropriate license. ähnelt.
        /// </summary>
        public static string WLB_ERROR_4020 {
            get {
                return ResourceManager.GetString("WLB_ERROR_4020", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WLB could not connect to [XenServer] because the supplied credentials were invalid. ähnelt.
        /// </summary>
        public static string WLB_ERROR_4021 {
            get {
                return ResourceManager.GetString("WLB_ERROR_4021", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WLB unable to evacuate an explicitly excluded host. ähnelt.
        /// </summary>
        public static string WLB_ERROR_4022 {
            get {
                return ResourceManager.GetString("WLB_ERROR_4022", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WLB cannot save your configuration at this time.  Verify all Workload Balancing services are running, and try reentering your configuration in a few minutes. ähnelt.
        /// </summary>
        public static string WLB_ERROR_4023 {
            get {
                return ResourceManager.GetString("WLB_ERROR_4023", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer] cannot connect to the WLB Server with the supplied WLB Server credentials. ähnelt.
        /// </summary>
        public static string WLB_ERROR_5 {
            get {
                return ResourceManager.GetString("WLB_ERROR_5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The user WLB uses to connect to [XenServer] either doesn&apos;t have sufficient privileges or doesn&apos;t have access to [XenServer]. Please re-initialize WLB with an valid user. ähnelt.
        /// </summary>
        public static string WLB_ERROR_6 {
            get {
                return ResourceManager.GetString("WLB_ERROR_6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The specified WLB Server could not be found.  Please check your settings. ähnelt.
        /// </summary>
        public static string WLB_ERROR_SERVER_NOT_FOUND {
            get {
                return ResourceManager.GetString("WLB_ERROR_SERVER_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Excluded Hosts ähnelt.
        /// </summary>
        public static string WLB_HOST_EXCLUSION {
            get {
                return ResourceManager.GetString("WLB_HOST_EXCLUSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Host Server ähnelt.
        /// </summary>
        public static string WLB_HOST_SERVER {
            get {
                return ResourceManager.GetString("WLB_HOST_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This pool ({0}) is not currently connected to a Workload Balancing (WLB) server.
        ///
        ///Click Connect... to begin using Workload Balancing to optimize your pool. ähnelt.
        /// </summary>
        public static string WLB_INITIALIZE_WLB_BLURB {
            get {
                return ResourceManager.GetString("WLB_INITIALIZE_WLB_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This pool ({0}) is not currently connected to a Workload Balancing (WLB) server.
        ///
        ///A {1} user cannot alter the Workload Balancing settings. ähnelt.
        /// </summary>
        public static string WLB_INITIALIZE_WLB_BLURB_NO_PRIV {
            get {
                return ResourceManager.GetString("WLB_INITIALIZE_WLB_BLURB_NO_PRIV", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Last PowerOn Succeeded ähnelt.
        /// </summary>
        public static string WLB_LAST_POWERON_SUCCEEDED {
            get {
                return ResourceManager.GetString("WLB_LAST_POWERON_SUCCEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The server does not have a license permitting Workload Balancing. ähnelt.
        /// </summary>
        public static string WLB_LICENSE_DISABLED {
            get {
                return ResourceManager.GetString("WLB_LICENSE_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Metric Weighting ähnelt.
        /// </summary>
        public static string WLB_METRIC_WEIGHTING {
            get {
                return ResourceManager.GetString("WLB_METRIC_WEIGHTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adjust the weighting of WLB metrics ähnelt.
        /// </summary>
        public static string WLB_METRIC_WEIGHTING_SUBTEXT {
            get {
                return ResourceManager.GetString("WLB_METRIC_WEIGHTING_SUBTEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} at {1} ähnelt.
        /// </summary>
        public static string WLB_NEXT_OPT_MODE_SCHEDULE_FORMAT {
            get {
                return ResourceManager.GetString("WLB_NEXT_OPT_MODE_SCHEDULE_FORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Next scheduled mode change ähnelt.
        /// </summary>
        public static string WLB_NEXT_OPT_MODE_SCHEDULE_TEXT {
            get {
                return ResourceManager.GetString("WLB_NEXT_OPT_MODE_SCHEDULE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A {0} user cannot alter the Workload Balancing settings.  ähnelt.
        /// </summary>
        public static string WLB_NO_PERMISSION_BLURB {
            get {
                return ResourceManager.GetString("WLB_NO_PERMISSION_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not configured for pool &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string WLB_NOT_CONFIGURED {
            get {
                return ResourceManager.GetString("WLB_NOT_CONFIGURED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Apply Recommendations ähnelt.
        /// </summary>
        public static string WLB_OPT_APPLY_RECOMMENDATIONS {
            get {
                return ResourceManager.GetString("WLB_OPT_APPLY_RECOMMENDATIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed ähnelt.
        /// </summary>
        public static string WLB_OPT_FAILED {
            get {
                return ResourceManager.GetString("WLB_OPT_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VM ähnelt.
        /// </summary>
        public static string WLB_OPT_HEADER_VM {
            get {
                return ResourceManager.GetString("WLB_OPT_HEADER_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VM/Host ähnelt.
        /// </summary>
        public static string WLB_OPT_HEADER_VMHOST {
            get {
                return ResourceManager.GetString("WLB_OPT_HEADER_VMHOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There was an internal error occurred loading pool optimizations. Please see the logs for more information. ähnelt.
        /// </summary>
        public static string WLB_OPT_LOADING_ERROR {
            get {
                return ResourceManager.GetString("WLB_OPT_LOADING_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Optimal Server ähnelt.
        /// </summary>
        public static string WLB_OPT_MENU_OPTIMAL_SERVER {
            get {
                return ResourceManager.GetString("WLB_OPT_MENU_OPTIMAL_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool optimization mode ähnelt.
        /// </summary>
        public static string WLB_OPT_MODE {
            get {
                return ResourceManager.GetString("WLB_OPT_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Specify the optimization mode to use when placing VMs in this pool. ähnelt.
        /// </summary>
        public static string WLB_OPT_MODE_BLURB {
            get {
                return ResourceManager.GetString("WLB_OPT_MODE_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Place the largest possible number of VMs on each server  ähnelt.
        /// </summary>
        public static string WLB_OPT_MODE_DENSITY_BLURB {
            get {
                return ResourceManager.GetString("WLB_OPT_MODE_DENSITY_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximize Density ähnelt.
        /// </summary>
        public static string WLB_OPT_MODE_MAXIMIZEDENSITY {
            get {
                return ResourceManager.GetString("WLB_OPT_MODE_MAXIMIZEDENSITY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximize Performance ähnelt.
        /// </summary>
        public static string WLB_OPT_MODE_MAXIMIZEPERFORMANCE {
            get {
                return ResourceManager.GetString("WLB_OPT_MODE_MAXIMIZEPERFORMANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Guarantee performance metrics for placed VMs  ähnelt.
        /// </summary>
        public static string WLB_OPT_MODE_PERF_BLURB {
            get {
                return ResourceManager.GetString("WLB_OPT_MODE_PERF_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Optimized successfully. ähnelt.
        /// </summary>
        public static string WLB_OPT_OK_NOTICE_TEXT {
            get {
                return ResourceManager.GetString("WLB_OPT_OK_NOTICE_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Power off ähnelt.
        /// </summary>
        public static string WLB_OPT_OPERATION_HOST_POWEROFF {
            get {
                return ResourceManager.GetString("WLB_OPT_OPERATION_HOST_POWEROFF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Power on ähnelt.
        /// </summary>
        public static string WLB_OPT_OPERATION_HOST_POWERON {
            get {
                return ResourceManager.GetString("WLB_OPT_OPERATION_HOST_POWERON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Relocate from &apos;{0}&apos; to &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string WLB_OPT_OPERATION_VM {
            get {
                return ResourceManager.GetString("WLB_OPT_OPERATION_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Optimizing ... ähnelt.
        /// </summary>
        public static string WLB_OPT_OPTIMIZING {
            get {
                return ResourceManager.GetString("WLB_OPT_OPTIMIZING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No recommendations at this time. ähnelt.
        /// </summary>
        public static string WLB_OPT_POOL_NO_RECOMMENDATION {
            get {
                return ResourceManager.GetString("WLB_OPT_POOL_NO_RECOMMENDATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There is not enough free memory available on the other servers in the pool to finish optimizing pool. ähnelt.
        /// </summary>
        public static string WLB_OPT_POOL_NOT_ENOUGH_MEMORY {
            get {
                return ResourceManager.GetString("WLB_OPT_POOL_NOT_ENOUGH_MEMORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Consolidation ähnelt.
        /// </summary>
        public static string WLB_OPT_REASON_CONSOLIDATE {
            get {
                return ResourceManager.GetString("WLB_OPT_REASON_CONSOLIDATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die CPU ähnelt.
        /// </summary>
        public static string WLB_OPT_REASON_CPU {
            get {
                return ResourceManager.GetString("WLB_OPT_REASON_CPU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disk ähnelt.
        /// </summary>
        public static string WLB_OPT_REASON_DISK {
            get {
                return ResourceManager.GetString("WLB_OPT_REASON_DISK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disk Reads ähnelt.
        /// </summary>
        public static string WLB_OPT_REASON_DISKREAD {
            get {
                return ResourceManager.GetString("WLB_OPT_REASON_DISKREAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disk Writes ähnelt.
        /// </summary>
        public static string WLB_OPT_REASON_DISKWRITE {
            get {
                return ResourceManager.GetString("WLB_OPT_REASON_DISKWRITE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Load Average ähnelt.
        /// </summary>
        public static string WLB_OPT_REASON_LOADAVERAGE {
            get {
                return ResourceManager.GetString("WLB_OPT_REASON_LOADAVERAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Memory ähnelt.
        /// </summary>
        public static string WLB_OPT_REASON_MEMORY {
            get {
                return ResourceManager.GetString("WLB_OPT_REASON_MEMORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network ähnelt.
        /// </summary>
        public static string WLB_OPT_REASON_NETWORK {
            get {
                return ResourceManager.GetString("WLB_OPT_REASON_NETWORK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network Reads ähnelt.
        /// </summary>
        public static string WLB_OPT_REASON_NETWORKREAD {
            get {
                return ResourceManager.GetString("WLB_OPT_REASON_NETWORKREAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network Writes ähnelt.
        /// </summary>
        public static string WLB_OPT_REASON_NETWORKWRITE {
            get {
                return ResourceManager.GetString("WLB_OPT_REASON_NETWORKWRITE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die None ähnelt.
        /// </summary>
        public static string WLB_OPT_REASON_NONE {
            get {
                return ResourceManager.GetString("WLB_OPT_REASON_NONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Release Resource ähnelt.
        /// </summary>
        public static string WLB_OPT_REASON_POWEROFF {
            get {
                return ResourceManager.GetString("WLB_OPT_REASON_POWEROFF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resource required ähnelt.
        /// </summary>
        public static string WLB_OPT_REASON_POWERON {
            get {
                return ResourceManager.GetString("WLB_OPT_REASON_POWERON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Optimization Mode ähnelt.
        /// </summary>
        public static string WLB_OPTIMIZATION_MODE {
            get {
                return ResourceManager.GetString("WLB_OPTIMIZATION_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adjust the WLB optimization mode ähnelt.
        /// </summary>
        public static string WLB_OPTIMIZATION_MODE_SUBTEXT {
            get {
                return ResourceManager.GetString("WLB_OPTIMIZATION_MODE_SUBTEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Optimizing pool {0} ähnelt.
        /// </summary>
        public static string WLB_OPTIMIZING_POOL {
            get {
                return ResourceManager.GetString("WLB_OPTIMIZING_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please wait... ähnelt.
        /// </summary>
        public static string WLB_PLEASE_WAIT {
            get {
                return ResourceManager.GetString("WLB_PLEASE_WAIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Power Management ähnelt.
        /// </summary>
        public static string WLB_POWERMANAGEMENT {
            get {
                return ResourceManager.GetString("WLB_POWERMANAGEMENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure WLB Power Management ähnelt.
        /// </summary>
        public static string WLB_POWERMANAGEMENT_SUBTEXT {
            get {
                return ResourceManager.GetString("WLB_POWERMANAGEMENT_SUBTEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PowerOn Mode ähnelt.
        /// </summary>
        public static string WLB_POWERON_MODE {
            get {
                return ResourceManager.GetString("WLB_POWERON_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Optimization Mode is scheduled to be {0}, but it currently set to {1}.
        ///
        ///Would you like to adjust the current Optimization Mode to match the schedule? ähnelt.
        /// </summary>
        public static string WLB_PROMPT_FOR_MODE_CHANGE_BLURB {
            get {
                return ResourceManager.GetString("WLB_PROMPT_FOR_MODE_CHANGE_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Apply Optimization Mode Schedule ähnelt.
        /// </summary>
        public static string WLB_PROMPT_FOR_MODE_CHANGE_CAPTION {
            get {
                return ResourceManager.GetString("WLB_PROMPT_FOR_MODE_CHANGE_CAPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Power management ähnelt.
        /// </summary>
        public static string WLB_PWR_MGT {
            get {
                return ResourceManager.GetString("WLB_PWR_MGT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configuration Error: {0} ähnelt.
        /// </summary>
        public static string WLB_RECONFIGURE {
            get {
                return ResourceManager.GetString("WLB_RECONFIGURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The stored [XenServer] credentials are no longer valid.  Please update the connection settings for Workload Balancing. ähnelt.
        /// </summary>
        public static string WLB_RECONFIGURE_CREDS {
            get {
                return ResourceManager.GetString("WLB_RECONFIGURE_CREDS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Re&amp;connect... ähnelt.
        /// </summary>
        public static string WLB_RECONNECT {
            get {
                return ResourceManager.GetString("WLB_RECONNECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Back to Parent Report ähnelt.
        /// </summary>
        public static string WLB_REPORT_BACKMENUITEMTEXT {
            get {
                return ResourceManager.GetString("WLB_REPORT_BACKMENUITEMTEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Back to Parent Report ähnelt.
        /// </summary>
        public static string WLB_REPORT_BACKTOPARENTREPORT {
            get {
                return ResourceManager.GetString("WLB_REPORT_BACKTOPARENTREPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An error occurred when attempting to bind report datasources: {0} ähnelt.
        /// </summary>
        public static string WLB_REPORT_BIND_DATASOURCE {
            get {
                return ResourceManager.GetString("WLB_REPORT_BIND_DATASOURCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change Credentials ähnelt.
        /// </summary>
        public static string WLB_REPORT_CHANGECREDENTIALSTEXT {
            get {
                return ResourceManager.GetString("WLB_REPORT_CHANGECREDENTIALSTEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current Page ähnelt.
        /// </summary>
        public static string WLB_REPORT_CURRENTPAGETEXTBOXTOOLTIP {
            get {
                return ResourceManager.GetString("WLB_REPORT_CURRENTPAGETEXTBOXTOOLTIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Date Ordering ähnelt.
        /// </summary>
        public static string WLB_REPORT_DATE_ORDERING_CAPTION {
            get {
                return ResourceManager.GetString("WLB_REPORT_DATE_ORDERING_CAPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please select an End Date that is greater than, or equal to, the Start Date ähnelt.
        /// </summary>
        public static string WLB_REPORT_DATE_ORDERING_MESSAGE {
            get {
                return ResourceManager.GetString("WLB_REPORT_DATE_ORDERING_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die definitions ähnelt.
        /// </summary>
        public static string WLB_REPORT_DEFINITIONS {
            get {
                return ResourceManager.GetString("WLB_REPORT_DEFINITIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to unsubscribe report &apos;{0}&apos;? ähnelt.
        /// </summary>
        public static string WLB_REPORT_DELETE_SUBSCRIPTION_QUERY {
            get {
                return ResourceManager.GetString("WLB_REPORT_DELETE_SUBSCRIPTION_QUERY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete Report Subscription ähnelt.
        /// </summary>
        public static string WLB_REPORT_DELETE_SUBSCRIPTION_TITLE {
            get {
                return ResourceManager.GetString("WLB_REPORT_DELETE_SUBSCRIPTION_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show or Hide Document Map ähnelt.
        /// </summary>
        public static string WLB_REPORT_DOCUMENTMAP {
            get {
                return ResourceManager.GetString("WLB_REPORT_DOCUMENTMAP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unable to generate localized report label parameters: {0} ähnelt.
        /// </summary>
        public static string WLB_REPORT_ERROR_LOCALIZED_PARAMS {
            get {
                return ResourceManager.GetString("WLB_REPORT_ERROR_LOCALIZED_PARAMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Everyday ähnelt.
        /// </summary>
        public static string WLB_REPORT_EVERYDAY {
            get {
                return ResourceManager.GetString("WLB_REPORT_EVERYDAY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export ähnelt.
        /// </summary>
        public static string WLB_REPORT_EXPORT {
            get {
                return ResourceManager.GetString("WLB_REPORT_EXPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exporting to {0} ähnelt.
        /// </summary>
        public static string WLB_REPORT_EXPORTING {
            get {
                return ResourceManager.GetString("WLB_REPORT_EXPORTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid Value ähnelt.
        /// </summary>
        public static string WLB_REPORT_FALSEVALUETEXT {
            get {
                return ResourceManager.GetString("WLB_REPORT_FALSEVALUETEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Find ähnelt.
        /// </summary>
        public static string WLB_REPORT_FIND {
            get {
                return ResourceManager.GetString("WLB_REPORT_FIND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Find Next ähnelt.
        /// </summary>
        public static string WLB_REPORT_FINDNEXT {
            get {
                return ResourceManager.GetString("WLB_REPORT_FINDNEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die First Page ähnelt.
        /// </summary>
        public static string WLB_REPORT_FIRSTPAGE {
            get {
                return ResourceManager.GetString("WLB_REPORT_FIRSTPAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The WLB Server was unable to process the report.  Try refining your filter criteria to a smaller date range and try again. ähnelt.
        /// </summary>
        public static string WLB_REPORT_HTTP_403 {
            get {
                return ResourceManager.GetString("WLB_REPORT_HTTP_403", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The WLB Server did not respond to the report request. ähnelt.
        /// </summary>
        public static string WLB_REPORT_HTTP_500 {
            get {
                return ResourceManager.GetString("WLB_REPORT_HTTP_500", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Last month ähnelt.
        /// </summary>
        public static string WLB_REPORT_LASTMONTH {
            get {
                return ResourceManager.GetString("WLB_REPORT_LASTMONTH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Last Page ähnelt.
        /// </summary>
        public static string WLB_REPORT_LASTPAGE {
            get {
                return ResourceManager.GetString("WLB_REPORT_LASTPAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Last week ähnelt.
        /// </summary>
        public static string WLB_REPORT_LASTWEEK {
            get {
                return ResourceManager.GetString("WLB_REPORT_LASTWEEK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Last {0} weeks ähnelt.
        /// </summary>
        public static string WLB_REPORT_LASTWEEKS {
            get {
                return ResourceManager.GetString("WLB_REPORT_LASTWEEKS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Never ähnelt.
        /// </summary>
        public static string WLB_REPORT_NEVER {
            get {
                return ResourceManager.GetString("WLB_REPORT_NEVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Next ähnelt.
        /// </summary>
        public static string WLB_REPORT_NEXT {
            get {
                return ResourceManager.GetString("WLB_REPORT_NEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Next Page ähnelt.
        /// </summary>
        public static string WLB_REPORT_NEXTPAGE {
            get {
                return ResourceManager.GetString("WLB_REPORT_NEXTPAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No More Matches ähnelt.
        /// </summary>
        public static string WLB_REPORT_NOMOREMATCHES {
            get {
                return ResourceManager.GetString("WLB_REPORT_NOMOREMATCHES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die of ähnelt.
        /// </summary>
        public static string WLB_REPORT_PAGEOF {
            get {
                return ResourceManager.GetString("WLB_REPORT_PAGEOF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Page Setup ähnelt.
        /// </summary>
        public static string WLB_REPORT_PAGESETUP {
            get {
                return ResourceManager.GetString("WLB_REPORT_PAGESETUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Page Width ähnelt.
        /// </summary>
        public static string WLB_REPORT_PAGEWIDTH {
            get {
                return ResourceManager.GetString("WLB_REPORT_PAGEWIDTH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameters ähnelt.
        /// </summary>
        public static string WLB_REPORT_PARAMETERS {
            get {
                return ResourceManager.GetString("WLB_REPORT_PARAMETERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please enter your password ähnelt.
        /// </summary>
        public static string WLB_REPORT_PASSWORDPROMPT {
            get {
                return ResourceManager.GetString("WLB_REPORT_PASSWORDPROMPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No longer connected to pool &quot;{0}&quot;.  Please reconnect to the pool and try again. ähnelt.
        /// </summary>
        public static string WLB_REPORT_POOL_CONNECTION_LOST {
            get {
                return ResourceManager.GetString("WLB_REPORT_POOL_CONNECTION_LOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool Health ähnelt.
        /// </summary>
        public static string WLB_REPORT_POOL_HEALTH {
            get {
                return ResourceManager.GetString("WLB_REPORT_POOL_HEALTH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Previous Page ähnelt.
        /// </summary>
        public static string WLB_REPORT_PREVIOUSPAGE {
            get {
                return ResourceManager.GetString("WLB_REPORT_PREVIOUSPAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Print ähnelt.
        /// </summary>
        public static string WLB_REPORT_PRINT {
            get {
                return ResourceManager.GetString("WLB_REPORT_PRINT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Print Layout ähnelt.
        /// </summary>
        public static string WLB_REPORT_PRINTLAYOUT {
            get {
                return ResourceManager.GetString("WLB_REPORT_PRINTLAYOUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Processing Please Wait ähnelt.
        /// </summary>
        public static string WLB_REPORT_PROCESSING {
            get {
                return ResourceManager.GetString("WLB_REPORT_PROCESSING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Refresh ähnelt.
        /// </summary>
        public static string WLB_REPORT_REFRESH {
            get {
                return ResourceManager.GetString("WLB_REPORT_REFRESH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An error occurred when attempting to run the remote query: {0} ähnelt.
        /// </summary>
        public static string WLB_REPORT_REMOTE_QUERY {
            get {
                return ResourceManager.GetString("WLB_REPORT_REMOTE_QUERY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Search ähnelt.
        /// </summary>
        public static string WLB_REPORT_SEARCH {
            get {
                return ResourceManager.GetString("WLB_REPORT_SEARCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select ähnelt.
        /// </summary>
        public static string WLB_REPORT_SELECT {
            get {
                return ResourceManager.GetString("WLB_REPORT_SELECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select All ähnelt.
        /// </summary>
        public static string WLB_REPORT_SELECTALL {
            get {
                return ResourceManager.GetString("WLB_REPORT_SELECTALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An error occurred when attempting to set report parameters: {0} ähnelt.
        /// </summary>
        public static string WLB_REPORT_SET_PARAMS {
            get {
                return ResourceManager.GetString("WLB_REPORT_SET_PARAMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start ähnelt.
        /// </summary>
        public static string WLB_REPORT_START {
            get {
                return ResourceManager.GetString("WLB_REPORT_START", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Stop Rendering ähnelt.
        /// </summary>
        public static string WLB_REPORT_STOPRENDERING {
            get {
                return ResourceManager.GetString("WLB_REPORT_STOPRENDERING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Text not found ähnelt.
        /// </summary>
        public static string WLB_REPORT_TEXTNOTFOUND {
            get {
                return ResourceManager.GetString("WLB_REPORT_TEXTNOTFOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Total pages ähnelt.
        /// </summary>
        public static string WLB_REPORT_TOTALPAGES {
            get {
                return ResourceManager.GetString("WLB_REPORT_TOTALPAGES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die User name ähnelt.
        /// </summary>
        public static string WLB_REPORT_USERNAME {
            get {
                return ResourceManager.GetString("WLB_REPORT_USERNAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die View All ähnelt.
        /// </summary>
        public static string WLB_REPORT_VIEW_ALL {
            get {
                return ResourceManager.GetString("WLB_REPORT_VIEW_ALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Basic View ähnelt.
        /// </summary>
        public static string WLB_REPORT_VIEW_BASIC {
            get {
                return ResourceManager.GetString("WLB_REPORT_VIEW_BASIC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Custom View ähnelt.
        /// </summary>
        public static string WLB_REPORT_VIEW_CUSTOM {
            get {
                return ResourceManager.GetString("WLB_REPORT_VIEW_CUSTOM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Filter Item ähnelt.
        /// </summary>
        public static string WLB_REPORT_VIEW_TAG_COLUMN_HEADER {
            get {
                return ResourceManager.GetString("WLB_REPORT_VIEW_TAG_COLUMN_HEADER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Verbose View ähnelt.
        /// </summary>
        public static string WLB_REPORT_VIEW_VERBOSE {
            get {
                return ResourceManager.GetString("WLB_REPORT_VIEW_VERBOSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die View Report ähnelt.
        /// </summary>
        public static string WLB_REPORT_VIEWREPORT {
            get {
                return ResourceManager.GetString("WLB_REPORT_VIEWREPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whole Page ähnelt.
        /// </summary>
        public static string WLB_REPORT_WHOLEPAGE {
            get {
                return ResourceManager.GetString("WLB_REPORT_WHOLEPAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Zoom ähnelt.
        /// </summary>
        public static string WLB_REPORT_ZOOM {
            get {
                return ResourceManager.GetString("WLB_REPORT_ZOOM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Retrieving WLB Configuration ähnelt.
        /// </summary>
        public static string WLB_RETRIEVING_CONFIGURATION {
            get {
                return ResourceManager.GetString("WLB_RETRIEVING_CONFIGURATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Saving Workload Balancing settings ähnelt.
        /// </summary>
        public static string WLB_SAVING_SETTINGS {
            get {
                return ResourceManager.GetString("WLB_SAVING_SETTINGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} (Scheduled) ähnelt.
        /// </summary>
        public static string WLB_SCHEDULED_OPT_MODE {
            get {
                return ResourceManager.GetString("WLB_SCHEDULED_OPT_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server Credentials ähnelt.
        /// </summary>
        public static string WLB_SERVER_CREDENTIALS {
            get {
                return ResourceManager.GetString("WLB_SERVER_CREDENTIALS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Update the credentials used for WLB communications ähnelt.
        /// </summary>
        public static string WLB_SERVER_CREDENTIALS_SUBTEXT {
            get {
                return ResourceManager.GetString("WLB_SERVER_CREDENTIALS_SUBTEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Workload Balancing server name ähnelt.
        /// </summary>
        public static string WLB_SERVER_URL {
            get {
                return ResourceManager.GetString("WLB_SERVER_URL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Critical ähnelt.
        /// </summary>
        public static string WLB_SEVERITY_CRITICAL {
            get {
                return ResourceManager.GetString("WLB_SEVERITY_CRITICAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die High ähnelt.
        /// </summary>
        public static string WLB_SEVERITY_HIGH {
            get {
                return ResourceManager.GetString("WLB_SEVERITY_HIGH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Low ähnelt.
        /// </summary>
        public static string WLB_SEVERITY_LOW {
            get {
                return ResourceManager.GetString("WLB_SEVERITY_LOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Medium ähnelt.
        /// </summary>
        public static string WLB_SEVERITY_MEDIUM {
            get {
                return ResourceManager.GetString("WLB_SEVERITY_MEDIUM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Workload Balancing adjusts grooming history automatically for SQL Server Express databases. ähnelt.
        /// </summary>
        public static string WLB_SQLEXPRESS_GROOMING_BLURB {
            get {
                return ResourceManager.GetString("WLB_SQLEXPRESS_GROOMING_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Workload Balancing status ähnelt.
        /// </summary>
        public static string WLB_STATUS {
            get {
                return ResourceManager.GetString("WLB_STATUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bcc ähnelt.
        /// </summary>
        public static string WLB_SUBSCRIPTION_BCC {
            get {
                return ResourceManager.GetString("WLB_SUBSCRIPTION_BCC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cc ähnelt.
        /// </summary>
        public static string WLB_SUBSCRIPTION_CC {
            get {
                return ResourceManager.GetString("WLB_SUBSCRIPTION_CC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Comment ähnelt.
        /// </summary>
        public static string WLB_SUBSCRIPTION_COMMENT {
            get {
                return ResourceManager.GetString("WLB_SUBSCRIPTION_COMMENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Data Range ähnelt.
        /// </summary>
        public static string WLB_SUBSCRIPTION_DATARANGE {
            get {
                return ResourceManager.GetString("WLB_SUBSCRIPTION_DATARANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deliver On ähnelt.
        /// </summary>
        public static string WLB_SUBSCRIPTION_DELIVERON {
            get {
                return ResourceManager.GetString("WLB_SUBSCRIPTION_DELIVERON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Edited  By ähnelt.
        /// </summary>
        public static string WLB_SUBSCRIPTION_EDITED_BY {
            get {
                return ResourceManager.GetString("WLB_SUBSCRIPTION_EDITED_BY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Edited On ähnelt.
        /// </summary>
        public static string WLB_SUBSCRIPTION_EDITED_ON {
            get {
                return ResourceManager.GetString("WLB_SUBSCRIPTION_EDITED_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ending ähnelt.
        /// </summary>
        public static string WLB_SUBSCRIPTION_ENDING {
            get {
                return ResourceManager.GetString("WLB_SUBSCRIPTION_ENDING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An error occurred while saving subscription: {0} ähnelt.
        /// </summary>
        public static string WLB_SUBSCRIPTION_ERROR {
            get {
                return ResourceManager.GetString("WLB_SUBSCRIPTION_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Format ähnelt.
        /// </summary>
        public static string WLB_SUBSCRIPTION_FORMAT {
            get {
                return ResourceManager.GetString("WLB_SUBSCRIPTION_FORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Last Sent ähnelt.
        /// </summary>
        public static string WLB_SUBSCRIPTION_LASTSENT {
            get {
                return ResourceManager.GetString("WLB_SUBSCRIPTION_LASTSENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} at {1} ähnelt.
        /// </summary>
        public static string WLB_SUBSCRIPTION_LASTSENT_TIME {
            get {
                return ResourceManager.GetString("WLB_SUBSCRIPTION_LASTSENT_TIME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reply-To ähnelt.
        /// </summary>
        public static string WLB_SUBSCRIPTION_REPLYTO {
            get {
                return ResourceManager.GetString("WLB_SUBSCRIPTION_REPLYTO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Run At ähnelt.
        /// </summary>
        public static string WLB_SUBSCRIPTION_RUNAT {
            get {
                return ResourceManager.GetString("WLB_SUBSCRIPTION_RUNAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Starting ähnelt.
        /// </summary>
        public static string WLB_SUBSCRIPTION_STARTING {
            get {
                return ResourceManager.GetString("WLB_SUBSCRIPTION_STARTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Subject ähnelt.
        /// </summary>
        public static string WLB_SUBSCRIPTION_SUBJECT {
            get {
                return ResourceManager.GetString("WLB_SUBSCRIPTION_SUBJECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die To ähnelt.
        /// </summary>
        public static string WLB_SUBSCRIPTION_TO {
            get {
                return ResourceManager.GetString("WLB_SUBSCRIPTION_TO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Subscriptions ähnelt.
        /// </summary>
        public static string WLB_SUBSCRIPTIONS {
            get {
                return ResourceManager.GetString("WLB_SUBSCRIPTIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The specified schedule conflicts with an existing schedule. ähnelt.
        /// </summary>
        public static string WLB_TASK_SCHEDULE_CONFLICT_BLURB {
            get {
                return ResourceManager.GetString("WLB_TASK_SCHEDULE_CONFLICT_BLURB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Conflicting Schedule ähnelt.
        /// </summary>
        public static string WLB_TASK_SCHEDULE_CONFLICT_TITLE {
            get {
                return ResourceManager.GetString("WLB_TASK_SCHEDULE_CONFLICT_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Critical Thresholds ähnelt.
        /// </summary>
        public static string WLB_THRESHOLDS {
            get {
                return ResourceManager.GetString("WLB_THRESHOLDS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adjust Critical thresholds for WLB metrics ähnelt.
        /// </summary>
        public static string WLB_THRESHOLDS_SUBTEXT {
            get {
                return ResourceManager.GetString("WLB_THRESHOLDS_SUBTEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Confirm Automated Power Management ähnelt.
        /// </summary>
        public static string WLB_UNTESTED_HOST_CAPTION {
            get {
                return ResourceManager.GetString("WLB_UNTESTED_HOST_CAPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This Host has either never been remotely powered on, or failed to power on correctly in the past.
        ///
        ///Are you sure you want to enable automated power management for this Host? ähnelt.
        /// </summary>
        public static string WLB_UNTESTED_HOST_WARNING {
            get {
                return ResourceManager.GetString("WLB_UNTESTED_HOST_WARNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Workload Balancing has been paused for pool &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string WLB_WAS_DISABLED {
            get {
                return ResourceManager.GetString("WLB_WAS_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Report exported successfully ähnelt.
        /// </summary>
        public static string WLBREPORT_EXPORT_SUCC {
            get {
                return ResourceManager.GetString("WLBREPORT_EXPORT_SUCC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Host Health History ähnelt.
        /// </summary>
        public static string WLBREPORT_HOST_HEALTH_HISTORY {
            get {
                return ResourceManager.GetString("WLBREPORT_HOST_HEALTH_HISTORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Optimization Performance History ähnelt.
        /// </summary>
        public static string WLBREPORT_OPTIMIZATION_PERFORMANCE_HISTORY {
            get {
                return ResourceManager.GetString("WLBREPORT_OPTIMIZATION_PERFORMANCE_HISTORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool Audit Log History ähnelt.
        /// </summary>
        public static string WLBREPORT_POOL_AUDIT_HISTORY {
            get {
                return ResourceManager.GetString("WLBREPORT_POOL_AUDIT_HISTORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool Connection Lost ähnelt.
        /// </summary>
        public static string WLBREPORT_POOL_CONNECTION_LOST_CAPTION {
            get {
                return ResourceManager.GetString("WLBREPORT_POOL_CONNECTION_LOST_CAPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool Health ähnelt.
        /// </summary>
        public static string WLBREPORT_POOL_HEALTH {
            get {
                return ResourceManager.GetString("WLBREPORT_POOL_HEALTH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool Health History ähnelt.
        /// </summary>
        public static string WLBREPORT_POOL_HEALTH_HISTORY {
            get {
                return ResourceManager.GetString("WLBREPORT_POOL_HEALTH_HISTORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pool Optimization History ähnelt.
        /// </summary>
        public static string WLBREPORT_POOL_OPTIMIZATION_HISTORY {
            get {
                return ResourceManager.GetString("WLBREPORT_POOL_OPTIMIZATION_HISTORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An error occurred when attempting to open the Workload Balancing report window.  Please check the report configuration file. ähnelt.
        /// </summary>
        public static string WLBREPORT_REPORT_CONFIG_ERROR {
            get {
                return ResourceManager.GetString("WLBREPORT_REPORT_CONFIG_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Virtual Machine Motion History ähnelt.
        /// </summary>
        public static string WLBREPORT_VM_MOTION_HISTORY {
            get {
                return ResourceManager.GetString("WLBREPORT_VM_MOTION_HISTORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Virtual Machine Motion History ähnelt.
        /// </summary>
        public static string WLBREPORT_VM_MOVEMENT_HISTORY {
            get {
                return ResourceManager.GetString("WLBREPORT_VM_MOVEMENT_HISTORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Virtual Machine Performance History ähnelt.
        /// </summary>
        public static string WLBREPORT_VM_PERFORMANCE_HISTORY {
            get {
                return ResourceManager.GetString("WLBREPORT_VM_PERFORMANCE_HISTORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Workload Balancing ähnelt.
        /// </summary>
        public static string WORKLOAD_BALANCING {
            get {
                return ResourceManager.GetString("WORKLOAD_BALANCING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are attempting an action which requires additional privileges to those granted by your current role. ähnelt.
        /// </summary>
        public static string WRONG_ROLE_DESC {
            get {
                return ResourceManager.GetString("WRONG_ROLE_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} (hidden) ähnelt.
        /// </summary>
        public static string X_HIDDEN {
            get {
                return ResourceManager.GetString("X_HIDDEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The {0} feature was deprecated in {1} and may be unavailable in future versions ähnelt.
        /// </summary>
        public static string X_IS_DEPRECATED_IN_X {
            get {
                return ResourceManager.GetString("X_IS_DEPRECATED_IN_X", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The {0} feature is not available in {1} and later versions ähnelt.
        /// </summary>
        public static string X_IS_REMOVED_IN_X {
            get {
                return ResourceManager.GetString("X_IS_REMOVED_IN_X", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} with warning: {1} ähnelt.
        /// </summary>
        public static string X_WITH_WARNING_X {
            get {
                return ResourceManager.GetString("X_WITH_WARNING_X", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenCenter] ähnelt.
        /// </summary>
        public static string XENCENTER {
            get {
                return ResourceManager.GetString("XENCENTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenCenter] Settings|*.config ähnelt.
        /// </summary>
        public static string XENCENTER_CONFIG_FILTER {
            get {
                return ResourceManager.GetString("XENCENTER_CONFIG_FILTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Newer [XenCenter] Available ähnelt.
        /// </summary>
        public static string XENCENTER_NEWER_AVAILABLE {
            get {
                return ResourceManager.GetString("XENCENTER_NEWER_AVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenCenter] version check ähnelt.
        /// </summary>
        public static string XENCENTER_VERSION_CHECK_DESCRIPTION {
            get {
                return ResourceManager.GetString("XENCENTER_VERSION_CHECK_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Saved Searches (*.{0})|*.{0} ähnelt.
        /// </summary>
        public static string XENSEARCH_SAVED_SEARCH {
            get {
                return ResourceManager.GetString("XENSEARCH_SAVED_SEARCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer] ähnelt.
        /// </summary>
        public static string XENSERVER {
            get {
                return ResourceManager.GetString("XENSERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer] [BRANDING_VERSION_6_2] ähnelt.
        /// </summary>
        public static string XENSERVER_6_2 {
            get {
                return ResourceManager.GetString("XENSERVER_6_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer] [BRANDING_VERSION_6_5] ähnelt.
        /// </summary>
        public static string XENSERVER_6_5 {
            get {
                return ResourceManager.GetString("XENSERVER_6_5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer] Templates ähnelt.
        /// </summary>
        public static string XENSERVER_TEMPLATES {
            get {
                return ResourceManager.GetString("XENSERVER_TEMPLATES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die License Upgrade Required ähnelt.
        /// </summary>
        public static string XENSERVER_UPGRADE_REQUIRED {
            get {
                return ResourceManager.GetString("XENSERVER_UPGRADE_REQUIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer] Backup Files ähnelt.
        /// </summary>
        public static string XS_BACKUP_FILES {
            get {
                return ResourceManager.GetString("XS_BACKUP_FILES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer] License Files ähnelt.
        /// </summary>
        public static string XS_LICENSE_FILES {
            get {
                return ResourceManager.GetString("XS_LICENSE_FILES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer product] Tools DVDs will now be inserted into the DVD drive of each of the selected VMs. Any disks currently in the drives will be ejected.
        ///
        ///You will need to navigate to the Console on each of the selected VMs to complete the installation. ähnelt.
        /// </summary>
        public static string XS_TOOLS_MESSAGE_MORE_THAN_ONE_VM {
            get {
                return ResourceManager.GetString("XS_TOOLS_MESSAGE_MORE_THAN_ONE_VM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The [XenServer product] Tools SR could not be found. ähnelt.
        /// </summary>
        public static string XS_TOOLS_SR_NOT_FOUND {
            get {
                return ResourceManager.GetString("XS_TOOLS_SR_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [XenServer] Update Files ({0})|{0}|All files ({1})|{1} ähnelt.
        /// </summary>
        public static string XSUPDATE {
            get {
                return ResourceManager.GetString("XSUPDATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Yes ähnelt.
        /// </summary>
        public static string YES {
            get {
                return ResourceManager.GetString("YES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Yes ähnelt.
        /// </summary>
        public static string YES_BUTTON_CAPTION {
            get {
                return ResourceManager.GetString("YES_BUTTON_CAPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die was yesterday ähnelt.
        /// </summary>
        public static string YESTERDAY {
            get {
                return ResourceManager.GetString("YESTERDAY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are here ähnelt.
        /// </summary>
        public static string YOU_ARE_HERE {
            get {
                return ResourceManager.GetString("YOU_ARE_HERE", resourceCulture);
            }
        }
    }
}
